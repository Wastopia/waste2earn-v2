{"version":3,"file":"static/js/9281.f4c1ccb5.chunk.js","mappings":"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","sources":["assets/icons/Copy.svg","components/ConnectWallet.tsx","components/MaxButton.tsx","components/qrcode/index.tsx","assets/icons/refresh.svg","components/Wallet/context.ts","components/Wallet/WalletAccount.tsx","components/QRReader.tsx","components/TokenTransfer/index.tsx","components/XTCTopup/index.tsx","hooks/token/dip20.ts","components/Wallet/NFIDTransfer.tsx","components/Wallet/Receive.tsx","components/Wallet/TokenListTable.tsx","assets/icons/add.svg","components/Wallet/AddToken/modal.tsx","components/Wallet/AddToken/index.tsx","components/Wallet/PageToggle.tsx","components/Wallet/TokenListHeader.tsx","components/Wallet/TokenList.tsx","views/wallet/index.tsx","../packages/utils/src/isValidAccount.ts"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 4H2V10H8V4ZM2 3C1.44772 3 1 3.44772 1 4V10C1 10.5523 1.44772 11 2 11H8C8.55228 11 9 10.5523 9 10V4C9 3.44772 8.55228 3 8 3H2Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 9L10 2L3 2L3 0.999999L10 1C10.5523 1 11 1.44772 11 2L11 9L10 9Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/Copy.351d8604b102850f77eb6e2d05b49bb6.svg\";\nexport { ForwardRef as ReactComponent };","import { Grid, Box, Typography, Button } from \"@mui/material\";\nimport { MainCard } from \"components/index\";\nimport NoData from \"components/no-data\";\nimport { useWalletConnectorManager } from \"store/auth/hooks\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function ConnectWallet() {\n  const [, walletManager] = useWalletConnectorManager();\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box sx={{ maxWidth: \"1400px\", width: \"100%\" }}>\n        <MainCard level={3}>\n          <Grid container alignItems=\"center\" flexDirection=\"column\" sx={{ height: \"250px\" }}>\n            <NoData />\n            <Typography color=\"text.primary\">\n              <Trans>Connect wallet to view</Trans>\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={() => walletManager(true)}\n              sx={{ width: \"100%\", maxWidth: \"522px\", marginTop: \"23px\" }}\n              size=\"large\"\n            >\n              <Trans>Connect Wallet</Trans>\n            </Button>\n          </Grid>\n        </MainCard>\n      </Box>\n    </Grid>\n  );\n}\n","import { Typography, TypographyProps } from \"@mui/material\";\nimport { useTheme } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function MaxButton(props: TypographyProps) {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Typography\n      {...props}\n      sx={{\n        padding: \"1px 3px\",\n        cursor: \"pointer\",\n        borderRadius: \"2px\",\n        backgroundColor: theme.colors.secondaryMain,\n        color: \"#ffffff\",\n        fontSize: \"12px\",\n        ...(props.sx ?? {}),\n      }}\n    >\n      <Trans>Max</Trans>\n    </Typography>\n  );\n}\n","import QRCode from \"qrcode.react\";\n\nexport interface QRCodeProps {\n  width?: number;\n  height?: number;\n  value: string;\n}\n\nexport default ({ value, ...props }: QRCodeProps) => {\n  return <QRCode value={value} {...props} />;\n};\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRefresh(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_36506_15939)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.0013 3.33268V0.666016L4.66797 3.99935L8.0013 7.33268V4.66602C10.208 4.66602 12.0013 6.45935 12.0013 8.66602C12.0013 10.8727 10.208 12.666 8.0013 12.666C5.79464 12.666 4.0013 10.8727 4.0013 8.66602H2.66797C2.66797 11.6127 5.05464 13.9993 8.0013 13.9993C10.948 13.9993 13.3346 11.6127 13.3346 8.66602C13.3346 5.71935 10.948 3.33268 8.0013 3.33268Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_36506_15939\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRefresh);\nexport default __webpack_public_path__ + \"static/media/refresh.c4b33d449a121c8f8626c6c7d9b9df0f.svg\";\nexport { ForwardRef as ReactComponent };","import { createContext } from \"react\";\nimport BigNumber from \"bignumber.js\";\n\nexport type TokenBalance = { [tokenId: string]: BigNumber };\n\nexport type Page = \"token\" | \"nft\";\n\nexport interface WalletContextProps {\n  refreshTotalBalance?: boolean;\n  setRefreshTotalBalance?: (refreshTotalBalance: boolean) => void;\n  refreshCounter: number;\n  setRefreshCounter: (refreshCounter: number) => void;\n  totalValue: BigNumber;\n  setTotalValue: (tokenId: string, value: BigNumber) => void;\n  transferTo: string;\n  setTransferTo: (transferTo: string) => void;\n  transferAmount: BigNumber;\n  setTransferAmount: (transferAmount: BigNumber) => void;\n  page: Page;\n  setPage: (page: Page) => void;\n  totalUSDBeforeChange: BigNumber;\n  setTotalUSDBeforeChange: (tokenId: string, value: BigNumber) => void;\n}\n\nexport default createContext<WalletContextProps>({} as WalletContextProps);\n","import { useContext, useMemo, useRef } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { formatDollarAmount, principalToAccount } from \"@w2e/utils\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { useSuccessTip } from \"hooks/useTips\";\nimport { useICPPrice } from \"hooks/useUSDPrice\";\nimport { ReactComponent as CopyIcon } from \"assets/icons/Copy.svg\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport Copy, { CopyRef } from \"components/Copy\";\nimport { ReactComponent as RefreshIcon } from \"assets/icons/refresh.svg\";\nimport WalletContext from \"./context\";\n\nexport interface AddressWrapperProps {\n  address: string | undefined;\n  label: string;\n}\n\nexport function AddressWrapper({ address, label }: AddressWrapperProps) {\n  const copyRef = useRef<CopyRef>(null);\n\n  const handleCopy = () => {\n    if (copyRef) {\n      copyRef?.current?.copy();\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        maxWidth: \"286px\",\n        borderRadius: \"8px\",\n        padding: \"12px\",\n        border: \"1px solid #29314F\",\n        height: \"fit-content\",\n        \"@media(max-width: 640px)\": {\n          maxWidth: \"100%\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: \"70px\",\n          height: \"20px\",\n          borderRadius: \"30px\",\n          background: \"#29314F\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography sx={{ fontSize: \"12px\", transform: \"scale(0.9)\" }}>{label}</Typography>\n      </Box>\n\n      <Box sx={{ margin: \"8px 0 0 0\", wordBreak: \"break-all\" }}>\n        <Typography\n          sx={{ fontSize: \"12px\", whiteSpace: \"break-spaces\", cursor: \"pointer\", userSelect: \"none\" }}\n          component=\"span\"\n          onClick={handleCopy}\n        >\n          {address}\n        </Typography>\n        <Box component=\"span\" sx={{ cursor: \"pointer\", margin: \"0 0 0 4px\", color: \"#5669DC\" }} onClick={handleCopy}>\n          <CopyIcon />\n        </Box>\n      </Box>\n\n      <Copy content={address ?? \"\"} hide ref={copyRef} />\n    </Box>\n  );\n}\n\nexport default function WalletAccount() {\n  const icpPrice = useICPPrice();\n\n  const principal = useAccountPrincipal();\n  const [openSuccessTip] = useSuccessTip();\n\n  const {\n    refreshTotalBalance,\n    setRefreshTotalBalance,\n    refreshCounter,\n    setRefreshCounter,\n    totalValue,\n    totalUSDBeforeChange,\n  } = useContext(WalletContext);\n\n  const useTotalICPValue = useMemo(() => {\n    if (icpPrice) return totalValue.dividedBy(icpPrice);\n    return undefined;\n  }, [totalValue, icpPrice]);\n\n  const usdChange = useMemo(() => {\n    if (totalValue.isEqualTo(0) || totalUSDBeforeChange.isEqualTo(0)) return undefined;\n    return `${totalValue.minus(totalUSDBeforeChange).dividedBy(totalUSDBeforeChange).multipliedBy(100).toFixed(2)}%`;\n  }, [totalUSDBeforeChange, totalValue]);\n\n  const usdChangeType = usdChange && usdChange.includes(\"-\") ? \"down\" : \"up\";\n  const USDChangeColor = usdChangeType === \"up\" ? \"#54C081\" : \"#D3625B\";\n\n  const handleRefreshBalance = () => {\n    if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n    setRefreshCounter(refreshCounter + 1);\n    openSuccessTip(\"Refresh Success\");\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        padding: \"0 0 30px 0\",\n        borderBottom: \"1px solid #29314F\",\n        \"@media(max-width: 640px)\": {\n          flexDirection: \"column\",\n          gap: \"20px 0\",\n        },\n      }}\n    >\n      <Box>\n        <Box sx={{ display: \"flex\", gap: \"0 8px\", alignItems: \"center\" }}>\n          <Typography>\n            <Trans>Estimated Balance</Trans>\n          </Typography>\n\n          <RefreshIcon style={{ cursor: \"pointer\" }} onClick={handleRefreshBalance} />\n        </Box>\n\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <Typography component=\"span\" sx={{ fontSize: \"32px\", fontWeight: 600 }} color=\"text.primary\">\n            ≈{formatDollarAmount(totalValue.toString(), 2)}\n          </Typography>\n        </Box>\n\n        <Box sx={{ margin: \"6px 0 0 0\", display: \"flex\", gap: \"0 8px\" }}>\n          <Typography>≈{useTotalICPValue ? useTotalICPValue.toFormat(4) : 0}&nbsp;ICP</Typography>\n          <Typography sx={{ color: USDChangeColor }} component=\"span\">\n            {usdChange ? `${usdChangeType === \"down\" ? \"\" : \"+\"}${usdChange}` : \"--\"}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          gap: \"0 12px\",\n          \"@media(max-width: 640px)\": {\n            flexDirection: \"column\",\n            gap: \"20px 0\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            minWidth: \"286px\",\n            \"@media(max-width: 640px)\": {\n              minWidth: \"100%\",\n            },\n          }}\n        >\n          <AddressWrapper\n            address={principal ? principalToAccount(principal?.toString()) : \"--\"}\n            label={t`Account ID`}\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"286px\",\n            \"@media(max-width: 640px)\": {\n              minWidth: \"100%\",\n            },\n          }}\n        >\n          <AddressWrapper address={principal ? principal.toString() : \"--\"} label={t`Principal ID`} />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import Button from \"@mui/material/Button\";\nimport { Result, useZxing } from \"react-zxing\";\n\ntype QrReaderProps = {\n  onResult: (result: Result) => void;\n  setVisible: (visible: boolean) => void;\n  visible: boolean;\n};\n\nexport default function QRReader(props: QrReaderProps) {\n  const { ref } = useZxing({\n    onResult: props.onResult,\n    paused: !props.visible,\n    constraints: {\n      video: {\n        facingMode: \"environment\",\n      },\n    },\n  });\n\n  if (!props.visible) return null;\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center justify-between p-5 mb-5 border rounded-lg\">\n        <video ref={ref} className=\"w-full h-72\" />\n      </div>\n\n      <Button className=\"w-full m-0\" onClick={() => props.setVisible(false)}>\n        Cancel\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useContext, useMemo } from \"react\";\nimport { Button, Grid, Typography, Box, InputAdornment, IconButton } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  parseTokenAmount,\n  formatTokenAmount,\n  isValidAccount,\n  isValidPrincipal,\n  toSignificantWithGroupSeparator,\n} from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { ICP, W2E } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { tokenTransfer } from \"hooks/token/calls\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount, useAccountPrincipal } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, FilledTextField, NumberFilledTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport MaxButton from \"components/MaxButton\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\nimport { QrCode } from \"@mui/icons-material\";\nimport QRReader from \"components/QRReader\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  weight: string;\n  amount: number;\n};\n\nfunction usePrincipalStandard(tokenId: string, standard: string) {\n  return (standard.includes(\"DIP20\") || standard.includes(\"ICRC\")) && tokenId !== ICP.address;\n}\n\nfunction useAccountStandard(tokenId: string, standard: string) {\n  return !usePrincipalStandard(tokenId, standard);\n}\n\nexport interface TransferModalProps {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n  transferTo?: string;\n}\n\nexport default function TransferModal({ open, onClose, onTransferSuccess, token, transferTo }: TransferModalProps) {\n  const [qrReaderOpen, setQrReaderOpen] = React.useState(false);\n  const [principalFromState, setPrincipalFromState] = React.useState(\"\");\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const principal = useAccountPrincipal() || principalFromState;\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n\n  const { result: balance } = useTokenBalance(token.canisterId, principal);\n  const tokenUSDPrice = useUSDPriceById(token.canisterId);\n\n  const initialValues = {\n    to: transferTo ?? \"\",\n    weight: \"\",\n    amount: 0,\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const handleQrResult = (result: unknown) => {\n    const p = result as any;\n    if (p?.text) {\n      setPrincipalFromState(p.text);\n      handleFieldChange(p.text, \"to\"); // Update the 'to' field value\n    }\n    setQrReaderOpen(false);\n  };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (usePrincipalStandard(token.canisterId, token.standardType)) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to) && !isValidPrincipal(values.to)) return t`Invalid account ID or principal ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (\n      values.amount &&\n      new BigNumber(values.amount ?? 0).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n    )\n      return t`Insufficient balance`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n\n    return undefined;\n  };\n\n  const handleSubmit = async (identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading || !account) return;\n\n      // Calculate the actual transfer amount considering weight\n      const weight = new BigNumber(values.weight ?? 0);\n      const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n\n      const actualTransferAmount = amount.minus(parseTokenAmount(token.transFee, token.decimals));\n\n      if (actualTransferAmount.isLessThanOrEqualTo(0)) {\n        openErrorTip(t`Transfer amount must be greater than transaction fee.`);\n        return;\n      }\n\n      const { status, message } = await tokenTransfer({\n        canisterId: token.canisterId.toString(),\n        to: values.to,\n        amount: formatTokenAmount(\n          new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)),\n          token.decimals,\n        ),\n        from: account,\n        fee: token.transFee,\n        decimals: token.decimals,\n      });\n\n      if (status === \"ok\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP.address || token.canisterId.toString() === W2E.address) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      } else {\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const actualTransferAmount = useMemo(() => {\n    const weight = new BigNumber(values.weight ?? 0);\n    const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n    return amount.isGreaterThan(0) ? amount.minus(parseTokenAmount(token.transFee, token.decimals)).toString() : \"0\";\n  }, [values, token]);\n\n  const addressHelpText = () => {\n    if (\n      (usePrincipalStandard(token.canisterId, token.standardType) && principalString === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) && account === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) &&\n        isValidPrincipal(values.to) &&\n        principalString === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  const handleMax = (event: React.MouseEvent<HTMLParagraphElement>) => {\n    event.stopPropagation();\n\n    if (balance) {\n      handleFieldChange(parseTokenAmount(balance, token.decimals).toString(), \"amount\");\n    }\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`Transfer`}>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\" }}>\n        <FilledTextField value={token.symbol} fullWidth />\n\n        {!qrReaderOpen && (\n          <FilledTextField\n            value={values.to} // Use principal if available, else use 'to' field value\n            placeholder={\n              usePrincipalStandard(token.canisterId, token.standardType)\n                ? t`Scan QR to get the principal ID`\n                : t`Enter the account ID or principal ID`\n            }\n            onChange={(value: string) => handleFieldChange(value, \"to\")}\n            helperText={addressHelpText()}\n            fullWidth\n            autoComplete=\"To\"\n            multiline\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setQrReaderOpen(true)}>\n                    <QrCode className=\"w-4 h-4\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n        <QRReader\n          setVisible={setQrReaderOpen}\n          visible={qrReaderOpen}\n          onResult={handleQrResult}\n        />\n        <NumberFilledTextField\n          placeholder=\"Enter weight in kilogram\"\n          value={values.weight}\n          onChange={(value: string) => handleFieldChange(value, \"weight\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n          }}\n          autoComplete=\"off\"\n        />\n        <NumberFilledTextField\n          placeholder=\"Enter the amount\"\n          value={values.amount}\n          onChange={(value: string) => handleFieldChange(value, \"amount\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n            decimalScale: token.decimals,\n          }}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Typography color=\"text.primary\">\n                  {tokenUSDPrice && values.amount\n                    ? `~$${toSignificantWithGroupSeparator(\n                      new BigNumber(values.amount).multipliedBy(tokenUSDPrice).toString(),\n                      4,\n                    )}`\n                    : \"--\"}\n                </Typography>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Grid container alignItems=\"center\">\n          <Typography>\n            <Trans>\n              Balance:{\" \"}\n              {`${balance\n                ? new BigNumber(\n                  parseTokenAmount(balance, token.decimals).toFixed(token.decimals > 8 ? 8 : token.decimals),\n                ).toFormat()\n                : \"--\"\n                }`}\n            </Trans>\n          </Typography>\n          <MaxButton\n            sx={{\n              marginLeft: \"6px\",\n            }}\n            onClick={handleMax}\n          />\n        </Grid>\n        <Typography>\n          <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              parseTokenAmount(token.transFee.toString(), token.decimals).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography>\n          <Trans>Actually:</Trans> {toSignificantWithGroupSeparator(actualTransferAmount, 18)}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              new BigNumber(actualTransferAmount).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography color=\"text.warning\">\n          <Trans>Please ensure that the receiving address supports this Token/NFT!</Trans>\n        </Typography>\n        <Identity onSubmit={handleSubmit} fullScreenLoading>\n          {({ submit, loading }: CallbackProps) => (\n            <Button\n              variant=\"contained\"\n              fullWidth\n              color=\"primary\"\n              size=\"large\"\n              disabled={loading || !!errorMessage}\n              onClick={submit}\n            >\n              {errorMessage || (!loading ? <Trans>Confirm</Trans> : <CircularProgress size={26} color=\"inherit\" />)}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { FilledTextField, Modal, TextFieldNumberComponent, MaxButton } from \"components/index\";\nimport { Box, Button, Typography, Grid } from \"@mui/material\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { XTC } from \"constants/tokens\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { parseTokenAmount, formatTokenAmount, numberToString, isValidPrincipal } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { useTips, TIP_LOADING, TIP_SUCCESS, TIP_ERROR } from \"hooks/useTips\";\nimport { useXTCTopUp } from \"hooks/token/dip20\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { ResultStatus } from \"constants/index\";\n\nexport interface XTCTopUpProps {\n  open: boolean;\n  onClose: () => void;\n  onTopUpSuccess?: () => void;\n}\n\nexport interface Values {\n  amount: string | number;\n  canisterId: string;\n}\n\nexport default function XTCTopUp({ open, onClose, onTopUpSuccess }: XTCTopUpProps) {\n  const principal = useAccountPrincipal();\n  const { result: token } = useTokenInfo(XTC.address);\n  const { result: balance, loading } = useTokenBalance(XTC.address, principal);\n\n  const defaultValues = {\n    canisterId: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(defaultValues);\n  const [openTip, closeTip] = useTips();\n\n  const onFieldChange = (value: any, field: string) => {\n    setValues((prevState) => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const XTCTopUp = useXTCTopUp();\n\n  const handleTopUp = async (identity: CallIdentity, { loading }: SubmitLoadingProps) => {\n    if (loading || !token) return;\n\n    onClose();\n    setValues(defaultValues);\n\n    const loadingTipKey = openTip(t`Top-up ${values.amount} XTC to canister ${values.canisterId}`, TIP_LOADING);\n\n    const { status, message } = await XTCTopUp({\n      identity,\n      canisterId: values.canisterId,\n      amount: BigInt(numberToString(formatTokenAmount(values.amount, token.decimals).minus(Number(token.transFee)))),\n    });\n\n    closeTip(loadingTipKey);\n\n    if (status === ResultStatus.OK) {\n      openTip(t`Top-up successfully`, TIP_SUCCESS);\n      if (onTopUpSuccess) onTopUpSuccess();\n    } else {\n      openTip(getLocaleMessage(message) ?? message, TIP_ERROR);\n    }\n  };\n\n  const handleMax = () => {\n    if (balance && token) {\n      setValues((prevState) => ({\n        ...prevState,\n        amount: parseTokenAmount(balance, token.decimals).toNumber(),\n      }));\n    }\n  };\n\n  let errorMessage = \"\";\n  if (\n    values.amount &&\n    token &&\n    new BigNumber(Number(values.amount)).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n  )\n    errorMessage = t`Insufficient balance`;\n  if (!values.amount) errorMessage = t`Enter top-up XTC amount`;\n  if (values.canisterId && !isValidPrincipal(values.canisterId)) errorMessage = t`Invalid canister id`;\n  if (!values.canisterId) errorMessage = t`Enter top-up canister id`;\n\n  return (\n    <Modal open={open} title={t`Top-up a Canister by XTC`} onClose={onClose}>\n      <Box>\n        <FilledTextField\n          label={<Trans>Canister ID</Trans>}\n          onChange={(value) => onFieldChange(value, \"canisterId\")}\n          placeholder={t`Enter a canister ID`}\n        />\n      </Box>\n\n      <Box mt=\"20px\">\n        <FilledTextField\n          label={<Trans>Amount</Trans>}\n          value={values.amount}\n          onChange={(value) => onFieldChange(value, \"amount\")}\n          InputProps={{\n            inputComponent: TextFieldNumberComponent,\n            inputProps: {\n              allowNegative: false,\n              decimalScale: 4,\n              maxLength: 16,\n            },\n          }}\n          placeholder={t`Enter top-up amount`}\n        />\n      </Box>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Balance:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\" sx={{ marginRight: \"4px\" }}>\n          {balance ? parseTokenAmount(balance, token?.decimals).toFormat() : loading ? \"--\" : 0}\n        </Typography>\n        <MaxButton onClick={handleMax} />\n      </Grid>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Fee:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\">\n          {token ? parseTokenAmount(token.transFee, token?.decimals).toFormat() : 0}\n        </Typography>\n      </Grid>\n\n      <Box mt=\"40px\">\n        <Identity onSubmit={handleTopUp}>\n          {({ submit }: CallbackProps) => (\n            <Button size=\"large\" fullWidth variant=\"contained\" onClick={submit} disabled={!!errorMessage}>\n              {errorMessage || <Trans>Submit</Trans>}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useCallback } from \"react\";\nimport { xtc } from \"@w2e/actor\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { Principal } from \"@dfinity/principal\";\nimport { resultFormat } from \"@w2e/utils\";\n\nexport interface XTCTopUpProps {\n  canisterId: string;\n  amount: bigint | number;\n  identity: CallIdentity;\n}\n\nexport function useXTCTopUp() {\n  return useCallback(async ({ canisterId, amount, identity }: XTCTopUpProps) => {\n    return resultFormat<bigint>(\n      await (await xtc(identity)).burn({ canister_id: Principal.fromText(canisterId), amount: BigInt(amount) }),\n    );\n  }, []);\n}\n","import { useState, useContext } from \"react\";\nimport { Button, Grid, TextField, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { parseTokenAmount, isValidAccount } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { ICP_TOKEN_INFO } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, NumberTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport { NFIDRequestTransfer } from \"utils/connector/NF_ID\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  amount: string;\n};\n\nexport default function NFIDTransferModal({\n  open,\n  onClose,\n  onTransferSuccess,\n  token,\n}: {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n}) {\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n\n  const initialValues = {\n    to: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (token.standardType.includes(\"DIP20\")) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to)) return t`Invalid account ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n  };\n\n  const handleSubmit = async (identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading) return;\n\n      const result = await NFIDRequestTransfer({\n        to: values.to,\n        amount: Number(new BigNumber(values.amount).toFixed(8, BigNumber.ROUND_DOWN)),\n      });\n\n      if (result.status === \"SUCCESS\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP_TOKEN_INFO.canisterId) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      }\n\n      if (result.status === \"REJECTED\" || result.status === \"ERROR\") {\n        openErrorTip(getLocaleMessage(result.message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const balanceActuallyToAccount = () => {\n    const amount = new BigNumber(values.amount ?? 0).minus(parseTokenAmount(token.transFee, token.decimals));\n    return amount.isGreaterThan(0) ? amount.toFormat() : 0;\n  };\n\n  const addressHelpText = () => {\n    if (\n      (token.standardType.includes(\"DIP20\") && principalString === values.to) ||\n      (!token.standardType.includes(\"DIP20\") && account === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`NFID Transfer`}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField label={t`Token Symbol`} value={token.symbol} fullWidth disabled />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            label={t`To`}\n            value={values.to}\n            placeholder={token.standardType.includes(\"DIP20\") ? t`Enter the principal ID` : \"Enter the account ID\"}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"to\")}\n            helperText={addressHelpText()}\n            fullWidth\n            autoComplete=\"To\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <NumberTextField\n            label={t`Amount`}\n            type=\"text\"\n            value={values.amount}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"amount\")}\n            fullWidth\n            inputProps={{\n              autocomplete: \"new-password\",\n              form: {\n                autocomplete: \"off\",\n              },\n            }}\n            numericProps={{\n              allowNegative: false,\n              decimalScale: token.decimals,\n            }}\n            autoComplete=\"off\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Actually:</Trans> {balanceActuallyToAccount()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography color=\"text.warning\">\n            <Trans>Please ensure that the receiving address supports this Token/NFT!</Trans>\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Identity onSubmit={handleSubmit} fullScreenLoading>\n            {({ submit, loading }: CallbackProps) => (\n              <Button\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                size=\"large\"\n                disabled={loading || !!errorMessage}\n                onClick={submit}\n              >\n                {errorMessage || (!loading ? (\n                  <Trans>Approve by NFID</Trans>\n                ) : (\n                  <CircularProgress size={26} color=\"inherit\" />\n                ))}\n              </Button>\n            )}\n          </Identity>\n        </Grid>\n      </Grid>\n    </Modal>\n  );\n}\n","import { useRef } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport QRCode from \"../qrcode\";\nimport Modal from \"../modal/index\";\nimport Copy, { CopyRef } from \"../Copy\";\n\nexport interface ReceiveModalProps {\n  open: boolean;\n  onClose: () => void;\n  address: string;\n}\n\nexport function ReceiveModal({ open, onClose, address }: ReceiveModalProps) {\n  const copy = useRef<CopyRef>(null);\n\n  const onConfirm = () => {\n    copy?.current?.copy();\n  };\n\n  return (\n    <Modal\n      title={t`Receive`}\n      open={open}\n      onClose={onClose}\n      showConfirm\n      onConfirm={onConfirm}\n      confirmText={t`Copy Address`}\n    >\n      <Grid container spacing={2}>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <QRCode value={address} />\n          </Grid>\n        </Grid>\n\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                wordBreak: \"break-all\",\n              }}\n            >\n              {address}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Copy ref={copy} content={address} hide />\n    </Modal>\n  );\n}\n","import { useState, useContext, useMemo, useEffect } from \"react\";\nimport { Typography, Box, useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatDollarAmount, parseTokenAmount, mockALinkAndOpen, BigNumber, principalToAccount } from \"@w2e/utils\";\nimport TransferModal from \"components/TokenTransfer/index\";\nimport { NoData, LoadingRow } from \"components/index\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { ICP, Connector, NO_HIDDEN_TOKENS, INFO_URL } from \"constants/index\";\nimport { useAccount } from \"store/global/hooks\";\nimport { t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport WalletContext from \"components/Wallet/context\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { TokenInfo } from \"types/token\";\nimport { useAccountPrincipal, useConnectorType } from \"store/auth/hooks\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport { ckETH, ckBTC, WRAPPED_ICP, ICP_TOKEN_INFO, TOKEN_STANDARD, XTC, } from \"constants/tokens\";\nimport XTCTopUpModal from \"components/XTCTopup/index\";\nimport { useInfoToken } from \"hooks/info/useInfoTokens\";\nimport { useToken } from \"hooks/useCurrency\";\nimport NFIDTransfer from \"components/Wallet/NFIDTransfer\";\nimport { useHistory } from \"react-router-dom\";\nimport { isHouseUserTokenTransactions } from \"utils/index\";\nimport { TokenImage } from \"components/Image/Token\";\nimport { useSNSTokenRootId } from \"hooks/token/useSNSTokenRootId\";\nimport { ReceiveModal } from \"./Receive\";\n\nconst useStyles = makeStyles(() => ({\n  tokenAssets: {\n    fontSize: \"0.6rem\",\n  },\n  walletSymbol: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\ninterface ActionButtonProps {\n  label: string;\n  onClick?: () => void;\n}\n\nfunction ActionButton({ label, onClick }: ActionButtonProps) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        padding: \"7px 12px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: \"#4F5A84\",\n        borderRadius: \"8px\",\n        cursor: \"pointer\",\n      }}\n      onClick={onClick}\n    >\n      <Typography color=\"text.primary\">{label}</Typography>\n    </Box>\n  );\n}\n\nexport const XTCTopUpIcon = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9987 13.334C10.9442 13.334 13.332 10.9462 13.332 8.00065C13.332 5.05513 10.9442 2.66732 7.9987 2.66732C5.05318 2.66732 2.66536 5.05513 2.66536 8.00065C2.66536 10.9462 5.05318 13.334 7.9987 13.334ZM7.9987 14.6673C11.6806 14.6673 14.6654 11.6825 14.6654 8.00065C14.6654 4.31875 11.6806 1.33398 7.9987 1.33398C4.3168 1.33398 1.33203 4.31875 1.33203 8.00065C1.33203 11.6825 4.3168 14.6673 7.9987 14.6673Z\"\n        fill=\"#5669DC\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9678 6.58579L6.55359 8L7.9678 9.41421L9.38201 8L7.9678 6.58579ZM4.66797 8L7.9678 11.2998L11.2676 8L7.9678 4.70017L4.66797 8Z\"\n        fill=\"#5669DC\"\n      />\n    </svg>\n  );\n};\n\ntype ckTOKEN = {\n  id: string;\n  mintPath: string;\n  dissolvePath: string;\n};\n\nconst ckTokens: ckTOKEN[] = [\n  { id: ckBTC.address, mintPath: \"/wallet/ckBTC?type=mint\", dissolvePath: \"/wallet/ckBTC?type=dissolve\" },\n  { id: ckETH.address, mintPath: \"/wallet/ckETH?type=mint\", dissolvePath: \"/wallet/ckETH?type=dissolve\" },\n];\n\nfunction ChainKeyTokenButtons({ ckToken }: { ckToken: ckTOKEN }) {\n  const history = useHistory();\n\n  const handleCKTokenMint = (path: string) => {\n    history.push(path);\n  };\n\n  const handleCKTokenDissolve = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <>\n      <ActionButton label={t`Mint`} onClick={() => handleCKTokenMint(ckToken.mintPath)} />\n      <ActionButton label={t`Dissolve`} onClick={() => handleCKTokenDissolve(ckToken.dissolvePath)} />\n    </>\n  );\n}\n\nconst SWAP_BUTTON_EXCLUDE = [ICP_TOKEN_INFO.canisterId, WRAPPED_ICP.address];\n\nexport interface TokenListItemProps {\n  isHideSmallBalances: boolean;\n  searchValue: string;\n  canisterId: string;\n}\n\nexport function TokenListItem({ canisterId, isHideSmallBalances, searchValue }: TokenListItemProps) {\n  const classes = useStyles();\n  const account = useAccount();\n  const theme = useTheme() as Theme;\n  const principal = useAccountPrincipal();\n\n  const walletType = useConnectorType();\n\n  const history = useHistory();\n\n  const [, currency] = useToken(canisterId);\n\n  const infoToken = useInfoToken(currency?.address);\n\n  const tokenUSDPrice = useMemo(() => {\n    return infoToken?.priceUSD;\n  }, [infoToken]);\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n  const [XTCTopUpShow, setXTCTopUpShow] = useState(false);\n\n  const [refreshInnerCounter, setRefreshInnerCounter] = useState<number>(0);\n\n  const [open, setOpen] = useState(false);\n  const [receiveOpen, setReceiveOpen] = useState(false);\n  const [NFIDTransferOpen, setNFIDTransferOpen] = useState(false);\n\n  const { refreshCounter, setTotalValue, setTotalUSDBeforeChange } = useContext(WalletContext);\n\n  const refreshNumber = useMemo(() => {\n    return refreshInnerCounter + refreshCounter;\n  }, [refreshInnerCounter, refreshCounter]);\n\n  const { result: tokenBalance } = useTokenBalance(canisterId, principal, refreshNumber);\n\n  useEffect(() => {\n    if (\n      tokenInfo &&\n      tokenInfo.decimals !== undefined &&\n      tokenInfo.transFee !== undefined &&\n      tokenBalance &&\n      infoToken\n    ) {\n      setTotalValue(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(infoToken.priceUSD),\n      );\n\n      const usdBeforeChange = new BigNumber(infoToken.priceUSD).div(\n        new BigNumber(infoToken.priceUSDChange).dividedBy(100).plus(1),\n      );\n\n      setTotalUSDBeforeChange(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(usdBeforeChange),\n      );\n    }\n  }, [tokenBalance, infoToken, tokenInfo]);\n\n  const handleCloseModal = async () => {\n    setOpen(false);\n  };\n\n  const handleTransferSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n    handleCloseModal();\n    setNFIDTransferOpen(false);\n  };\n\n  const handleTopUpSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n  };\n\n  const handleTransfer = async () => {\n    setOpen(true);\n  };\n\n  const root_canister_id = useSNSTokenRootId(canisterId);\n\n  const handleToTransactions = () => {\n    if (!tokenInfo || !principal) return;\n\n    const { canisterId, standardType, symbol } = tokenInfo;\n\n    if (symbol === ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(`https://dashboard.internetcomputer.org/account//${account}`, \"TOKEN_TRANSACTIONS\");\n    } else if (root_canister_id) {\n      mockALinkAndOpen(\n        `https://dashboard.internetcomputer.org/sns/${root_canister_id}/account/${principal.toString()}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    } else if (tokenInfo.standardType === TOKEN_STANDARD.ICRC1 || tokenInfo.standardType === TOKEN_STANDARD.ICRC2) {\n      const url = isHouseUserTokenTransactions(tokenInfo.canisterId, principal?.toString());\n      mockALinkAndOpen(url, \"TOKEN_TRANSACTIONS\");\n    } else {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/transactions/${canisterId}/${principal?.toString()}?standard=${standardType}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    }\n  };\n\n  const handleLoadToDetail = (tokenInfo: TokenInfo | undefined) => {\n    if (tokenInfo && tokenInfo.symbol !== ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/details/${tokenInfo?.canisterId}?standard=${tokenInfo?.standardType}`,\n        \"TOKEN_DETAILs\",\n      );\n    }\n  };\n\n  const handleXTCTopUp = () => {\n    setXTCTopUpShow(true);\n  };\n\n  const handleWrappedICP = (value: \"wrap\" | \"unwrap\") => {\n    if (value === \"wrap\") {\n      history.push(\"/swap/v2/wrap?input=icp\");\n      return;\n    }\n\n    history.push(\"/swap/v2/wrap?input=wicp\");\n  };\n\n  const isHidden = useMemo(() => {\n    const hiddenBySmallBalance = isHideSmallBalances && !!tokenBalance && !tokenBalance?.isGreaterThan(0);\n\n    const hiddenBySearchValue = searchValue\n      ? !tokenInfo?.symbol\n        ? true\n        : !tokenInfo?.symbol.toLowerCase().includes(searchValue.toLowerCase())\n      : false;\n\n    if (NO_HIDDEN_TOKENS.includes(canisterId)) return false;\n\n    return hiddenBySmallBalance || hiddenBySearchValue;\n  }, [isHideSmallBalances, tokenBalance, canisterId, searchValue, tokenInfo]);\n\n  const handleToSwap = () => {\n    history.push(`/swap?input=${canisterId}&output=${ICP.address}`);\n  };\n\n  const handleReceive = () => {\n    setReceiveOpen(true);\n  };\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"12px\",\n        background: theme.palette.background.level4,\n        padding: \"20px\",\n        maxWidth: \"100%\",\n        overflow: \"hidden\",\n        ...(isHidden ? { display: \"none\" } : {}),\n        \"@media(max-width: 640px)\": {\n          padding: \"10px\",\n        },\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Box sx={{ display: \"flex\", gap: \"0 10px\" }}>\n          <TokenImage size=\"40px\" logo={tokenInfo?.logo} tokenId={tokenInfo?.canisterId} />\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              className={tokenInfo?.symbol !== ICP_TOKEN_INFO.symbol ? classes.walletSymbol : \"\"}\n              onClick={() => handleLoadToDetail(tokenInfo)}\n              fontWeight={500}\n            >\n              {tokenInfo?.symbol}\n            </Typography>\n            <Typography sx={{ fontSize: \"12px\" }}>{tokenInfo?.name}</Typography>\n          </Box>\n        </Box>\n        <TokenStandardLabel standard={tokenInfo?.standardType} />\n      </Box>\n\n      <Box sx={{ display: \"flex\", margin: \"12px 0 0 0\" }}>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Balance</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {parseTokenAmount(tokenBalance, tokenInfo?.decimals).toFormat()}\n          </Typography>\n          <Typography className={classes.tokenAssets}>\n            {tokenUSDPrice && tokenBalance\n              ? `≈\n              ${formatDollarAmount(\n                parseTokenAmount(tokenBalance, tokenInfo?.decimals)\n                  .multipliedBy(tokenUSDPrice)\n                  .toString(),\n                4,\n              )}`\n              : \"--\"}\n          </Typography>\n        </Box>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Price</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {tokenUSDPrice ? formatDollarAmount(tokenUSDPrice) : \"--\"}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        sx={{ margin: \"24px 0 0 0\", display: \"flex\", justifyContent: \"flex-end\", gap: \"10px 10px\", flexWrap: \"wrap\" }}\n      >\n        {SWAP_BUTTON_EXCLUDE.includes(canisterId) ? null : <ActionButton label=\"Swap\" onClick={handleToSwap} />}\n\n        <ActionButton label=\"Send\" onClick={handleTransfer} />\n        <ActionButton label=\"Receive\" onClick={handleReceive} />\n        <ActionButton label=\"Transactions\" onClick={handleToTransactions} />\n\n        {canisterId === ICP.address && walletType === Connector.NFID ? (\n          <ActionButton label={t`NFID Transfer`} onClick={() => setNFIDTransferOpen(true)} />\n        ) : null}\n\n        {tokenInfo?.canisterId === XTC.address ? <ActionButton label={t`Top-up`} onClick={handleXTCTopUp} /> : null}\n\n        {tokenInfo?.canisterId === WRAPPED_ICP.address ? (\n          <>\n            <ActionButton label={t`Unwrap`} onClick={() => handleWrappedICP(\"unwrap\")} />\n            <ActionButton label={t`Wrap`} onClick={() => handleWrappedICP(\"wrap\")} />\n          </>\n        ) : null}\n\n        {ckTokens\n          .filter((ele) => ele.id === tokenInfo?.canisterId)\n          .map((ele) => (\n            <ChainKeyTokenButtons key={ele.id} ckToken={ele} />\n          ))}\n      </Box>\n\n      {open && !!tokenInfo ? (\n        <TransferModal\n          open={open}\n          onClose={handleCloseModal}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {NFIDTransferOpen && !!tokenInfo ? (\n        <NFIDTransfer\n          open={NFIDTransferOpen}\n          onClose={() => setNFIDTransferOpen(false)}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {XTCTopUpShow ? (\n        <XTCTopUpModal open={XTCTopUpShow} onClose={() => setXTCTopUpShow(false)} onTopUpSuccess={handleTopUpSuccess} />\n      ) : null}\n\n      {receiveOpen ? (\n        <ReceiveModal\n          open={receiveOpen}\n          onClose={() => setReceiveOpen(false)}\n          address={\n            !principal\n              ? \"\"\n              : tokenInfo?.standardType === TOKEN_STANDARD.EXT || tokenInfo?.canisterId === ICP.address\n                ? principalToAccount(principal.toString())\n                : principal.toString()\n          }\n        />\n      ) : null}\n    </Box>\n  );\n}\n\nexport interface TokenListProps {\n  list: string[];\n  loading?: boolean;\n  isHideSmallBalances: boolean;\n  searchValue: string;\n}\n\nexport default function TokenList({ list, loading, isHideSmallBalances, searchValue }: TokenListProps) {\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr\",\n        gap: \"20px\",\n        \"@media(max-width: 1088px)\": {\n          gridTemplateColumns: \"1fr 1fr\",\n          gap: \"12px 12px\",\n        },\n        \"@media(max-width: 640px)\": {\n          gridTemplateColumns: \"1fr\",\n          gap: \"12px 0\",\n        },\n      }}\n    >\n      {list.map((canisterId) => {\n        return (\n          <TokenListItem\n            key={canisterId}\n            canisterId={canisterId}\n            isHideSmallBalances={isHideSmallBalances}\n            searchValue={searchValue}\n          />\n        );\n      })}\n\n      {list.length === 0 && !loading ? <NoData /> : null}\n\n      {loading ? (\n        <LoadingRow>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRow>\n      ) : null}\n    </Box>\n  );\n}\n","var _rect, _rect2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 9,\n    y: 15,\n    width: 14,\n    height: 2,\n    rx: 1,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 17,\n    y: 9,\n    width: 14,\n    height: 2,\n    rx: 1,\n    transform: \"rotate(90 17 9)\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.1275c2ddf891660b4f992c81a6422aa9.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useMemo } from \"react\";\nimport { Button, Grid, Box, Typography, InputAdornment, useTheme, useMediaQuery } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useWalletCatchTokenIds, useSaveCacheTokenCallback, useDeleteCacheTokenCallback } from \"store/wallet/hooks\";\nimport { IconSearch } from \"@tabler/icons\";\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { useImportedTokens } from \"store/token/cache/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport ImportToken from \"components/Wallet/ImportToken\";\nimport { NoData, TextButton, Modal, FilledTextField } from \"components/index\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { TokenImage } from \"@w2e/ui\";\n\nexport function TokenItem({ canisterId }: { canisterId: string }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const walletCatchTokenIds = useWalletCatchTokenIds() ?? [];\n  const addToken = useSaveCacheTokenCallback();\n  const deleteToken = useDeleteCacheTokenCallback();\n\n  const handleAddToken = (canisterId: string) => {\n    addToken([canisterId]);\n  };\n\n  const handleDeleteToken = (canisterId: string) => {\n    deleteToken([canisterId]);\n  };\n\n  const hasBeenAdded = (canisterId: string) => {\n    return !!walletCatchTokenIds.find((tokenId) => tokenId === canisterId);\n  };\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        gridTemplateColumns: \"190px 1fr 80px\",\n        gap: \"0 20px\",\n        height: \"73px\",\n        alignItems: \"center\",\n        borderTop: \"1px solid rgba(189, 200, 240, 0.082)\",\n      }}\n    >\n      <Grid container alignItems=\"center\">\n        <TokenImage logo={tokenInfo?.logo} size=\"32px\" />\n\n        <Grid ml={1} item xs>\n          <Grid container alignItems=\"center\" mr=\"5px\">\n            <Grid\n              item\n              xs\n              sx={{\n                width: \"80px\",\n                overflow: \"hidden\",\n              }}\n            >\n              <Typography>{tokenInfo?.symbol}</Typography>\n              <Typography\n                fontSize={12}\n                color=\"textSecondary\"\n                sx={{\n                  width: \"100%\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                {tokenInfo?.name}\n              </Typography>\n            </Grid>\n\n            <TokenStandardLabel standard={tokenInfo?.standardType} />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Typography>{matchDownSM ? \"\" : tokenInfo?.canisterId}</Typography>\n\n      <>\n        {DISPLAY_IN_WALLET_FOREVER.includes(canisterId) ? null : hasBeenAdded(canisterId) ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<HorizontalRuleIcon fontSize=\"small\" />}\n            onClick={() => handleDeleteToken(canisterId)}\n          >\n            <Trans>Delete</Trans>\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<AddIcon fontSize=\"small\" />}\n            onClick={() => handleAddToken(canisterId)}\n          >\n            <Trans>Add</Trans>\n          </Button>\n        )}\n      </>\n    </Box>\n  );\n}\n\nexport default function AddTokenModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [queryValue, setQueryValue] = useState(\"\");\n  const [importTokenShow, setImportTokenShow] = useState(false);\n\n  const globalTokenList = useGlobalTokenList();\n  const importedTokens = useImportedTokens();\n\n  const handleSearch = async (values: string) => {\n    setQueryValue(values);\n  };\n\n  const tokens = useMemo(() => {\n    const iTokens = Object.keys(importedTokens ?? [])\n      .filter((canisterId) => !globalTokenList.find((token) => token.canisterId === canisterId))\n      .map((canisterId) => {\n        const token = importedTokens[canisterId];\n\n        return {\n          canisterId,\n          name: token.name,\n          symbol: token.symbol,\n        };\n      });\n\n    const _tokens = globalTokenList\n      .filter((token) => !token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n      .map((token) => ({\n        canisterId: token.canisterId,\n        name: token.name,\n        symbol: token.symbol,\n      }));\n\n    const tokens = [...iTokens, ..._tokens];\n\n    if (queryValue) {\n      return tokens.filter(\n        (token) =>\n          token.name.toLowerCase().includes(queryValue.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(queryValue.toLowerCase()),\n      );\n    }\n\n    return tokens;\n  }, [importedTokens, globalTokenList, queryValue]);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={onClose}\n        title={t`Add Tokens`}\n        dialogProps={{\n          sx: {\n            \"& .MuiPaper-root\": {\n              width: \"700px\",\n              maxWith: \"700px\",\n            },\n          },\n        }}\n      >\n        <Box>\n          <FilledTextField\n            contained\n            background={theme.palette.background.level1}\n            borderRadius=\"12px\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconSearch stroke={1.5} size=\"1rem\" />\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n            size={matchDownSM ? \"small\" : undefined}\n            placeholder={t`Search token`}\n            onChange={handleSearch}\n          />\n        </Box>\n\n        <Box mt=\"16px\">\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: \"190px 1fr 80px\",\n              gap: \"0 20px\",\n              height: \"57px\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography>\n              <Trans>Token</Trans>\n            </Typography>\n            <Typography sx={{ \"@media (max-width: 540px)\": { display: \"none\" } }}>\n              <Trans>Canister ID</Trans>\n            </Typography>\n            <Typography>&nbsp;</Typography>\n          </Box>\n\n          <Box\n            sx={{\n              maxHeight: \"260px\",\n              overflow: \"auto\",\n              \"@media (max-width: 540px)\": { maxHeight: \"290px\" },\n            }}\n          >\n            {tokens.map((token, index) => (\n              <TokenItem key={`${token.canisterId}-${index}}`} canisterId={token.canisterId} />\n            ))}\n          </Box>\n\n          {tokens.length === 0 ? (\n            <Box sx={{ borderTop: \"1px solid rgba(189, 200, 240, 0.082)\" }}>\n              <NoData />\n            </Box>\n          ) : null}\n        </Box>\n\n        <Grid\n          container\n          justifyContent=\"center\"\n          sx={{\n            paddingTop: \"20px\",\n            borderTop: \"1px solid rgba(81, 81, 81, 1)\",\n            borderColor: \"rgba(189, 200, 240, 0.082)\",\n          }}\n        >\n          <TextButton onClick={() => setImportTokenShow(true)}>\n            <Trans>Import Token</Trans>\n          </TextButton>\n        </Grid>\n      </Modal>\n\n      {importTokenShow ? (\n        <ImportToken\n          open={importTokenShow}\n          onClose={() => setImportTokenShow(false)}\n          onImportSuccessfully={() => onClose()}\n        />\n      ) : null}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { ReactComponent as AddIcon } from \"assets/icons/add.svg\";\nimport AddTokenModal from \"./modal\";\n\nexport default function AddToken() {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <AddIcon style={{ cursor: \"pointer\" }} onClick={() => setModalVisible(true)} />\n      {modalVisible ? <AddTokenModal open={modalVisible} onClose={() => setModalVisible(false)} /> : null}\n    </>\n  );\n}\n","import { useMemo, useContext } from \"react\";\nimport { Typography, Box } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport walletContext from \"./context\";\n\ntype Item = {\n  name: string;\n  pageName: \"token\" | \"nft\";\n};\n\nconst DISPLAY_ITEMS: Item[] = [\n  {\n    name: t`Token`,\n    pageName: \"token\",\n  },\n  {\n    name: t`NFT`,\n    pageName: \"nft\",\n  },\n];\n\nexport default function WalletPageToggle() {\n  const { page, setPage } = useContext(walletContext);\n\n  const currentDisplay = useMemo(() => {\n    return DISPLAY_ITEMS.filter((item) => item.pageName === page)[0].pageName;\n  }, [page]);\n\n  const handleToggle = (item: Item) => {\n    setPage(item.pageName);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 24px\", alignItems: \"center\" }}>\n      {DISPLAY_ITEMS.map((item) => (\n        <Typography\n          key={item.pageName}\n          variant=\"h3\"\n          color={currentDisplay === item.pageName ? \"textPrimary\" : \"\"}\n          onClick={() => handleToggle(item)}\n          sx={{ cursor: \"pointer\" }}\n        >\n          {item.name}\n        </Typography>\n      ))}\n    </Box>\n  );\n}\n","import { Typography, Box, Checkbox, useMediaQuery, useTheme } from \"@mui/material\";\nimport AddToken from \"components/Wallet/AddToken\";\nimport WalletPageToggle from \"components/Wallet/PageToggle\";\nimport { Trans } from \"@lingui/macro\";\n\ninterface HideSmallBalanceProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  isHideSmallBalances: boolean;\n}\n\nfunction HideSmallBalance({ isHideSmallBalances, onHideSmallBalances }: HideSmallBalanceProps) {\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\" }}>\n      <Checkbox\n        checked={isHideSmallBalances}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => onHideSmallBalances(event.target.checked)}\n      />\n      <Typography sx={{ cursor: \"pointer\" }} onClick={() => onHideSmallBalances(!isHideSmallBalances)}>\n        <Trans>Hide Zero Balance</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface TokenHeaderProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  onSearchValue: (value: string) => void;\n  isHideSmallBalances: boolean;\n}\n\nexport default function TokenListHeader({ onHideSmallBalances, isHideSmallBalances }: TokenHeaderProps) {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <WalletPageToggle />\n\n        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 10px\" }}>\n          {!matchDownSM ? (\n            <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n          ) : null}\n\n          <AddToken />\n        </Box>\n      </Box>\n      {matchDownSM ? (\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport TokenListTable from \"components/Wallet/TokenListTable\";\nimport TokenListHeader from \"components/Wallet/TokenListHeader\";\nimport {\n  ICP_METADATA,\n  // WRAPPED_ICP_METADATA,\n  W2E_METADATA,\n  WPL_METADATA,\n  WPR_METADATA,\n  WG_METADATA,\n  WM_METADATA,\n  WOX_METADATA,\n  EW_METADATA\n} from \"constants/tokens\";\nimport { NETWORK, network } from \"constants/server\";\nimport { useWalletCatchTokenIds, useUpdateHideSmallBalanceManager } from \"store/wallet/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\n\nexport default function WalletTokenList() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isHideSmallBalances, setIsHideSmallBalances] = useUpdateHideSmallBalanceManager();\n  const walletCacheTokenIds = useWalletCatchTokenIds();\n\n  const globalTokenList = useGlobalTokenList();\n\n  const tokens = useMemo(() => {\n    let tokenIds = [\n      ICP_METADATA.canisterId.toString(),\n      // WRAPPED_ICP_METADATA.canisterId.toString(),\n      W2E_METADATA.canisterId.toString(),\n      WPL_METADATA.canisterId.toString(),\n      WPR_METADATA.canisterId.toString(),\n      WG_METADATA.canisterId.toString(),\n      WM_METADATA.canisterId.toString(),\n      WOX_METADATA.canisterId.toString(),\n      EW_METADATA.canisterId.toString(),\n    ];\n\n    if (network === NETWORK.IC) {\n      tokenIds = [\n        ...tokenIds,\n        ...globalTokenList\n          .filter((token) => !!token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n          .sort((a, b) => {\n            if (a.rank < b.rank) return -1;\n            if (a.rank > b.rank) return 1;\n            return 0;\n          })\n          .map((token) => token.canisterId),\n      ];\n    }\n\n    return [...new Set([...tokenIds, ...walletCacheTokenIds.filter((id) => !DISPLAY_IN_WALLET_FOREVER.includes(id))])];\n  }, [walletCacheTokenIds, globalTokenList]);\n\n  const handleSearchValue = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const hideSmallBalances = (hideOrNot: boolean) => {\n    setIsHideSmallBalances(hideOrNot);\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\", overflow: \"auto hidden\" }}>\n        <TokenListHeader\n          onHideSmallBalances={hideSmallBalances}\n          onSearchValue={handleSearchValue}\n          isHideSmallBalances={isHideSmallBalances}\n        />\n\n        <TokenListTable isHideSmallBalances={isHideSmallBalances} list={tokens} searchValue={searchValue} />\n      </Box>\n    </>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Box } from \"@mui/material\";\nimport WalletAccount from \"components/Wallet/WalletAccount\";\nimport TokenList from \"components/Wallet/TokenList\";\n// import NFTList from \"components/Wallet/NFTList\";\nimport WalletContext, { TokenBalance, Page } from \"components/Wallet/context\";\nimport { useConnectorStateConnected } from \"store/auth/hooks\";\nimport ConnectWallet from \"components/ConnectWallet\";\n\nexport default function Wallet() {\n  const [refreshCounter, setRefreshCounter] = useState<number>(0);\n  const [refreshTotalBalance, setRefreshTotalBalance] = useState(false);\n  const [totalValue, setTotalValue] = useState<TokenBalance>({} as TokenBalance);\n  const [totalUSDBeforeChange, setTotalUSDBeforeChange] = useState<TokenBalance>({} as TokenBalance);\n  const [transferTo, setTransferTo] = useState<string>(\"\");\n  const [transferAmount, setTransferAmount] = useState<BigNumber>(new BigNumber(0));\n  const [page, setPage] = useState<Page>(\"token\");\n\n  const walletIsConnected = useConnectorStateConnected();\n\n  const handleTotalValueChange = (tokenId: string, value: BigNumber) => {\n    setTotalValue((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const handleTotalUSDChange = (tokenId: string, value: BigNumber) => {\n    setTotalUSDBeforeChange((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const allTokenTotalValue = useMemo(() => {\n    return Object.values(totalValue).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalValue]);\n\n  const allTokenTotalUSDChange = useMemo(() => {\n    return Object.values(totalUSDBeforeChange).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalUSDBeforeChange]);\n\n  return walletIsConnected ? (\n    <WalletContext.Provider\n      value={{\n        refreshTotalBalance,\n        setRefreshTotalBalance,\n        refreshCounter,\n        setRefreshCounter,\n        totalValue: allTokenTotalValue,\n        setTotalValue: handleTotalValueChange,\n        totalUSDBeforeChange: allTokenTotalUSDChange,\n        setTotalUSDBeforeChange: handleTotalUSDChange,\n        transferTo,\n        setTransferTo,\n        transferAmount,\n        setTransferAmount,\n        page,\n        setPage,\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Box sx={{ width: \"100%\", maxWidth: \"1400px\" }}>\n          <WalletAccount />\n          <Box sx={{ margin: \"30px 0 0 0\" }}>\n            <Box sx={{ display: page === \"token\" ? \"block\" : \"none\" }}>\n              <TokenList />\n            </Box>\n            {/* <Box sx={{ display: page === \"nft\" ? \"block\" : \"none\" }}>\n              <NFTList />\n            </Box> */}\n          </Box>\n        </Box>\n      </Box>\n    </WalletContext.Provider>\n  ) : (\n    <ConnectWallet />\n  );\n}\n","export const ICP_ADDRESS_LENGTH = 64;\n\nexport function isValidAccount(address: string): boolean {\n  return (\n    /^[0-9a-fA-F]+$/.test(address) && ICP_ADDRESS_LENGTH === address.length\n  );\n}\n"],"names":["_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgCopy","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","ConnectWallet","walletManager","useWalletConnectorManager","_jsx","Grid","container","justifyContent","children","Box","sx","maxWidth","MainCard","level","_jsxs","alignItems","flexDirection","NoData","Typography","color","Trans","Button","variant","onClick","marginTop","size","MaxButton","_props$sx","theme","useTheme","padding","cursor","borderRadius","backgroundColor","colors","secondaryMain","fontSize","value","QRCode","_g","_defs","SvgRefresh","clipPath","createContext","AddressWrapper","address","label","copyRef","useRef","handleCopy","_copyRef$current","current","copy","border","background","display","transform","margin","wordBreak","whiteSpace","userSelect","component","CopyIcon","Copy","content","hide","WalletAccount","icpPrice","useICPPrice","principal","useAccountPrincipal","openSuccessTip","useSuccessTip","refreshTotalBalance","setRefreshTotalBalance","refreshCounter","setRefreshCounter","totalValue","totalUSDBeforeChange","useContext","WalletContext","useTotalICPValue","useMemo","dividedBy","usdChange","isEqualTo","concat","minus","multipliedBy","toFixed","usdChangeType","includes","USDChangeColor","borderBottom","gap","RefreshIcon","style","handleRefreshBalance","fontWeight","formatDollarAmount","toString","toFormat","minWidth","principalToAccount","i18n","_","QRReader","useZxing","onResult","paused","visible","constraints","video","facingMode","className","setVisible","useStyles","makeStyles","warningText","palette","warning","dark","usePrincipalStandard","tokenId","standard","ICP","useAccountStandard","TransferModal","_token$transFee","open","onClose","onTransferSuccess","token","transferTo","qrReaderOpen","setQrReaderOpen","React","principalFromState","setPrincipalFromState","classes","account","useAccount","principalString","useAccountPrincipalString","openErrorTip","useErrorTip","result","balance","useTokenBalance","canisterId","tokenUSDPrice","useUSDPriceById","initialValues","to","weight","amount","values","setValues","useState","handleFieldChange","field","actualTransferAmount","_values$weight2","_values$amount3","BigNumber","isGreaterThan","parseTokenAmount","transFee","decimals","errorMessage","getErrorMessage","_values$amount","standardType","Principal","fromText","error","isValidAccount","isValidPrincipal","Modal","FilledTextField","symbol","fullWidth","placeholder","onChange","helperText","addressHelpText","autoComplete","multiline","InputProps","endAdornment","InputAdornment","position","IconButton","QrCode","p","text","NumberFilledTextField","numericProps","allowNegative","decimalScale","toSignificantWithGroupSeparator","0","marginLeft","event","stopPropagation","Identity","onSubmit","async","identity","_ref2","loading","closeLoading","_values$weight","_values$amount2","isLessThanOrEqualTo","status","message","tokenTransfer","formatTokenAmount","from","fee","_getLocaleMessage","W2E","getLocaleMessage","console","fullScreenLoading","_ref3","submit","disabled","CircularProgress","XTCTopUp","onTopUpSuccess","useTokenInfo","XTC","defaultValues","openTip","closeTip","useTips","onFieldChange","prevState","useCallback","resultFormat","xtc","burn","canister_id","BigInt","Number","mt","inputComponent","TextFieldNumberComponent","inputProps","maxLength","marginRight","handleMax","toNumber","loadingTipKey","1","TIP_LOADING","numberToString","ResultStatus","OK","TIP_SUCCESS","TIP_ERROR","NFIDTransferModal","spacing","item","xs","TextField","NumberTextField","type","_ref4","autocomplete","form","balanceActuallyToAccount","NFIDRequestTransfer","ROUND_DOWN","ICP_TOKEN_INFO","_ref5","ReceiveModal","showConfirm","onConfirm","_copy$current","confirmText","tokenAssets","walletSymbol","textDecoration","ActionButton","ckTokens","ckBTC","mintPath","dissolvePath","ckETH","ChainKeyTokenButtons","ckToken","history","useHistory","_Fragment","handleCKTokenMint","path","push","handleCKTokenDissolve","SWAP_BUTTON_EXCLUDE","WRAPPED_ICP","TokenListItem","isHideSmallBalances","searchValue","walletType","useConnectorType","currency","useToken","infoToken","useInfoToken","priceUSD","tokenInfo","XTCTopUpShow","setXTCTopUpShow","refreshInnerCounter","setRefreshInnerCounter","setOpen","receiveOpen","setReceiveOpen","NFIDTransferOpen","setNFIDTransferOpen","setTotalValue","setTotalUSDBeforeChange","refreshNumber","tokenBalance","useEffect","undefined","usdBeforeChange","div","priceUSDChange","plus","handleCloseModal","handleTransferSuccess","root_canister_id","useSNSTokenRootId","handleWrappedICP","isHidden","hiddenBySmallBalance","hiddenBySearchValue","toLowerCase","NO_HIDDEN_TOKENS","level4","overflow","TokenImage","logo","mockALinkAndOpen","INFO_URL","handleLoadToDetail","name","TokenStandardLabel","flexWrap","handleToSwap","handleReceive","handleToTransactions","TOKEN_STANDARD","ICRC1","ICRC2","url","isHouseUserTokenTransactions","Connector","NFID","handleXTCTopUp","filter","ele","map","NFIDTransfer","XTCTopUpModal","handleTopUpSuccess","EXT","TokenList","list","gridTemplateColumns","LoadingRow","_rect","_rect2","SvgAdd","x","y","rx","TokenItem","_useWalletCatchTokenI","matchDownSM","useMediaQuery","breakpoints","down","walletCatchTokenIds","useWalletCatchTokenIds","addToken","useSaveCacheTokenCallback","deleteToken","useDeleteCacheTokenCallback","borderTop","ml","mr","textOverflow","DISPLAY_IN_WALLET_FOREVER","find","hasBeenAdded","startIcon","HorizontalRuleIcon","handleDeleteToken","AddIcon","handleAddToken","AddTokenModal","queryValue","setQueryValue","importTokenShow","setImportTokenShow","globalTokenList","useGlobalTokenList","importedTokens","useImportedTokens","tokens","keys","configs","config","dialogProps","maxWith","contained","level1","startAdornment","IconSearch","stroke","maxHeight","index","paddingTop","borderColor","TextButton","ImportToken","onImportSuccessfully","AddToken","modalVisible","setModalVisible","DISPLAY_ITEMS","pageName","WalletPageToggle","page","setPage","walletContext","currentDisplay","handleToggle","HideSmallBalance","onHideSmallBalances","Checkbox","checked","TokenListHeader","WalletTokenList","setSearchValue","setIsHideSmallBalances","useUpdateHideSmallBalanceManager","walletCacheTokenIds","tokenIds","ICP_METADATA","W2E_METADATA","WPL_METADATA","WPR_METADATA","WG_METADATA","WM_METADATA","WOX_METADATA","EW_METADATA","network","NETWORK","IC","sort","a","b","rank","Set","hideOrNot","onSearchValue","TokenListTable","Wallet","setTransferTo","transferAmount","setTransferAmount","walletIsConnected","useConnectorStateConnected","allTokenTotalValue","reduce","prev","curr","allTokenTotalUSDChange","Provider","handleTotalValueChange","handleTotalUSDChange","ICP_ADDRESS_LENGTH","test"],"sourceRoot":""}