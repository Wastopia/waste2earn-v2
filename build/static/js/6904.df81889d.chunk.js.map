{"version":3,"file":"static/js/6904.df81889d.chunk.js","mappings":"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","sources":["assets/images/swap/switch.tsx","components/CurrencyAvatar/index.tsx","components/CurrencySelector/button.tsx","components/CurrencySelector/index.tsx","assets/icons/question.svg","components/swap/ReclaimLink.tsx","assets/images/swap/setting.tsx","components/Toggle/index.tsx","components/swap/UserSetting.tsx","components/swap/SettingIcon.tsx","components/swap/SwapInput.tsx","hooks/swap/useSwapCallback.ts","components/swap/SwapSteps.tsx","utils/swap/prices.ts","assets/icons/sync-alt.svg","assets/images/LinkIcon.tsx","components/swap/TradePrice.tsx","hooks/swap/useMaxAmountSpend.ts","components/swap/SwapInputCurrency.tsx","components/swap/SwapInputWrapper.tsx","components/swap/FormattedPriceImpact.tsx","components/swap/SwapConfirm.tsx","hooks/swap/useSwapFeeTip.ts","components/swap/SwapWrapper.tsx","constants/misc.ts","../packages/hooks/src/token/useTokenBalance.ts","../packages/utils/src/isNullArgs.ts"],"sourcesContent":["export default function SwitchIcon() {\n  return (\n    <svg width=\"30\" height=\"31\" viewBox=\"0 0 30 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"0.5\" y=\"1\" width=\"29\" height=\"29\" rx=\"8.5\" fill=\"#111936\" stroke=\"#29314F\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.6875 11.5625C13.6875 11.0793 14.0793 10.6875 14.5625 10.6875C15.0457 10.6875 15.4375 11.0793 15.4375 11.5625V17.5374L17.6561 15.3188C17.9978 14.9771 18.5518 14.9771 18.8935 15.3188C19.2352 15.6605 19.2352 16.2145 18.8935 16.5562L15.1812 20.2685C15.0095 20.4402 14.7843 20.5256 14.5593 20.5248C14.3343 20.5256 14.109 20.4402 13.9373 20.2685L10.225 16.5562C9.88332 16.2145 9.88332 15.6605 10.225 15.3188C10.5667 14.9771 11.1208 14.9771 11.4625 15.3188L13.6875 17.5438V11.5625Z\"\n        fill=\"#8492C4\"\n      />\n    </svg>\n  );\n}\n","import { Avatar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nconst useStyles = ({ borderColor, size }: { borderColor: string; size?: string | undefined }) =>\n  makeStyles(() => {\n    return {\n      avatar: {\n        width: size || \"24px\",\n        height: size || \"24px\",\n        border: `1px solid ${borderColor}`,\n      },\n    };\n  });\n\nexport interface CurrencyAvatarProps {\n  currency: Token | undefined | null;\n  borderColor?: string;\n  bgColor?: string;\n  className?: string;\n  size?: string;\n}\n\nexport default function CurrencyAvatar({\n  currency,\n  borderColor = \"#ffffff\",\n  bgColor = \"#97a4ef\",\n  className,\n  size,\n}: CurrencyAvatarProps) {\n  const classes = useStyles({ borderColor, size })();\n\n  return (\n    <Avatar className={`${classes.avatar} ${className || \"\"}`} sx={{ bgcolor: bgColor }} src={currency?.logo}>\n      &nbsp;\n    </Avatar>\n  );\n}\n","import { useCallback } from \"react\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { isDarkTheme } from \"utils\";\nimport Loading from \"components/Loading\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { TokenImage } from \"components/index\";\n\nconst useStyle = (bgGray: boolean) =>\n  makeStyles((theme: Theme) => {\n    return {\n      selectButton: {\n        position: \"relative\",\n        padding: \"0 16px 0 12px\",\n        height: \"44px\",\n        color: \"#ffffff\",\n        cursor: \"pointer\",\n        backgroundColor: isDarkTheme(theme)\n          ? theme.palette.background.level2\n          : bgGray\n            ? theme.colors.lightGray200\n            : \"#ffffff\",\n        borderRadius: `${theme.radius}px`,\n      },\n      selectButtonActive: {\n        padding: \"0 16px\",\n        height: \"44px\",\n        lineHeight: \"44px\",\n        background: theme.themeOption.defaultGradient,\n        color: \"#ffffff\",\n        cursor: \"pointer\",\n        borderRadius: `${theme.radius}px`,\n      },\n      arrow: {\n        color: isDarkTheme(theme) ? \"inherit\" : \"#757575\",\n        \"&.active\": {\n          color: \"#fff\",\n        },\n      },\n    };\n  });\n\nexport interface CurrencySelectorButtonProps {\n  currency: undefined | null | Token;\n  onClick?: () => void;\n  bgGray?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n}\n\nexport default function CurrencySelectorButton({\n  currency,\n  onClick,\n  bgGray = false,\n  loading,\n  disabled,\n}: CurrencySelectorButtonProps) {\n  const classes = useStyle(bgGray)();\n\n  const handleButtonClick = useCallback(() => {\n    if (loading) return;\n    if (onClick) onClick();\n  }, [loading, onClick]);\n\n  return currency ? (\n    <Grid container className={classes.selectButton} alignItems=\"center\" onClick={handleButtonClick}>\n      <Grid item mr={1} xs>\n        <Grid container alignItems=\"center\" gap=\"0 8px\">\n          <TokenImage logo={currency.logo} size=\"28px\" tokenId={currency.address} />\n          <Typography component=\"span\">{currency.symbol}</Typography>\n        </Grid>\n      </Grid>\n      {!disabled && (\n        <KeyboardArrowDown\n          className={classes.arrow}\n          sx={{\n            fontSize: \"1rem\",\n          }}\n        />\n      )}\n      {loading && <Loading loading={loading} circularSize={20} />}\n    </Grid>\n  ) : (\n    <Box className={classes.selectButtonActive} onClick={handleButtonClick}>\n      <Grid container alignItems=\"center\">\n        <Grid container alignItems=\"center\" item xs>\n          <Trans>Select a token</Trans>\n        </Grid>\n        <KeyboardArrowDown\n          className={`${classes.arrow} active`}\n          sx={{\n            fontSize: \"1rem\",\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { TokenInfo } from \"types/token\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { useToken } from \"hooks/useCurrency\";\nimport Selector from \"./selector\";\nimport CurrencySelectButton from \"./button\";\n\nexport interface CurrencySelectorProps {\n  currencyId: string | undefined;\n  onChange: (token: TokenInfo) => void;\n  disabledCurrency?: Token[];\n  bgGray?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n  activeCurrencies?: Token[];\n  version?: \"v2\" | \"v3\";\n}\n\nexport default function CurrencySelector({\n  currencyId,\n  onChange,\n  disabledCurrency,\n  activeCurrencies,\n  bgGray = false,\n  loading,\n  disabled = false,\n  version,\n}: CurrencySelectorProps) {\n  const [selectorShow, setSelectorShow] = useState(false);\n\n  const onTokenChange = (token: TokenInfo) => {\n    if (onChange) onChange(token);\n    setSelectorShow(false);\n  };\n\n  const [, token] = useToken(currencyId);\n\n  const disabledCurrencyIds = useMemo(() => {\n    if (disabledCurrency && disabledCurrency.length) {\n      return disabledCurrency.map((currency) => currency?.address);\n    }\n    return [];\n  }, [disabledCurrency]);\n\n  const activeCurrencyIds = useMemo(() => {\n    if (activeCurrencies && activeCurrencies.length) {\n      return activeCurrencies.map((currency) => currency?.address);\n    }\n    return [];\n  }, [activeCurrencies]);\n\n  return (\n    <>\n      <CurrencySelectButton\n        currency={token}\n        onClick={() => {\n          if (disabled) return;\n          setSelectorShow(true);\n        }}\n        bgGray={bgGray}\n        loading={loading}\n        disabled\n      />\n      {selectorShow && (\n        <Selector\n          open={selectorShow}\n          onClose={() => setSelectorShow(false)}\n          onChange={onTokenChange}\n          disabledCurrencyIds={disabledCurrencyIds}\n          activeCurrencyIds={activeCurrencyIds}\n          version={version}\n        />\n      )}\n    </>\n  );\n}\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgQuestion(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_37103_16306)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 0C4.81332 0 3.65328 0.351894 2.66658 1.01118C1.67989 1.67047 0.910851 2.60754 0.456726 3.7039C0.00259969 4.80026 -0.11622 6.00666 0.115291 7.17054C0.346802 8.33443 0.918247 9.40353 1.75736 10.2426C2.59648 11.0818 3.66558 11.6532 4.82946 11.8847C5.99335 12.1162 7.19975 11.9974 8.2961 11.5433C9.39246 11.0892 10.3295 10.3201 10.9888 9.33342C11.6481 8.34673 12 7.18669 12 6C12 4.4087 11.3679 2.88258 10.2426 1.75736C9.11743 0.632141 7.5913 0 6 0V0ZM6 10.2C5.83048 10.2 5.66476 10.1497 5.5238 10.0555C5.38284 9.96136 5.27298 9.82749 5.20811 9.67087C5.14323 9.51425 5.12626 9.34191 5.15933 9.17564C5.1924 9.00937 5.27404 8.85664 5.39391 8.73677C5.51379 8.61689 5.66651 8.53526 5.83278 8.50218C5.99905 8.46911 6.1714 8.48609 6.32802 8.55096C6.48464 8.61584 6.61851 8.7257 6.71269 8.86665C6.80688 9.00761 6.85715 9.17333 6.85715 9.34286C6.85715 9.57019 6.76684 9.7882 6.60609 9.94895C6.44535 10.1097 6.22733 10.2 6 10.2ZM8.34 5.28857C8.02434 5.709 7.65227 6.08395 7.23429 6.40286C7.01478 6.56253 6.82846 6.76341 6.68572 6.99429C6.59995 7.25072 6.56786 7.52206 6.59143 7.79143H5.33143V7.45714C5.3203 7.11134 5.39077 6.76778 5.53715 6.45429C5.74793 6.11928 6.02152 5.82822 6.34286 5.59714C6.60235 5.40248 6.84597 5.18752 7.07143 4.95429C7.18935 4.80235 7.25275 4.61518 7.25143 4.42286C7.25163 4.29029 7.22253 4.15931 7.16622 4.03929C7.10992 3.91927 7.02779 3.81317 6.92572 3.72857C6.68557 3.52931 6.38041 3.42556 6.06857 3.43714C5.75649 3.43336 5.45304 3.53957 5.21143 3.73714C4.96277 3.98878 4.79297 4.30753 4.72286 4.65429C4.68 4.91143 3.43715 5.02286 3.44572 4.5C3.46448 4.21218 3.54092 3.93107 3.6705 3.67338C3.80008 3.4157 3.98015 3.1867 4.2 3C4.69781 2.5651 5.33905 2.32998 6 2.34C6.69015 2.30376 7.3689 2.52695 7.90286 2.96571C8.11452 3.14456 8.28416 3.36785 8.39971 3.6197C8.51527 3.87155 8.5739 4.14577 8.57143 4.42286C8.57913 4.72768 8.49878 5.02825 8.34 5.28857Z\",\n    fill: \"#EFEFFF\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_37103_16306\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 12,\n    height: 12,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestion);\nexport default __webpack_public_path__ + \"static/media/question.46e27248fd961f80919808008793c04b.svg\";\nexport { ForwardRef as ReactComponent };","import { useHistory } from \"react-router-dom\";\nimport { Box, Typography, Tooltip } from \"@mui/material\";\nimport { Trans } from \"@lingui/macro\";\nimport { ReactComponent as QuestionIcon } from \"assets/icons/question.svg\";\n\nexport interface ReclaimLinkProps {\n  fontSize?: \"12px\" | \"14px\";\n}\n\nexport function ReclaimLink({ fontSize = \"14px\" }: ReclaimLinkProps) {\n  const history = useHistory();\n\n  return (\n    <Typography\n      component=\"div\"\n      sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}\n      onClick={() => history.push(\"/swap/reclaim\")}\n    >\n      <Typography color=\"secondary\" mr=\"5px\" sx={{ fontSize }}>\n        <Trans>Unreceived tokens after swap? Reclaim here</Trans>\n      </Typography>\n\n      <Tooltip\n        PopperProps={{\n          // @ts-ignore\n          sx: {\n            \"& .MuiTooltip-tooltip\": {\n              background: \"#ffffff\",\n              borderRadius: \"8px\",\n              padding: \"12px 16px\",\n              \"& .MuiTooltip-arrow\": {\n                color: \"#ffffff\",\n              },\n            },\n          },\n        }}\n        title={\n          <Box>\n            <Typography color=\"text.400\" fontSize=\"14px\">\n              <Trans>\n                For your funds' safety on ICPSwap, we've implemented the 'Reclaim Your Tokens' feature. If issues arise\n                with the token canister during swaps, liquidity withdrawals, or fee claims, or if significant slippage\n                causes swap failures, utilize this feature to directly reclaim your tokens.\n              </Trans>\n            </Typography>\n          </Box>\n        }\n        arrow\n      >\n        <Box sx={{ width: \"16px\", height: \"16px\" }}>\n          <QuestionIcon />\n        </Box>\n      </Tooltip>\n    </Typography>\n  );\n}\n","import { SvgIcon } from \"@mui/material\";\n\nexport default ({ strokeColor = \"#212121\", ...props }: { strokeColor?: string; [key: string]: any }) => {\n  return (\n    <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M10.325 4.317C10.751 2.561 13.249 2.561 13.675 4.317C13.7389 4.5808 13.8642 4.82578 14.0407 5.032C14.2172 5.23822 14.4399 5.39985 14.6907 5.50375C14.9414 5.60764 15.2132 5.65085 15.4838 5.62987C15.7544 5.60889 16.0162 5.5243 16.248 5.383C17.791 4.443 19.558 6.209 18.618 7.753C18.4769 7.98465 18.3924 8.24634 18.3715 8.51677C18.3506 8.78721 18.3938 9.05877 18.4975 9.30938C18.6013 9.55999 18.7627 9.78258 18.9687 9.95905C19.1747 10.1355 19.4194 10.2609 19.683 10.325C21.439 10.751 21.439 13.249 19.683 13.675C19.4192 13.7389 19.1742 13.8642 18.968 14.0407C18.7618 14.2172 18.6001 14.4399 18.4963 14.6907C18.3924 14.9414 18.3491 15.2132 18.3701 15.4838C18.3911 15.7544 18.4757 16.0162 18.617 16.248C19.557 17.791 17.791 19.558 16.247 18.618C16.0153 18.4769 15.7537 18.3924 15.4832 18.3715C15.2128 18.3506 14.9412 18.3938 14.6906 18.4975C14.44 18.6013 14.2174 18.7627 14.0409 18.9687C13.8645 19.1747 13.7391 19.4194 13.675 19.683C13.249 21.439 10.751 21.439 10.325 19.683C10.2611 19.4192 10.1358 19.1742 9.95929 18.968C9.7828 18.7618 9.56011 18.6001 9.30935 18.4963C9.05859 18.3924 8.78683 18.3491 8.51621 18.3701C8.24559 18.3911 7.98375 18.4757 7.752 18.617C6.209 19.557 4.442 17.791 5.382 16.247C5.5231 16.0153 5.60755 15.7537 5.62848 15.4832C5.64942 15.2128 5.60624 14.9412 5.50247 14.6906C5.3987 14.44 5.23726 14.2174 5.03127 14.0409C4.82529 13.8645 4.58056 13.7391 4.317 13.675C2.561 13.249 2.561 10.751 4.317 10.325C4.5808 10.2611 4.82578 10.1358 5.032 9.95929C5.23822 9.7828 5.39985 9.56011 5.50375 9.30935C5.60764 9.05858 5.65085 8.78683 5.62987 8.51621C5.60889 8.24559 5.5243 7.98375 5.383 7.752C4.443 6.209 6.209 4.442 7.753 5.382C8.753 5.99 10.049 5.452 10.325 4.317Z\"\n        stroke={strokeColor}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\"\n        stroke={strokeColor}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </SvgIcon>\n  );\n};\n","import React from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    toggleBox: {\n      display: \"inline-block\",\n      padding: \"4px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level2 : \"#fff\",\n      borderRadius: `${theme.radius}px`,\n    },\n    toggleItem: {\n      width: \"74px\",\n      height: \"32px\",\n      borderRadius: \"6px\",\n      cursor: \"pointer\",\n      \"&.on\": {\n        backgroundColor: theme.colors.secondaryMain,\n        color: \"#fff\",\n      },\n      \"&.off\": {\n        backgroundColor: isDarkTheme(theme) ? \"#4F5A84\" : theme.colors.lightGray200,\n      },\n    },\n  };\n});\n\nexport enum CHECKED {\n  ON = \"check\",\n  OFF = \"uncheck\",\n}\n\nexport interface ToggleProps {\n  isActive?: boolean;\n  checked?: React.ReactChild;\n  unchecked?: React.ReactChild;\n  onToggleChange: (value?: CHECKED) => void;\n}\n\nexport default function Toggle({ isActive = false, checked = \"On\", unchecked = \"Off\", onToggleChange }: ToggleProps) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.toggleBox}>\n      <Grid container>\n        <Grid\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          item\n          className={`${classes.toggleItem} ${isActive ? \"on\" : \"\"}`}\n          onClick={() => onToggleChange(CHECKED.ON)}\n        >\n          {checked}\n        </Grid>\n        <Grid\n          item\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          className={`${classes.toggleItem} ${isActive ? \"\" : \"off\"}`}\n          onClick={() => onToggleChange(CHECKED.OFF)}\n        >\n          {unchecked}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { memo, useMemo, useCallback } from \"react\";\nimport { Grid, Box, Typography, Card, InputAdornment } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Toggle from \"components/Toggle\";\nimport { useExpertModeManager, useSlippageManager, useMultipleApproveManager } from \"store/swap/cache/hooks\";\nimport { getDefaultSlippageTolerance, MAX_SLIPPAGE_TOLERANCE, SLIPPAGE_TOLERANCE } from \"constants/swap\";\nimport BigNumber from \"bignumber.js\";\nimport { SwapTooltip, NumberTextField, TextButton } from \"components/index\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Trans } from \"@lingui/macro\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    card: {\n      backgroundColor: isDarkTheme(theme) ? \"#202845\" : theme.colors.lightGray200,\n      borderRadius: `${theme.radius}px`,\n      width: \"390px\",\n      border: theme.palette.border.gray200,\n      ...(isDarkTheme(theme)\n        ? { boxShadow: \"0px 4px 16px rgba(0, 0, 0, 0.25)\" }\n        : { boxShadow: \"0px 4px 16px 0px #00000040\" }),\n      \"@media (max-width: 640px)\": {\n        width: \"288px\",\n        padding: \"12px\",\n      },\n    },\n    tolerance: {\n      marginTop: \"8px\",\n      display: \"grid\",\n      gridTemplateColumns: \"auto auto\",\n      gap: \"0 5px\",\n\n      \"@media (max-width: 640px)\": {\n        gridTemplateColumns: \"1fr\",\n        gap: \"5px 0\",\n      },\n    },\n    activeTypography: {\n      position: \"relative\",\n      \"&:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        bottom: \"-6px\",\n        left: 0,\n        width: \"100%\",\n        height: \"4px\",\n        backgroundColor: theme.colors.secondaryMain,\n      },\n    },\n    settingBox: {\n      position: \"absolute\",\n      right: \"0\",\n      top: \"0\",\n      cursor: \"pointer\",\n    },\n    slippageButton: {\n      width: \"48px\",\n      height: \"40px\",\n      borderRadius: \"8px\",\n      cursor: \"pointer\",\n      marginRight: \"8px\",\n      background: theme.palette.background.level4,\n      \"&:last-child\": {\n        marginRight: \"0\",\n      },\n      \"&.active\": {\n        \"& .MuiTypography-root\": {\n          color: \"#ffffff\",\n        },\n        background: theme.colors.secondaryMain,\n      },\n    },\n    settingInput: {\n      \"& input\": {\n        padding: \"10px 16px\",\n        borderRadius: \"8px\",\n      },\n      \"& fieldset\": {\n        borderRadius: \"8px\",\n      },\n    },\n  };\n});\n\nexport interface UserSettingProps {\n  onClose: () => void;\n  type: string;\n}\n\nexport default memo(({ type }: UserSettingProps) => {\n  const classes = useStyles();\n\n  const [expertMode, toggleExpertMode] = useExpertModeManager();\n  const [slippageTolerance, setSlippageTolerance] = useSlippageManager(type);\n  const { multipleApprove, updateMultipleApprove } = useMultipleApproveManager();\n\n  const currentSlippageTolerance = useMemo(() => {\n    return new BigNumber(slippageTolerance).div(1000).toFixed(2);\n  }, [slippageTolerance]);\n\n  const handleSlippageToleranceInput = useCallback(\n    (event) => {\n      let { value } = event.target;\n      if (!value) value = 0;\n      setSlippageTolerance(new BigNumber(value).multipliedBy(1000).toNumber());\n    },\n    [setSlippageTolerance],\n  );\n\n  const handleSlippageToleranceBlur = useCallback(\n    (event) => {\n      let { value } = event.target;\n\n      const defaultSlippageTolerance = getDefaultSlippageTolerance(type);\n\n      if (!value) {\n        value = defaultSlippageTolerance;\n      } else if (new BigNumber(value).multipliedBy(1000).isGreaterThan(MAX_SLIPPAGE_TOLERANCE)) {\n        value = new BigNumber(defaultSlippageTolerance).div(1000);\n      }\n      setSlippageTolerance(new BigNumber(value).multipliedBy(1000).toNumber());\n    },\n    [setSlippageTolerance],\n  );\n\n  const handleToggleSlippage = (slippage: { id: string; value: number }) => {\n    setSlippageTolerance(slippage.value);\n  };\n\n  const handleMultipleApproveAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    if (!value) return;\n    updateMultipleApprove(Number(value));\n  };\n\n  // const handleTransactionDeadlineInput = useCallback(\n  //   (event: React.ChangeEvent<HTMLInputElement>) => {\n  //     const value = event.target.value;\n  //     setTransactionDeadline(new BigNumber(value).toNumber());\n  //   },\n  //   [setTransactionDeadline]\n  // );\n\n  // const handleTransactionsDeadlineBlur = useCallback(\n  //   (event: React.FocusEvent<HTMLInputElement>) => {\n  //     let value = event.target.value;\n\n  //     if (!value) {\n  //       value = String(DEFAULT_TRANSACTIONS_DEADLINE);\n  //     } else if (new BigNumber(value).isGreaterThan(MAX_TRANSACTIONS_DEADLINE)) {\n  //       value = String(MAX_TRANSACTIONS_DEADLINE);\n  //     }\n\n  //     setTransactionDeadline(new BigNumber(value).toNumber());\n  //   },\n  //   [setTransactionDeadline]\n  // );\n\n  return (\n    <Card\n      className={classes.card}\n      sx={{\n        p: 3,\n      }}\n    >\n      <Typography variant=\"h4\" color=\"textPrimary\">\n        Setting\n      </Typography>\n      <Box mt={3}>\n        <Grid container alignItems=\"center\">\n          <Typography mr={1} color=\"textPrimary\">\n            Slippage tolerance\n          </Typography>\n          <SwapTooltip\n            tips=\"Your transaction will revert if the price changes unfavorably\n                  by more than this percentage.\"\n          />\n        </Grid>\n        <Box className={classes.tolerance}>\n          <NumberTextField\n            className={classes.settingInput}\n            value={currentSlippageTolerance}\n            numericProps={{\n              decimalScale: 2,\n              allowNegative: false,\n              maxLength: 6,\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n            }}\n            onChange={handleSlippageToleranceInput}\n            onBlur={handleSlippageToleranceBlur}\n          />\n          <Grid\n            container\n            alignContent=\"center\"\n            sx={{\n              justifyContent: \"flex-end\",\n              \"@media (max-width: 640px)\": {\n                justifyContent: \"flex-start\",\n              },\n            }}\n          >\n            {SLIPPAGE_TOLERANCE.map((slippage, index) => (\n              <Grid\n                className={`${classes.slippageButton} ${slippageTolerance === slippage.value ? \"active\" : \"\"}`}\n                item\n                key={index}\n                container\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                onClick={() => handleToggleSlippage(slippage)}\n              >\n                <Typography>{new BigNumber(slippage.value).div(1000).toNumber()}%</Typography>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Box>\n      {/* <Box mt={3}>\n        <Grid container alignItems=\"center\">\n          <Typography mr={1} color=\"textPrimary\">\n            Transactions deadline\n          </Typography>\n          <Tooltip tips=\"Your transaction will revert if it is pending for more than this period of time.\"></Tooltip>\n        </Grid>\n        <Grid mt={1}>\n          <TextField\n            value={transactionsDeadline}\n            className={classes.settingInput}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">minutes</InputAdornment>,\n              inputComponent: NumberFormat,\n              inputProps: {\n                decimalScale: 0,\n                allowNegative: false,\n                maxLength: 6,\n                value: transactionsDeadline,\n              },\n            }}\n            onChange={handleTransactionDeadlineInput}\n            onBlur={handleTransactionsDeadlineBlur}\n          />\n        </Grid>\n      </Box> */}\n      <Box mt={3}>\n        <Grid container alignItems=\"center\">\n          <Typography mr={1} color=\"textPrimary\">\n            <Trans>Toggle Expert Mode</Trans>\n          </Typography>\n          <SwapTooltip tips=\"Allow high price impact trades and skip the confirm screen. Use at your own risk.\" />\n        </Grid>\n        <Box mt={1}>\n          <Toggle isActive={expertMode} onToggleChange={toggleExpertMode} />\n        </Box>\n      </Box>\n\n      <Box mt={3}>\n        <Grid container alignItems=\"center\">\n          <Typography mr={1} color=\"textPrimary\">\n            <Trans>Approval Limit Settings</Trans>\n          </Typography>\n\n          {/* <Tooltip tips=\"Allow high price impact trades and skip the confirm screen. Use at your own risk.\"></Tooltip> */}\n        </Grid>\n        <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 9px\" }}>\n          <Box sx={{ width: \"70px\" }}>\n            <NumberTextField\n              className={classes.settingInput}\n              numericProps={{ decimalScale: 0 }}\n              value={multipleApprove}\n              onChange={handleMultipleApproveAmountChange}\n            />\n          </Box>\n\n          <Typography>\n            <Trans>Multiple of the Swap Amount</Trans>\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box mt={3}>\n        <TextButton arrow to=\"/swap/revoke-approve\">\n          <Trans>Revoke Token Approval</Trans>\n        </TextButton>\n      </Box>\n      {/* <Box mt={3}>\n        <Grid container alignItems=\"center\">\n          <Typography mr={1} color=\"textPrimary\">\n            Disable Multihops\n          </Typography>\n          <Tooltip tips=\"Restricts swaps to direct pairs only.\"></Tooltip>\n        </Grid>\n        <Box mt={1}>\n          <Toggle isActive={singleHop} onToggleChange={toggleSingleHop} />\n        </Box>\n      </Box> */}\n    </Card>\n  );\n});\n","import { useState } from \"react\";\nimport { Box, ClickAwayListener } from \"@mui/material\";\nimport { useTheme } from \"@mui/styles\";\nimport SettingIcon from \"assets/images/swap/setting\";\nimport UserSetting from \"components/swap/UserSetting\";\nimport { isDarkTheme } from \"utils\";\n\nexport interface SwapSettingsProps {\n  type: string;\n  position?: \"right\" | \"left\";\n}\n\nexport default function SwapSettingIcon({ type, position = \"right\" }: SwapSettingsProps) {\n  const theme = useTheme();\n  const [settingShow, setSettingShow] = useState(false);\n\n  const hideSettingBox = () => {\n    setSettingShow(false);\n  };\n\n  const handleToggleSettingShow = () => {\n    setSettingShow(!settingShow);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={hideSettingBox}>\n      <Box\n        sx={{\n          position: \"relative\",\n          \"& img\": {\n            cursor: \"pointer\",\n          },\n        }}\n      >\n        <SettingIcon\n          onClick={handleToggleSettingShow}\n          sx={{\n            color: \"transparent\",\n            cursor: \"pointer\",\n          }}\n          strokeColor={isDarkTheme(theme) ? \"#BDC8F0\" : undefined}\n        />\n\n        {settingShow && (\n          <Box\n            sx={{\n              position: \"absolute\",\n              top: \"30px\",\n              zIndex: 10,\n              ...(position === \"right\" ? { right: 0 } : { left: 0 }),\n            }}\n          >\n            <UserSetting type={type} onClose={() => setSettingShow(false)} />\n          </Box>\n        )}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n","import React, { memo } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { MAX_SWAP_INPUT_LENGTH, SAFE_DECIMALS_LENGTH } from \"constants/index\";\nimport { NumberTextField } from \"components/index\";\n\nconst useStyles = makeStyles(() => {\n  return {\n    input: {\n      \"& input\": {\n        textAlign: \"right\",\n        fontSize: \"20px\",\n        fontWeight: 700,\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n      },\n    },\n    switchIcon: {\n      cursor: \"pointer\",\n    },\n  };\n});\n\nexport interface SwapInputProps {\n  value: string | number;\n  currency: Token | undefined;\n  onUserInput: (value: string) => void;\n  disabled?: boolean;\n}\n\nexport const SwapInput = memo(({ value, currency, onUserInput, disabled }: SwapInputProps) => {\n  const classes = useStyles();\n\n  const decimal = currency?.decimals ?? SAFE_DECIMALS_LENGTH;\n\n  return (\n    <NumberTextField\n      value={value}\n      fullWidth\n      className={classes.input}\n      placeholder=\"0.0\"\n      variant=\"standard\"\n      disabled={disabled}\n      numericProps={{\n        thousandSeparator: true,\n        decimalScale: decimal > SAFE_DECIMALS_LENGTH ? SAFE_DECIMALS_LENGTH : decimal,\n        allowNegative: false,\n        maxLength: MAX_SWAP_INPUT_LENGTH,\n      }}\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => onUserInput(e.target.value)}\n    />\n  );\n});\n","import { TradeType } from \"@w2e/constants\";\nimport { ResultStatus } from \"@w2e/types\";\nimport BigNumber from \"bignumber.js\";\nimport { Trade, Token } from \"@w2e/swap-sdk\";\nimport { useCallback } from \"react\";\nimport { useSlippageManager } from \"store/swap/cache/hooks\";\nimport { useUpdateSwapOutAmount, getSwapOutAmount } from \"store/swap/hooks\";\nimport { slippageToPercent } from \"constants/index\";\nimport { swap } from \"hooks/swap/v3Calls\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { useSwapApprove, useSwapDeposit, useSwapTransfer, useSwapWithdraw } from \"hooks/swap/index\";\nimport { StepCallback, useStepCalls, newStepKey, useCloseAllSteps } from \"hooks/useStepCall\";\nimport { getActorIdentity } from \"components/Identity\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { useErrorTip } from \"hooks/useTips\";\nimport { t } from \"@lingui/macro\";\nimport { isUseTransfer } from \"utils/token/index\";\nimport { getSwapStep } from \"components/swap/SwapSteps\";\nimport { useStepContentManager } from \"store/steps/hooks\";\nimport { ExternalTipArgs, OpenExternalTip } from \"types/index\";\nimport { useHistory } from \"react-router-dom\";\n\nexport enum SwapCallbackState {\n  INVALID = \"INVALID\",\n  LOADING = \"LOADING\",\n  VALID = \"VALID\",\n}\n\nexport interface InitialSwapStepsArgs {\n  trade: Trade<Token, Token, TradeType> | undefined | null;\n  key: number | string;\n  retry?: () => Promise<boolean>;\n}\n\nexport function useInitialSwapSteps() {\n  const updateStep = useStepContentManager();\n  const history = useHistory();\n  const closeAllSteps = useCloseAllSteps();\n\n  const handleReclaim = () => {\n    history.push(\"/swap/reclaim\");\n    closeAllSteps();\n  };\n\n  return useCallback(({ trade, key, retry }: InitialSwapStepsArgs) => {\n    if (!trade) return undefined;\n\n    const amount0 = trade.inputAmount.toSignificant(12, { groupSeparator: \",\" });\n    const amount1 = trade.outputAmount.toSignificant(12, { groupSeparator: \",\" });\n\n    const content = getSwapStep({\n      inputCurrency: trade.inputAmount.currency,\n      outputCurrency: trade.outputAmount.currency,\n      amount0,\n      amount1,\n      key: key.toString(),\n      retry,\n      handleReclaim,\n    });\n\n    updateStep(String(key), {\n      content,\n      title: t`Swap Details`,\n    });\n  }, []);\n}\n\nexport interface SwapCallsCallbackArgs {\n  trade: Trade<Token, Token, TradeType> | Trade<Token, Token, TradeType>[] | undefined | null;\n  stepKey: string | number;\n  openExternalTip: OpenExternalTip;\n  subAccountTokenBalance: BigNumber;\n  swapInTokenUnusedBalance: bigint;\n}\n\nexport function useSwapCalls() {\n  const principal = useAccountPrincipal();\n\n  const [allowedSlippage] = useSlippageManager(\"swap\");\n  const slippageTolerance = slippageToPercent(allowedSlippage);\n\n  const approve = useSwapApprove();\n  const deposit = useSwapDeposit();\n  const transfer = useSwapTransfer();\n  const withdraw = useSwapWithdraw();\n\n  const updateSwapOutAmount = useUpdateSwapOutAmount();\n\n  const [openErrorTip] = useErrorTip();\n\n  const initialAndUpdateSwapStep = useInitialSwapSteps();\n\n  return useCallback(\n    ({\n      trade,\n      stepKey: _stepKey,\n      swapInTokenUnusedBalance,\n      subAccountTokenBalance,\n      openExternalTip,\n    }: SwapCallsCallbackArgs) => {\n      if (!trade || !principal) return undefined;\n\n      const stepKey = _stepKey.toString();\n\n      let trades: Trade<Token, Token, TradeType>[] = [];\n\n      if (!Array.isArray(trade)) {\n        trades = [trade];\n      }\n\n      let calls: undefined | StepCallback[];\n\n      for (const trade of trades) {\n        for (const { route, inputAmount, outputAmount } of trade.swaps) {\n          const actualSwapAmount = trade.maximumAmountIn(slippageTolerance, inputAmount).quotient.toString();\n          const amountOut = trade.minimumAmountOut(slippageTolerance, outputAmount).quotient.toString();\n\n          const singleHop = route.pools.length === 1;\n\n          if (singleHop) {\n            const tokenIn = route.tokenPath[0];\n            const tokenOut = route.tokenPath[1];\n            const poolId = route.pools[0].id;\n\n            updateSwapOutAmount(stepKey, undefined);\n\n            // Amount that user input\n            const userInputAmount = actualSwapAmount\n              ? isUseTransfer(tokenIn)\n                ? new BigNumber(actualSwapAmount).plus(tokenIn.transFee).toString()\n                : actualSwapAmount\n              : undefined;\n\n            const step0 = async () => {\n              if (!userInputAmount) return false;\n\n              // Skip transfer if unused token balance is greater than or equal to actual swap amount\n              if (swapInTokenUnusedBalance >= BigInt(actualSwapAmount)) {\n                return true;\n              }\n\n              if (isUseTransfer(tokenIn)) {\n                // Skip transfer if unDeposit token balance is greater than or equal to user input amount\n                if (!subAccountTokenBalance.isLessThan(userInputAmount)) {\n                  return true;\n                }\n\n                return await transfer(route.input.wrapped, userInputAmount, poolId);\n              }\n\n              return await approve(route.input.wrapped, userInputAmount, poolId);\n            };\n\n            const step1 = async () => {\n              if (!userInputAmount) return false;\n\n              // Skip transfer if unused token balance is greater than or equal to actual swap amount\n              if (swapInTokenUnusedBalance >= BigInt(actualSwapAmount)) {\n                return true;\n              }\n\n              return await deposit(route.input.wrapped, userInputAmount, poolId, ({ message }: ExternalTipArgs) => {\n                openExternalTip({ message, tipKey: stepKey });\n              });\n            };\n\n            const step2 = async () => {\n              if (!principal || !actualSwapAmount || !amountOut) return false;\n\n              const identity = await getActorIdentity();\n\n              const { status, message, data } = await swap(poolId, identity, {\n                zeroForOne: tokenIn.address < tokenOut.address,\n                amountIn: actualSwapAmount,\n                amountOutMinimum: amountOut,\n              });\n\n              if (status === ResultStatus.ERROR) {\n                if (openExternalTip) {\n                  openExternalTip({ message: getLocaleMessage(message), tipKey: stepKey });\n                } else {\n                  openErrorTip(getLocaleMessage(message));\n                }\n              } else {\n                updateSwapOutAmount(stepKey, data);\n                initialAndUpdateSwapStep({ trade, key: stepKey });\n              }\n\n              return status === ResultStatus.OK;\n            };\n\n            const step3 = async () => {\n              const swapOutAmount = getSwapOutAmount(stepKey);\n\n              if (swapOutAmount !== undefined) {\n                // skip with error\n                if (new BigNumber(swapOutAmount.toString()).minus(outputAmount.currency.transFee).isLessThan(0)) {\n                  return \"skip\";\n                }\n\n                return await withdraw(\n                  outputAmount.currency.wrapped,\n                  poolId,\n                  swapOutAmount.toString(),\n                  ({ message }: ExternalTipArgs) => {\n                    openExternalTip({ message, tipKey: stepKey });\n                  },\n                );\n              }\n              return false;\n            };\n\n            calls = [step0, step1, step2, step3];\n          }\n        }\n      }\n\n      return calls;\n    },\n    [principal, slippageTolerance, allowedSlippage],\n  );\n}\n\nexport interface SwapCallbackArgs {\n  trade: Trade<Token, Token, TradeType> | undefined | null;\n  openExternalTip: OpenExternalTip;\n  subAccountTokenBalance: BigNumber;\n  swapInTokenUnusedBalance: bigint;\n}\n\nexport function useSwapCallback() {\n  const createSwapCalls = useSwapCalls();\n  const createSwapCall = useStepCalls();\n  const initialSteps = useInitialSwapSteps();\n\n  return useCallback(\n    ({ trade, openExternalTip, swapInTokenUnusedBalance, subAccountTokenBalance }: SwapCallbackArgs) => {\n      const key = newStepKey();\n\n      const calls = createSwapCalls({\n        trade,\n        swapInTokenUnusedBalance,\n        stepKey: key,\n        subAccountTokenBalance,\n        openExternalTip,\n      });\n      const { call, reset, retry } = createSwapCall(calls, key.toString());\n\n      initialSteps({ trade, key, retry });\n\n      return { call, reset, retry, key };\n    },\n    [createSwapCalls, createSwapCall, initialSteps],\n  );\n}\n","import { Box, Avatar } from \"@mui/material\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { parseTokenAmount, BigNumber } from \"@w2e/utils\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { isUseTransfer } from \"utils/token/index\";\nimport { getSwapOutAmount } from \"store/swap/hooks\";\nimport { TextButton } from \"components/index\";\n\nexport interface GetStepsArgs {\n  inputCurrency: Token;\n  outputCurrency: Token;\n  amount0: string;\n  amount1: string;\n  key: string;\n  retry?: () => Promise<boolean>;\n  handleReclaim: () => void;\n}\n\nexport function getSwapStep({ inputCurrency, outputCurrency, amount0, amount1, key, handleReclaim }: GetStepsArgs) {\n  const symbol0 = inputCurrency.symbol;\n  const symbol1 = outputCurrency.symbol;\n  const address0 = inputCurrency.wrapped.address;\n  const logo0 = inputCurrency.logo;\n  const logo1 = outputCurrency.logo;\n\n  const outAmount = getSwapOutAmount(key);\n\n  const amount0Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={logo0}>\n        &nbsp;\n      </Avatar>\n      {amount0}\n    </Box>\n  );\n\n  const amount1Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={logo1}>\n        &nbsp;\n      </Avatar>\n      {amount1}\n    </Box>\n  );\n\n  const outAmountValue = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={logo1}>\n        &nbsp;\n      </Avatar>\n      {outAmount ? parseTokenAmount(outAmount, outputCurrency.decimals).toFormat() : \"--\"}\n    </Box>\n  );\n\n  const withdrawAmountLessThanZero = outAmount\n    ? new BigNumber(outAmount.toString()).minus(outputCurrency.transFee).isLessThan(0)\n    : false;\n\n  const isTokenInUseTransfer = isUseTransfer(inputCurrency.wrapped);\n\n  const steps = [\n    {\n      title: isTokenInUseTransfer ? `Transfer ${symbol0}` : `Approve ${symbol0}`,\n      step: 0,\n      children: [\n        { label: t`Amount`, value: amount0Value },\n        { label: t`Canister Id`, value: address0 },\n      ],\n    },\n    {\n      title: t`Deposit ${symbol0}`,\n      step: 1,\n      children: [\n        {\n          label: t`Amount`,\n          value: amount0Value,\n        },\n        { label: t`Canister Id`, value: address0 },\n      ],\n      errorActions: [\n        <TextButton onClick={handleReclaim}>\n          <Trans>Reclaim</Trans>\n        </TextButton>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n\n    {\n      title: t`Swap ${symbol0} to ${symbol1}`,\n      step: 2,\n      children: [\n        { label: symbol0, value: amount0Value },\n        { label: symbol1, value: amount1Value },\n      ],\n    },\n    {\n      title: withdrawAmountLessThanZero ? t`Unable to withdraw ${symbol1}` : t`Withdraw ${symbol1}`,\n      step: 3,\n      children: [{ label: symbol1, value: outAmountValue }],\n      skipError: withdrawAmountLessThanZero ? t`The amount of withdrawal is less than the transfer fee` : undefined,\n      errorActions: [\n        <TextButton onClick={handleReclaim}>\n          <Trans>Reclaim</Trans>\n        </TextButton>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n  ];\n\n  return steps;\n}\n","import JSBI from \"jsbi\";\nimport { TradeType } from \"@w2e/constants\";\nimport { Token, CurrencyAmount, Fraction, Percent, Trade } from \"@w2e/swap-sdk\";\nimport {\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n} from \"constants/misc\";\n\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000));\n\n// computes realized lp fee as a percent\nexport function computeRealizedLPFeePercent(trade: Trade<Token, Token, TradeType>): Percent {\n  const percent: Percent = ONE_HUNDRED_PERCENT.subtract(\n    trade.route.pools.reduce<Percent>(\n      (currentFee: Percent, pool): Percent =>\n        currentFee.multiply(ONE_HUNDRED_PERCENT.subtract(new Fraction(pool.fee, 1_000_000))),\n      ONE_HUNDRED_PERCENT,\n    ),\n  );\n\n  return new Percent(percent.numerator, percent.denominator);\n}\n\n// computes price breakdown for the trade\nexport function computeRealizedLPFeeAmount(\n  trade?: Trade<Token, Token, TradeType> | null,\n): CurrencyAmount<Token> | undefined {\n  if (trade) {\n    const realizedLPFee = computeRealizedLPFeePercent(trade);\n\n    // the amount of the input that accrues to LPs\n    return CurrencyAmount.fromRawAmount(trade.inputAmount.currency, trade.inputAmount.multiply(realizedLPFee).quotient);\n  }\n\n  return undefined;\n}\n\nconst IMPACT_TIERS = [\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  ALLOWED_PRICE_IMPACT_LOW,\n];\n\ntype WarningSeverity = 0 | 1 | 2 | 3 | 4;\nexport function warningSeverity(priceImpact: Percent | undefined): WarningSeverity {\n  if (!priceImpact) return 4;\n  let impact: WarningSeverity = IMPACT_TIERS.length as WarningSeverity;\n  for (const impactLevel of IMPACT_TIERS) {\n    if (impactLevel.lessThan(priceImpact)) return impact;\n    impact--;\n  }\n  return 0;\n}\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSyncAlt(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.1141 13.0205L5.08192 13.9982L0.15625 8.44531H13.9977V9.89187H3.33888L6.1141 13.0205Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.6588 4.10635L7.88465 0.977754L8.91577 0L13.8414 5.5529H0V4.10635H10.6588Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSyncAlt);\nexport default __webpack_public_path__ + \"static/media/sync-alt.eb3f9e82a97a704168c8c391288eb80d.svg\";\nexport { ForwardRef as ReactComponent };","export default function LinkIcon() {\n  return (\n    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.43866 2.42969H1.1619V0.429688H8.85766H9.85766V1.42969V9.12545H7.85766V3.83911L1.94156 9.75521L0.527344 8.341L6.43866 2.42969Z\"\n        fill=\"#5669DC\"\n      />\n    </svg>\n  );\n}\n","import { useCallback, useState, useMemo } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Price, Token } from \"@w2e/swap-sdk\";\nimport { formatDollarAmount } from \"@w2e/utils\";\nimport { Typography, Grid, useTheme, useMediaQuery } from \"@mui/material\";\nimport LinkIcon from \"assets/images/LinkIcon\";\nimport { TextButton } from \"components/index\";\nimport { INFO_URL } from \"constants/index\";\nimport { ReactComponent as SyncAltIcon } from \"assets/icons/sync-alt.svg\";\n\nexport interface TradePricePropsNoInfo {\n  price: Price<Token, Token> | undefined;\n  token0?: Token | undefined;\n  token0PriceUSDValue?: string | null | undefined | number;\n  token1?: Token | undefined;\n  token1PriceUSDValue?: string | null | undefined | number;\n}\n\nexport function TradePriceNoInfo({\n  price,\n  token0,\n  token0PriceUSDValue,\n  token1,\n  token1PriceUSDValue,\n}: TradePricePropsNoInfo) {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [showInverted, setShowInverted] = useState(true);\n\n  let formattedPrice: string | undefined = \"\";\n  try {\n    formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6);\n  } catch (error) {\n    formattedPrice = \"0\";\n  }\n\n  const label = showInverted ? `${price?.quoteCurrency?.symbol}` : `${price?.baseCurrency?.symbol} `;\n  const labelInverted = showInverted ? `${price?.baseCurrency?.symbol} ` : `${price?.quoteCurrency?.symbol}`;\n  const flipPrice = useCallback(() => setShowInverted(!showInverted), [setShowInverted, showInverted]);\n\n  const usdValue = useMemo(() => {\n    if (!price || !token0 || !token0PriceUSDValue || !token1 || !token1PriceUSDValue) return undefined;\n\n    return showInverted\n      ? price.baseCurrency.equals(token0)\n        ? token0PriceUSDValue\n        : token1PriceUSDValue\n      : price.quoteCurrency.equals(token0)\n        ? token0PriceUSDValue\n        : token1PriceUSDValue;\n  }, [price, showInverted, token0, token0PriceUSDValue, token1, token1PriceUSDValue]);\n\n  const text = `${`1 ${labelInverted} = ${formattedPrice ? new BigNumber(formattedPrice).toFormat() : \"-\"}`} ${label}`;\n\n  return (\n    <Grid container justifyContent=\"flex-end\" alignItems=\"center\">\n      <Typography onClick={flipPrice} sx={{ cursor: \"pointer\", ...(matchDownSM ? { fontSize: \"12px\" } : {}) }}>\n        {text}\n      </Typography>\n      {usdValue ? (\n        <Typography onClick={flipPrice} sx={{ cursor: \"pointer\" }}>\n          ({formatDollarAmount(usdValue)})\n        </Typography>\n      ) : null}\n      <SyncAltIcon style={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={flipPrice} />\n    </Grid>\n  );\n}\n\nexport interface TradePriceProps {\n  price: Price<Token, Token> | undefined;\n  token0?: Token | undefined;\n  token0PriceUSDValue?: string | null | undefined | number;\n  token1?: Token | undefined;\n  token1PriceUSDValue?: string | null | undefined | number;\n  poolId: string | undefined;\n  v2?: boolean;\n  fontSize?: string;\n}\n\nexport default function TradePrice({\n  price,\n  token0,\n  token0PriceUSDValue,\n  token1,\n  token1PriceUSDValue,\n  poolId,\n  v2,\n  fontSize,\n}: TradePriceProps) {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [showInverted, setShowInverted] = useState(true);\n\n  let formattedPrice: string | undefined = \"\";\n  try {\n    formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6);\n  } catch (error) {\n    formattedPrice = \"0\";\n  }\n\n  const label = showInverted ? `${price?.quoteCurrency?.symbol}` : `${price?.baseCurrency?.symbol} `;\n  const labelInverted = showInverted ? `${price?.baseCurrency?.symbol} ` : `${price?.quoteCurrency?.symbol}`;\n  const flipPrice = useCallback(() => setShowInverted(!showInverted), [setShowInverted, showInverted]);\n\n  const usdValue = useMemo(() => {\n    if (!price || !token0 || !token0PriceUSDValue || !token1 || !token1PriceUSDValue) return undefined;\n\n    return showInverted\n      ? price.baseCurrency.equals(token0)\n        ? token0PriceUSDValue\n        : token1PriceUSDValue\n      : price.quoteCurrency.equals(token0)\n        ? token0PriceUSDValue\n        : token1PriceUSDValue;\n  }, [price, showInverted, token0, token0PriceUSDValue, token1, token1PriceUSDValue]);\n\n  const text = `${`1 ${labelInverted} = ${formattedPrice ? new BigNumber(formattedPrice).toFormat() : \"-\"}`} ${label}`;\n\n  return (\n    <Grid container>\n      <Grid item xs>\n        <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\n          <Typography\n            onClick={flipPrice}\n            sx={{ cursor: \"pointer\", fontSize, ...(matchDownSM ? { fontSize: \"12px\" } : {}) }}\n          >\n            {text}\n          </Typography>\n          {usdValue ? (\n            <Typography onClick={flipPrice} sx={{ fontSize, cursor: \"pointer\" }}>\n              ({formatDollarAmount(usdValue)})\n            </Typography>\n          ) : null}\n          <SyncAltIcon style={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={flipPrice} />\n        </Grid>\n      </Grid>\n\n      <TextButton link={`${INFO_URL}/swap/${v2 ? \"v2/\" : \"\"}pool/details/${poolId}`}>\n        Info <LinkIcon />\n      </TextButton>\n    </Grid>\n  );\n}\n","import { Token, CurrencyAmount } from \"@w2e/swap-sdk\";\nimport BigNumber from \"bignumber.js\";\nimport { useAllowance } from \"hooks/token\";\nimport { useMemo } from \"react\";\nimport { useAccountPrincipalString } from \"store/auth/hooks\";\nimport { isUseTransfer } from \"utils/token\";\n\nexport interface UseMaxAmountSpendArgs {\n  currencyAmount: CurrencyAmount<Token> | undefined;\n  poolId?: string;\n}\n\nexport function useMaxAmountSpend({ currencyAmount, poolId }: UseMaxAmountSpendArgs) {\n  const principal = useAccountPrincipalString();\n\n  const token = useMemo(() => {\n    if (!currencyAmount) return undefined;\n    return currencyAmount?.wrapped.currency;\n  }, [currencyAmount]);\n\n  const allowanceCanisterId = useMemo(() => {\n    if (!token) return undefined;\n    return isUseTransfer(token) ? undefined : token.address;\n  }, [token]);\n\n  const { result: allowance } = useAllowance({ canisterId: allowanceCanisterId, owner: principal, spender: poolId });\n\n  return useMemo(() => {\n    if (!currencyAmount) return undefined;\n\n    // The tokens use transfer to deposit, 1 trans fee is needed\n    if (allowanceCanisterId === undefined) {\n      return currencyAmount.subtract(\n        CurrencyAmount.fromRawAmount(currencyAmount.currency, currencyAmount.currency.transFee),\n      );\n    }\n\n    // The tokens use approve to deposit, but can't get allowance, so 2 trans fee is needed\n    if (allowance === undefined) {\n      return currencyAmount.subtract(\n        CurrencyAmount.fromRawAmount(currencyAmount.currency, currencyAmount.currency.transFee * 2),\n      );\n    }\n\n    // Need call token approve, would cost one transfer fee\n    if (new BigNumber(allowance.toString()).isLessThan(currencyAmount.quotient.toString())) {\n      return currencyAmount.subtract(\n        CurrencyAmount.fromRawAmount(currencyAmount.currency, currencyAmount.currency.transFee * 2),\n      );\n    }\n\n    return currencyAmount.subtract(\n      CurrencyAmount.fromRawAmount(currencyAmount.currency, currencyAmount.currency.transFee),\n    );\n  }, [allowance, currencyAmount, allowanceCanisterId]);\n}\n","import { useMemo } from \"react\";\nimport { Grid, Box, Typography } from \"@mui/material\";\nimport CurrencySelector from \"components/CurrencySelector\";\nimport BigNumber from \"bignumber.js\";\nimport { formatDollarAmount } from \"@w2e/utils\";\nimport { Token, CurrencyAmount } from \"@w2e/swap-sdk\";\nimport { formatCurrencyAmount } from \"utils/swap/formatCurrencyAmount\";\nimport { UseCurrencyState } from \"hooks/useCurrency\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { useMaxAmountSpend } from \"hooks/swap/useMaxAmountSpend\";\nimport { SwapInput } from \"components/swap/SwapInput\";\nimport { useTheme } from \"@emotion/react\";\n\nexport interface SwapInputCurrencyProps {\n  onMax?: () => void;\n  onTokenChange: (token: TokenInfo) => void;\n  currencyState: UseCurrencyState;\n  currency: Token | undefined;\n  currencyPrice: string | undefined | number;\n  formatAmount: string;\n  onInput: (value: string) => void;\n  currencyBalance: CurrencyAmount<Token> | undefined;\n  parsedAmount: CurrencyAmount<Token> | undefined;\n  tradePoolId: string | undefined;\n  usdChange?: string | null;\n  background?: \"level3\" | \"level1\";\n  disabled?: boolean;\n}\n\nexport function SwapInputCurrency({\n  onMax,\n  currencyState,\n  onTokenChange,\n  currency,\n  currencyPrice,\n  formatAmount,\n  onInput,\n  currencyBalance,\n  parsedAmount,\n  tradePoolId,\n  usdChange,\n  background = \"level3\",\n  disabled,\n}: SwapInputCurrencyProps) {\n  const theme = useTheme() as Theme;\n\n  const maxInputAmount = useMaxAmountSpend({\n    currencyAmount: currencyBalance,\n    poolId: tradePoolId,\n  });\n\n  const showMaxButton = Boolean(maxInputAmount?.greaterThan(0) && !parsedAmount?.equalTo(maxInputAmount));\n\n  const currencyBalanceUSDValue = useMemo(() => {\n    const amount = formatAmount;\n    if (!currencyPrice || !amount) return undefined;\n    return new BigNumber(amount).multipliedBy(currencyPrice).toNumber();\n  }, [currencyPrice, formatAmount]);\n\n  const USDChangeColor = !new BigNumber(usdChange ?? 0).isLessThan(0) ? \"#54C081\" : \"#D3625B\";\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: background === \"level3\" ? theme.palette.background.level3 : theme.palette.background.level1,\n        border: `1px solid ${theme.palette.background.level4}`,\n        borderRadius: \"16px\",\n        padding: \"14px 10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n          padding: \"12px 8px\",\n        },\n      }}\n    >\n      <Box sx={{ display: \"flex\", gap: \"0 8px\" }}>\n        <Box>\n          <CurrencySelector\n            currencyId={currency?.address}\n            onChange={onTokenChange}\n            disabledCurrency={currency ? [currency] : []}\n            bgGray\n            loading={currencyState === UseCurrencyState.LOADING}\n          />\n        </Box>\n\n        <Box sx={{ display: \"flex\", flex: 1, alignItems: \"center\" }}>\n          <SwapInput value={formatAmount} currency={currency} onUserInput={onInput} disabled={disabled} />\n        </Box>\n      </Box>\n\n      {currency ? (\n        <Grid container alignItems=\"center\" mt=\"12px\">\n          <Typography>\n            <Trans>Balance: {currencyBalance ? formatCurrencyAmount(currencyBalance, currency.decimals) : \"--\"}</Trans>\n          </Typography>\n\n          {!!showMaxButton && !!onMax ? (\n            <Typography\n              fontSize=\"12px\"\n              sx={{\n                padding: \"1px 3px\",\n                cursor: \"pointer\",\n                borderRadius: \"2px\",\n                backgroundColor: theme.colors.secondaryMain,\n                color: \"#ffffff\",\n                marginLeft: \"4px\",\n              }}\n              onClick={onMax}\n            >\n              <Trans>MAX</Trans>\n            </Typography>\n          ) : null}\n\n          {currencyBalanceUSDValue ? (\n            <Grid item xs>\n              <Grid container alignItems=\"center\" justifyContent=\"flex-end\">\n                <Typography>\n                  ~{formatDollarAmount(currencyBalanceUSDValue)}\n                  {usdChange ? (\n                    <Typography component=\"span\" sx={{ color: USDChangeColor }}>\n                      ({usdChange}%)\n                    </Typography>\n                  ) : null}\n                </Typography>\n              </Grid>\n            </Grid>\n          ) : null}\n        </Grid>\n      ) : null}\n    </Box>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport SwitchIcon from \"assets/images/swap/switch\";\nimport { CurrencyAmount, Token } from \"@w2e/swap-sdk\";\nimport { useSwapState, useSwapHandlers } from \"store/swap/hooks\";\nimport BigNumber from \"bignumber.js\";\nimport { SWAP_FIELD } from \"constants/swap\";\nimport { UseCurrencyState } from \"hooks/useCurrency\";\nimport { TokenInfo } from \"types/token\";\nimport { SwapInputCurrency } from \"./SwapInputCurrency\";\n\nexport interface SwapInputWrapperProps {\n  onInput: (value: string, type: \"input\" | \"output\") => void;\n  onMaxInput: () => void;\n  onTokenAChange: (token: TokenInfo) => void;\n  onTokenBChange: (token: TokenInfo) => void;\n  tokenAPrice: string | number | undefined;\n  tokenBPrice: string | number | undefined;\n  parsedAmounts: {\n    INPUT: CurrencyAmount<Token> | undefined;\n    OUTPUT: CurrencyAmount<Token> | undefined;\n  };\n  tradePoolId: string | undefined;\n  currencyBalances: {\n    INPUT: CurrencyAmount<Token> | undefined;\n    OUTPUT: CurrencyAmount<Token> | undefined;\n  };\n  inputCurrency: Token | undefined;\n  outputCurrency: Token | undefined;\n  inputCurrencyState: UseCurrencyState;\n  outputCurrencyState: UseCurrencyState;\n  ui?: \"pro\" | \"normal\";\n}\n\nexport function SwapInputWrapper({\n  onInput,\n  onMaxInput,\n  onTokenAChange,\n  onTokenBChange,\n  tokenAPrice,\n  tokenBPrice,\n  parsedAmounts,\n  tradePoolId,\n  currencyBalances,\n  inputCurrency,\n  outputCurrency,\n  inputCurrencyState,\n  outputCurrencyState,\n  ui = \"normal\",\n}: SwapInputWrapperProps) {\n  const { independentField, typedValue } = useSwapState();\n\n  const { onSwitchTokens } = useSwapHandlers();\n\n  const dependentField = independentField === SWAP_FIELD.INPUT ? SWAP_FIELD.OUTPUT : SWAP_FIELD.INPUT;\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? \"\",\n  };\n\n  const inputBalanceUSDValue = useMemo(() => {\n    const amount = formattedAmounts[SWAP_FIELD.INPUT];\n    if (!tokenAPrice || !amount) return undefined;\n    return new BigNumber(amount).multipliedBy(tokenAPrice).toNumber();\n  }, [tokenAPrice, formattedAmounts]);\n\n  const outputBalanceUSDValue = useMemo(() => {\n    const amount = formattedAmounts[SWAP_FIELD.OUTPUT];\n    if (!tokenBPrice || !amount) return undefined;\n    return new BigNumber(amount).multipliedBy(tokenBPrice).toNumber();\n  }, [tokenBPrice, formattedAmounts]);\n\n  const USDChange =\n    !!outputBalanceUSDValue && !!inputBalanceUSDValue\n      ? new BigNumber(outputBalanceUSDValue)\n        .minus(inputBalanceUSDValue)\n        .dividedBy(inputBalanceUSDValue)\n        .multipliedBy(100)\n        .toFixed(2)\n      : null;\n\n  return (\n    <Box>\n      <Box sx={{ position: \"relative\" }}>\n        <SwapInputCurrency\n          currency={inputCurrency}\n          currencyPrice={tokenAPrice}\n          formatAmount={formattedAmounts[SWAP_FIELD.INPUT]}\n          currencyBalance={currencyBalances[SWAP_FIELD.INPUT]}\n          onMax={onMaxInput}\n          onInput={(value: string) => onInput(value, \"input\")}\n          onTokenChange={onTokenAChange}\n          tradePoolId={tradePoolId}\n          currencyState={inputCurrencyState}\n          parsedAmount={parsedAmounts[SWAP_FIELD.INPUT]}\n          background={ui === \"pro\" ? \"level1\" : \"level3\"}\n        />\n\n        <Box\n          sx={{\n            position: \"absolute\",\n            bottom: \"-17px\",\n            left: \"50%\",\n            transform: \"translate(-50%, 0)\",\n            width: \"30px\",\n            height: \"31px\",\n            cursor: \"pointer\",\n            overflow: \"hidden\",\n          }}\n          onClick={onSwitchTokens}\n        >\n          <SwitchIcon />\n        </Box>\n      </Box>\n\n      <Box sx={{ marginTop: \"8px\" }}>\n        <SwapInputCurrency\n          currency={outputCurrency}\n          currencyPrice={tokenBPrice}\n          formatAmount={formattedAmounts[SWAP_FIELD.OUTPUT]}\n          currencyBalance={currencyBalances[SWAP_FIELD.OUTPUT]}\n          onInput={(value: string) => onInput(value, \"output\")}\n          onTokenChange={onTokenBChange}\n          tradePoolId={tradePoolId}\n          currencyState={outputCurrencyState}\n          parsedAmount={parsedAmounts[SWAP_FIELD.OUTPUT]}\n          usdChange={USDChange}\n          background={ui === \"pro\" ? \"level1\" : \"level3\"}\n          disabled\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { Percent } from \"@w2e/swap-sdk\";\n\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact: Percent | undefined }) {\n  return priceImpact ? `${priceImpact.multiply(-1).toFixed(2)}%` : \"0.00%\";\n}\n","import { useMemo } from \"react\";\nimport SwapModal from \"components/modal/swap\";\nimport { Typography, Box, Grid, Button, CircularProgress, useMediaQuery } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { ArrowRightAlt } from \"@mui/icons-material\";\nimport CurrencyAvatar from \"components/CurrencyAvatar\";\nimport { computeRealizedLPFeePercent } from \"utils/swap/prices\";\nimport { TradePriceNoInfo as TradePrice } from \"components/swap/TradePrice\";\nimport Tooltip from \"components/Tooltip\";\nimport { numberToString } from \"@w2e/utils\";\nimport { Token, CurrencyAmount, Trade, Percent } from \"@w2e/swap-sdk\";\nimport { TradeType } from \"@w2e/constants\";\nimport { t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { isElement } from \"react-is\";\nimport { useSwapFeeTip } from \"hooks/swap/useSwapFeeTip\";\nimport FormattedPriceImpact from \"./FormattedPriceImpact\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    transferBox: {\n      borderRadius: \"12px\",\n      background: theme.palette.background.level3,\n      padding: \"10px 12px\",\n    },\n    arrowDown: {\n      transform: \"rotate(90deg)\",\n    },\n  };\n});\n\nexport interface SwapCurrencyProps {\n  currency: Token | undefined;\n  currencyAmount: CurrencyAmount<Token> | undefined;\n  inputCurrency?: boolean;\n}\n\nexport function SwapCurrency({ currency, currencyAmount, inputCurrency }: SwapCurrencyProps) {\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n      <Box>\n        <Grid container alignItems=\"center\">\n          <Grid sx={{ mr: 1 }}>\n            <CurrencyAvatar currency={currency} bgColor=\"#497BF7\" borderColor=\"transparent\" />\n          </Grid>\n          <Grid item>\n            <Typography color=\"textPrimary\">{currency?.symbol}</Typography>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box sx={{ display: \"flex\", gap: \"0 3px\", alignItems: \"center\" }}>\n        <Typography color=\"textPrimary\" align=\"right\">\n          {currencyAmount?.toSignificant(6, { groupSeparator: \",\" })}\n        </Typography>\n\n        {inputCurrency ? (\n          <Tooltip background=\"#ffffff\" tips={t`Actual swap amount after deducting transfer fees`} />\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n\nexport interface DetailItemProps {\n  label: string;\n  value: React.ReactChild;\n  tooltip?: React.ReactChild;\n}\n\nexport function DetailItem({ label, value, tooltip }: DetailItemProps) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <Box sx={{ flex: 1 }}>\n        <Typography\n          sx={{\n            lineHeight: \"12px\",\n            \"@media(max-width: 640px)\": { fontSize: \"12px\" },\n          }}\n          component=\"div\"\n        >\n          {label}\n          {tooltip ? (\n            <Box\n              sx={{ display: \"inline-block\", cursor: \"pointer\", position: \"relative\", top: \"4px\", margin: \"0 0 0 5px\" }}\n            >\n              {tooltip}\n            </Box>\n          ) : null}\n        </Typography>\n      </Box>\n\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        {isElement(value) ? (\n          value\n        ) : (\n          <Typography\n            color=\"textPrimary\"\n            align=\"right\"\n            sx={{\n              ...(matchDownSM ? { fontSize: \"12px\" } : {}),\n            }}\n          >\n            {value}\n          </Typography>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport interface SwapConfirmModalProps {\n  open: boolean;\n  loading: boolean;\n  onConfirm: () => void;\n  onClose: () => void;\n  slippageTolerance: Percent | null;\n  trade: Trade<Token, Token, TradeType> | null;\n}\n\nexport default ({ slippageTolerance, open, trade, loading, onConfirm, onClose }: SwapConfirmModalProps) => {\n  const classes = useStyle();\n\n  const { realizedLPFee, priceImpact } = useMemo(() => {\n    if (!trade) return { realizedLPFee: undefined, priceImpact: undefined };\n\n    const feeAmount = CurrencyAmount.fromRawAmount(\n      trade.inputAmount.currency,\n      numberToString(trade.inputAmount.currency.transFee),\n    );\n\n    const realizedLpFeePercent = computeRealizedLPFeePercent(trade);\n    // sub transferFee\n    const realizedLPFee = trade.inputAmount.subtract(feeAmount).multiply(realizedLpFeePercent);\n    const priceImpact = trade.priceImpact.subtract(realizedLpFeePercent);\n    return { priceImpact, realizedLPFee };\n  }, [trade]);\n\n  const { inputFeeUSDValue, inputTokenFee, outputFeeUSDValue, outputTokenFee } = useSwapFeeTip(trade);\n\n  return (\n    <SwapModal open={open} title={t`Confirm Swap`} onClose={onClose}>\n      <>\n        <Box>\n          <Box className={classes.transferBox}>\n            <SwapCurrency currency={trade?.inputAmount?.currency} currencyAmount={trade?.inputAmount} inputCurrency />\n            <Grid container alignItems=\"center\">\n              <ArrowRightAlt className={classes.arrowDown} sx={{ color: \"#C4C4C4\" }} />\n            </Grid>\n            <SwapCurrency currency={trade?.outputAmount?.currency} currencyAmount={trade?.outputAmount} />\n          </Box>\n          {/* <Grid mt={1} container justifyContent=\"center\">\n          <Typography fontSize={12}>\n            Output is estimated. You will receive at least{\" \"}\n            <Typography component=\"span\" color=\"textPrimary\" fontSize=\"12px\">\n              {trade?.minimumAmountOut(slippageTolerance).toSignificant(6)}{\" \"}\n              {trade?.outputAmount.currency.symbol}\n            </Typography>{\" \"}\n            or the transaction will revert.\n          </Typography>\n        </Grid> */}\n        </Box>\n\n        <Box mt={2} sx={{ display: \"flex\", flexDirection: \"column\", gap: \"20px 0\" }}>\n          <DetailItem label={t`Price`} value={<TradePrice price={trade?.executionPrice} />} />\n          <DetailItem\n            label={t`Liquidity Provider Fee`}\n            value={realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${realizedLPFee.currency.symbol}` : \"-\"}\n            tooltip={<Tooltip background=\"#ffffff\" tips={t`For each trade a 0.3% fee is paid.`} />}\n          />\n          <DetailItem\n            label={t`Price Impact`}\n            value={FormattedPriceImpact({ priceImpact })}\n            tooltip={\n              <Tooltip\n                background=\"#ffffff\"\n                tips={t`The difference between the market price and your price due to trade size.`}\n              />\n            }\n          />\n          <DetailItem\n            label={t`Slippage tolerance`}\n            value={`${slippageTolerance?.toFixed(2)}%`}\n            tooltip={\n              <Tooltip\n                background=\"#ffffff\"\n                tips={t`Your transaction will revert if the price changes unfavorably\n              by more than this percentage.`}\n              />\n            }\n          />\n          <DetailItem\n            label=\"Minimum received\"\n            value={`${slippageTolerance ? trade?.minimumAmountOut(slippageTolerance).toSignificant(6) : \"--\"} ${trade\n              ?.outputAmount.currency.symbol}`}\n            tooltip={\n              <Tooltip\n                background=\"#ffffff\"\n                tips=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              />\n            }\n          />\n          <DetailItem\n            label={t`Estimated transfer fee for the swap`}\n            value={\n              <Box>\n                <Typography color=\"text.primary\" sx={{ \"@media(max-width: 640px)\": { fontSize: \"12px\" } }}>\n                  {inputTokenFee && inputFeeUSDValue && trade?.inputAmount.currency\n                    ? `${inputTokenFee.toFormat()} ${trade.inputAmount.currency.symbol} ($${inputFeeUSDValue})`\n                    : \"--\"}\n                </Typography>\n                <Typography\n                  color=\"text.primary\"\n                  sx={{ margin: \"5px 0 0 0\", \"@media(max-width: 640px)\": { fontSize: \"12px\" } }}\n                >\n                  {outputTokenFee && trade?.outputAmount.currency\n                    ? `${outputTokenFee.toFormat()} ${trade.outputAmount.currency.symbol} ($${outputFeeUSDValue ?? \"--\"\n                    })`\n                    : \"--\"}\n                </Typography>\n              </Box>\n            }\n            tooltip={<Tooltip background=\"#ffffff\" tips={t`Swapping a too small amount might lead to failure!`} />}\n          />\n        </Box>\n\n        <Box mt={4}>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            fullWidth\n            onClick={onConfirm}\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n          >\n            {loading ? \"\" : t`Confirm Swap`}\n          </Button>\n        </Box>\n      </>\n    </SwapModal>\n  );\n};\n","import { useMemo } from \"react\";\nimport { parseTokenAmount } from \"@w2e/utils\";\nimport { TradeType } from \"@w2e/constants\";\nimport { Token, Trade } from \"@w2e/swap-sdk\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\n\nexport function useSwapFeeTip(trade: Trade<Token, Token, TradeType> | null) {\n  const inputToken = trade?.inputAmount.currency;\n  const outputToken = trade?.outputAmount.currency;\n\n  const inputTokenUSDPrice = useUSDPriceById(inputToken?.wrapped.address);\n  const outputTokenUSDPrice = useUSDPriceById(outputToken?.wrapped.address);\n\n  const inputTokenFee = useMemo(() => {\n    if (!inputToken) return undefined;\n    return parseTokenAmount(inputToken?.transFee, inputToken?.decimals).multipliedBy(2);\n  }, [inputToken]);\n\n  const outputTokenFee = useMemo(() => {\n    if (!outputToken) return undefined;\n    return parseTokenAmount(outputToken.transFee, outputToken.decimals);\n  }, [outputToken]);\n\n  const inputFeeUSDValue = useMemo(() => {\n    if (!inputTokenFee || !inputTokenUSDPrice) return undefined;\n    return inputTokenFee.multipliedBy(inputTokenUSDPrice).toFixed(4);\n  }, [inputTokenFee, inputTokenUSDPrice]);\n\n  const outputFeeUSDValue = useMemo(() => {\n    if (!outputTokenFee || !outputTokenUSDPrice) return undefined;\n    return outputTokenFee.multipliedBy(outputTokenUSDPrice).toFixed(4);\n  }, [outputTokenFee, outputTokenUSDPrice]);\n\n  return useMemo(\n    () => ({ inputTokenFee, inputFeeUSDValue, outputTokenFee, outputFeeUSDValue }),\n    [inputTokenFee, inputFeeUSDValue, outputTokenFee, outputFeeUSDValue],\n  );\n}\n","import { useState, useCallback, useMemo, useEffect } from \"react\";\nimport { Grid, Box, Typography, CircularProgress } from \"@mui/material\";\nimport { useSwapState, useSwapHandlers, useSwapInfo, useCleanSwapState, useLoadDefaultParams } from \"store/swap/hooks\";\nimport BigNumber from \"bignumber.js\";\nimport { toSignificant, isNullArgs } from \"@w2e/utils\";\nimport { SWAP_FIELD } from \"constants/swap\";\nimport { useExpertModeManager } from \"store/swap/cache/hooks\";\nimport { TradeState } from \"hooks/swap/useTrade\";\nimport { maxAmountFormat } from \"utils/swap/index\";\nimport { useSwapCallback } from \"hooks/swap/useSwapCallback\";\nimport { ExternalTipArgs } from \"types/index\";\nimport { useSuccessTip, useLoadingTip, useErrorTip } from \"hooks/useTips\";\nimport { warningSeverity } from \"utils/swap/prices\";\nimport { useUSDPrice } from \"hooks/useUSDPrice\";\nimport TradePrice from \"components/swap/TradePrice\";\nimport { Trans, t } from \"@lingui/macro\";\nimport Identity, { CallbackProps } from \"components/Identity\";\nimport Button from \"components/authentication/ButtonConnector\";\nimport { MainCard } from \"@w2e/ui\";\nimport StepViewButton from \"components/Steps/View\";\nimport { TokenInfo } from \"types/token\";\nimport { ReclaimTips } from \"components/ReclaimTips\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { SubAccount } from \"@dfinity/ledger-icp\";\nimport { useUserUnusedBalance, useTokenBalance } from \"@w2e/hooks\";\nimport { useMaxAmountSpend } from \"hooks/swap/useMaxAmountSpend\";\nimport { SwapInputWrapper } from \"components/swap/SwapInputWrapper\";\nimport SwapConfirm from \"components/swap/SwapConfirm\";\nimport { ReclaimLink } from \"components/swap/ReclaimLink\";\nimport { useHistory } from \"react-router-dom\";\nimport { ICP } from \"@w2e/tokens\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nexport interface SwapWrapperProps {\n  ui?: \"pro\" | \"normal\";\n  onInputTokenChange?: (token: Token | undefined) => void;\n  onOutputTokenChange?: (tokenId: Token | undefined) => void;\n  onTradePoolIdChange?: (poolId: string | undefined) => void;\n}\n\nexport function SwapWrapper({\n  ui = \"normal\",\n  onInputTokenChange,\n  onOutputTokenChange,\n  onTradePoolIdChange,\n}: SwapWrapperProps) {\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n  const [refreshBalance, setRefreshBalance] = useState(false);\n\n  const [isExpertMode] = useExpertModeManager();\n  const principal = useAccountPrincipal();\n  const history = useHistory();\n\n  useLoadDefaultParams();\n\n  const { [SWAP_FIELD.INPUT]: currencyA, [SWAP_FIELD.OUTPUT]: currencyB, independentField } = useSwapState();\n\n  const { onUserInput } = useSwapHandlers();\n  const handleClearSwapState = useCleanSwapState();\n\n  const {\n    inputError: swapInputError,\n    parsedAmount,\n    trade,\n    tradePoolId,\n    state: swapState,\n    currencyBalances,\n    userSlippageTolerance,\n    inputCurrency,\n    outputCurrency,\n    inputCurrencyState,\n    outputCurrencyState,\n  } = useSwapInfo({ refreshBalance });\n\n  // For swap pro\n  useEffect(() => {\n    if (onInputTokenChange) onInputTokenChange(inputCurrency);\n    if (onOutputTokenChange) onOutputTokenChange(outputCurrency);\n    if (onTradePoolIdChange) onTradePoolIdChange(tradePoolId);\n  }, [tradePoolId, outputCurrency, inputCurrency]);\n\n  const parsedAmounts = useMemo(\n    () => ({\n      [SWAP_FIELD.INPUT]: independentField === SWAP_FIELD.INPUT ? parsedAmount : trade?.inputAmount,\n      [SWAP_FIELD.OUTPUT]: independentField === SWAP_FIELD.OUTPUT ? parsedAmount : trade?.outputAmount,\n    }),\n    [independentField, parsedAmount],\n  );\n\n  const handleSwap = () => {\n    setConfirmModalShow(true);\n  };\n\n  const handleTokenAChange = useCallback(\n    (token: TokenInfo) => {\n      const prePath = ui === \"pro\" ? \"/swap-pro\" : \"/swap\";\n\n      if (token.canisterId === currencyB.currencyId) {\n        history.push(`${prePath}?input=${token.canisterId}&output=${ICP.address}`);\n      } else {\n        history.push(`${prePath}?input=${token.canisterId}&output=${currencyB.currencyId}`);\n      }\n    },\n    [currencyB],\n  );\n\n  const handleTokenBChange = useCallback(\n    (token: TokenInfo) => {\n      const prePath = ui === \"pro\" ? \"/swap-pro\" : \"/swap\";\n\n      if (token.canisterId === currencyA.currencyId) {\n        history.push(`${prePath}?input=${ICP.address}&output=${token.canisterId}`);\n      } else {\n        history.push(`${prePath}?input=${currencyA.currencyId}&output=${token.canisterId}`);\n      }\n    },\n    [currencyA],\n  );\n\n  const handleInput = (value: string, type: \"input\" | \"output\") => {\n    if (type === \"input\") {\n      onUserInput(SWAP_FIELD.INPUT, value);\n    } else {\n      onUserInput(SWAP_FIELD.OUTPUT, value);\n    }\n  };\n\n  const isLoadingRoute = swapState === TradeState.LOADING;\n  const isNoRouteFound = swapState === TradeState.NO_ROUTE_FOUND;\n  const isValid = !swapInputError && !isLoadingRoute && !isNoRouteFound;\n  const isPoolNotChecked = swapState === TradeState.NOT_CHECK;\n\n  const swapCallback = useSwapCallback();\n\n  const [swapLoading, setSwapLoading] = useState(false);\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n\n  const inputTokenAddress = inputCurrency?.address;\n  const tradePool = trade?.route.pools[0];\n  const sub = useMemo(() => {\n    return principal ? SubAccount.fromPrincipal(principal).toUint8Array() : undefined;\n  }, [principal]);\n\n  const { result: subAccountTokenBalance } = useTokenBalance({\n    canisterId: inputTokenAddress,\n    address: tradePoolId,\n    sub,\n  });\n  const { result: unusedBalance } = useUserUnusedBalance(tradePoolId, principal);\n  const swapTokenUnusedBalance = useMemo(() => {\n    if (!tradePool || !unusedBalance || !inputCurrency) return undefined;\n    return tradePool.token0.address === inputCurrency.address ? unusedBalance.balance0 : unusedBalance.balance1;\n  }, [tradePool, inputCurrency, unusedBalance]);\n\n  const handleSwapConfirm = useCallback(async () => {\n    if (swapLoading || !trade || isNullArgs(subAccountTokenBalance) || isNullArgs(swapTokenUnusedBalance)) return;\n\n    const { call, key } = swapCallback({\n      trade,\n      subAccountTokenBalance: subAccountTokenBalance as BigNumber,\n      swapInTokenUnusedBalance: swapTokenUnusedBalance as bigint,\n      openExternalTip: ({ message, tipKey }: ExternalTipArgs) => {\n        openErrorTip(<ReclaimTips message={message} tipKey={tipKey} />);\n      },\n    });\n\n    setSwapLoading(true);\n\n    const amount0 = trade.inputAmount.toSignificant(12, { groupSeparator: \",\" });\n    const amount1 = trade.outputAmount.toSignificant(12, { groupSeparator: \",\" });\n\n    const loadingKey = openLoadingTip(\n      t`Swap ${amount0} ${inputCurrency?.symbol} to ${amount1} ${outputCurrency?.symbol}`,\n      {\n        extraContent: <StepViewButton step={key} />,\n      },\n    );\n\n    setConfirmModalShow(false);\n    setSwapLoading(false);\n\n    handleInput(\"\", \"input\");\n    handleInput(\"\", \"output\");\n\n    const result = await call();\n\n    closeLoadingTip(loadingKey);\n\n    if (result) {\n      openSuccessTip(t`Swapped Successfully`);\n      setRefreshBalance(true);\n      setTimeout(() => {\n        setRefreshBalance(false);\n      }, 1000);\n    }\n  }, [swapCallback, swapLoading, setSwapLoading, trade, subAccountTokenBalance, swapTokenUnusedBalance]);\n\n  const maxInputAmount = useMaxAmountSpend({\n    currencyAmount: currencyBalances[SWAP_FIELD.INPUT],\n    poolId: tradePoolId,\n  });\n\n  const handleMaxInput = useCallback(() => {\n    if (maxInputAmount) {\n      onUserInput(SWAP_FIELD.INPUT, maxAmountFormat(maxInputAmount.toExact(), maxInputAmount.currency.decimals));\n    }\n  }, [maxInputAmount, onUserInput]);\n\n  // const fiatValueInput = useUSDValue(parsedAmounts[SWAP_FIELD.INPUT]);\n  // const fiatValueOutput = useUSDValue(parsedAmounts[SWAP_FIELD.OUTPUT]);\n  // const priceImpact = computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput);\n  const priceImpact = undefined;\n\n  const priceImpactSeverity = useMemo(() => {\n    const executionPriceImpact = trade?.priceImpact;\n\n    return warningSeverity(\n      executionPriceImpact && !!priceImpact\n        ? executionPriceImpact.greaterThan(priceImpact)\n          ? executionPriceImpact\n          : priceImpact\n        : executionPriceImpact ?? priceImpact,\n    );\n  }, [priceImpact, trade]);\n\n  const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode;\n  // const priceImpactTooHigh = priceImpactSeverity > 3;\n\n  useEffect(() => {\n    return () => {\n      handleClearSwapState();\n    };\n  }, []);\n\n  const inputCurrencyInterfacePrice = useUSDPrice(inputCurrency);\n  const outputCurrencyInterfacePrice = useUSDPrice(outputCurrency);\n\n  return (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: ui === \"pro\" ? \"8px 0\" : \"22px 0\" }}>\n      <SwapInputWrapper\n        onMaxInput={handleMaxInput}\n        onInput={handleInput}\n        onTokenAChange={handleTokenAChange}\n        onTokenBChange={handleTokenBChange}\n        tokenAPrice={inputCurrencyInterfacePrice}\n        tokenBPrice={outputCurrencyInterfacePrice}\n        inputCurrency={inputCurrency}\n        outputCurrency={outputCurrency}\n        inputCurrencyState={inputCurrencyState}\n        outputCurrencyState={outputCurrencyState}\n        currencyBalances={currencyBalances}\n        parsedAmounts={parsedAmounts}\n        tradePoolId={tradePoolId}\n        ui={ui}\n      />\n\n      {isLoadingRoute || (!isLoadingRoute && !!trade) ? (\n        <MainCard\n          border=\"level4\"\n          level={ui === \"pro\" ? 1 : 3}\n          padding={ui === \"pro\" ? \"10px\" : \"16px\"}\n          borderRadius={ui === \"pro\" ? \"12px\" : undefined}\n        >\n          <Box sx={{ display: \"grid\", gap: \"20px 0\", gridTemplateColumns: \"1fr\" }}>\n            {isLoadingRoute ? (\n              <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\n                <CircularProgress size={14} color=\"inherit\" />\n                <Typography sx={{ margin: \"0 0 0 4px\" }}>Fetching price...</Typography>\n              </Grid>\n            ) : trade ? (\n              <TradePrice\n                poolId={trade.swaps[0].route.pools[0].id}\n                price={trade.executionPrice}\n                token0={inputCurrency}\n                token1={outputCurrency}\n                token0PriceUSDValue={toSignificant(inputCurrencyInterfacePrice ?? 0, 18)}\n                token1PriceUSDValue={toSignificant(outputCurrencyInterfacePrice ?? 0, 18)}\n                fontSize={ui === \"pro\" ? \"12px\" : undefined}\n              />\n            ) : null}\n          </Box>\n        </MainCard>\n      ) : null}\n\n      <Button\n        fullWidth\n        variant=\"contained\"\n        size=\"large\"\n        onClick={handleSwap}\n        disabled={!isValid || priceImpactTooHigh || isPoolNotChecked}\n      >\n        {swapInputError ||\n          (isLoadingRoute ? (\n            <Trans>Swap</Trans>\n          ) : isNoRouteFound ? (\n            <Trans>Insufficient liquidity for this trade.</Trans>\n          ) : isPoolNotChecked ? (\n            <Trans>Waiting for verifying the pool...</Trans>\n          ) : priceImpactTooHigh ? (\n            <Trans>High Price Impact</Trans>\n          ) : priceImpactSeverity > 2 ? (\n            <Trans>Swap Anyway</Trans>\n          ) : (\n            <Trans>Swap</Trans>\n          ))}\n      </Button>\n\n      {ui === \"pro\" ? <ReclaimLink fontSize=\"12px\" /> : null}\n\n      {confirmModalShow && trade && (\n        <Identity onSubmit={handleSwapConfirm}>\n          {({ submit }: CallbackProps) => (\n            <SwapConfirm\n              trade={trade}\n              open={confirmModalShow}\n              onClose={() => setConfirmModalShow(false)}\n              onConfirm={submit}\n              slippageTolerance={userSlippageTolerance}\n              loading={swapLoading}\n            />\n          )}\n        </Identity>\n      )}\n    </Box>\n  );\n}\n","import { Percent } from \"@w2e/swap-sdk\";\nimport { JSBI } from \"utils/index\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nexport const NetworkContextName = \"NETWORK\";\n\n// 30 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 30;\nexport const L2_DEADLINE_FROM_NOW = 60 * 5;\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0);\n\n// one basis JSBI.BigInt\nconst BIPS_BASE = JSBI.BigInt(10000);\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), BIPS_BASE);\n\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), BIPS_BASE);\n\nexport const ZERO_PERCENT = new Percent(\"0\");\nexport const ONE_HUNDRED_PERCENT = new Percent(\"1\");\n\nexport const MaxUint128 = JSBI.subtract(JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(128)), JSBI.BigInt(1));\n","import { useCallback } from \"react\";\nimport { isPrincipal, isValidPrincipal } from \"@w2e/utils\";\nimport { useLatestDataCall } from \"../useCallData\";\nimport { tokenAdapter } from \"@w2e/token-adapter\";\nimport { Principal } from \"@dfinity/principal\";\nimport BigNumber from \"bignumber.js\";\n\nexport interface GetTokenBalanceArgs {\n  canisterId: string;\n  address: string | Principal;\n  sub?: Uint8Array;\n}\n\nexport async function getTokenBalance({ canisterId, address, sub }: GetTokenBalanceArgs) {\n  const result = await tokenAdapter.balance({\n    canisterId,\n    params: {\n      user: isPrincipal(address)\n        ? { principal: address }\n        : isValidPrincipal(address)\n        ? {\n            principal: Principal.fromText(address),\n          }\n        : { address: address },\n      token: \"\",\n      subaccount: sub ? [...sub] : undefined,\n    },\n  });\n\n  return result.data;\n}\n\nexport interface UserTokenBalanceArgs {\n  canisterId: string | undefined;\n  address: string | Principal | undefined;\n  sub?: Uint8Array;\n  reload?: boolean | number;\n}\n\nexport function useTokenBalance({ canisterId, address, sub, reload }: UserTokenBalanceArgs) {\n  return useLatestDataCall(\n    useCallback(async () => {\n      if (!address || !canisterId) return undefined;\n      const balance = await getTokenBalance({ canisterId, sub, address });\n      return balance === undefined ? undefined : new BigNumber(balance.toString());\n    }, [address, canisterId, sub]),\n    reload,\n  );\n}\n","/** Is null or undefined */\nexport const isNullArgs = <T>(\n  argument: T | undefined | null\n): argument is undefined | null => argument === null || argument === undefined;\n\n/** Not null and not undefined */\nexport const nonNullArgs = <T>(argument: T | undefined | null): argument is T =>\n  !isNullArgs(argument);\n"],"names":["SwitchIcon","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","x","y","rx","stroke","fillRule","clipRule","d","useStyles","_ref","borderColor","size","makeStyles","avatar","border","concat","CurrencyAvatar","_ref2","currency","bgColor","className","classes","Avatar","sx","bgcolor","src","logo","useStyle","bgGray","theme","selectButton","position","padding","color","cursor","backgroundColor","isDarkTheme","palette","background","level2","colors","lightGray200","borderRadius","radius","selectButtonActive","lineHeight","themeOption","defaultGradient","arrow","CurrencySelectorButton","onClick","loading","disabled","handleButtonClick","useCallback","Grid","container","alignItems","item","mr","xs","gap","TokenImage","tokenId","address","Typography","component","symbol","KeyboardArrowDown","fontSize","Loading","circularSize","Box","Trans","id","CurrencySelector","currencyId","onChange","disabledCurrency","activeCurrencies","version","selectorShow","setSelectorShow","useState","token","useToken","disabledCurrencyIds","useMemo","length","map","activeCurrencyIds","_Fragment","CurrencySelectButton","Selector","open","onClose","_g","_defs","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","SvgQuestion","svgRef","title","titleId","props","ref","clipPath","ForwardRef","ReclaimLink","history","useHistory","display","push","Tooltip","PopperProps","QuestionIcon","strokeColor","SvgIcon","strokeWidth","strokeLinecap","strokeLinejoin","toggleBox","toggleItem","secondaryMain","CHECKED","Toggle","isActive","checked","unchecked","onToggleChange","justifyContent","ON","OFF","card","gray200","boxShadow","tolerance","marginTop","gridTemplateColumns","activeTypography","content","bottom","left","settingBox","right","top","slippageButton","marginRight","level4","settingInput","memo","type","expertMode","toggleExpertMode","useExpertModeManager","slippageTolerance","setSlippageTolerance","useSlippageManager","multipleApprove","updateMultipleApprove","useMultipleApproveManager","currentSlippageTolerance","BigNumber","div","toFixed","handleSlippageToleranceInput","event","value","multipliedBy","toNumber","handleSlippageToleranceBlur","defaultSlippageTolerance","getDefaultSlippageTolerance","isGreaterThan","MAX_SLIPPAGE_TOLERANCE","Card","p","variant","mt","SwapTooltip","tips","NumberTextField","numericProps","decimalScale","allowNegative","maxLength","InputProps","endAdornment","InputAdornment","onBlur","alignContent","SLIPPAGE_TOLERANCE","slippage","index","handleToggleSlippage","Number","TextButton","to","SwapSettingIcon","useTheme","settingShow","setSettingShow","ClickAwayListener","onClickAway","hideSettingBox","SettingIcon","handleToggleSettingShow","undefined","zIndex","UserSetting","input","textAlign","fontWeight","switchIcon","SwapInput","_currency$decimals","onUserInput","decimal","decimals","SAFE_DECIMALS_LENGTH","fullWidth","placeholder","thousandSeparator","MAX_SWAP_INPUT_LENGTH","e","useInitialSwapSteps","updateStep","useStepContentManager","closeAllSteps","useCloseAllSteps","handleReclaim","trade","retry","amount0","inputAmount","toSignificant","groupSeparator","amount1","outputAmount","inputCurrency","outputCurrency","symbol0","symbol1","address0","wrapped","logo0","logo1","outAmount","getSwapOutAmount","amount0Value","margin","amount1Value","outAmountValue","parseTokenAmount","toFormat","withdrawAmountLessThanZero","toString","minus","transFee","isLessThan","isUseTransfer","step","label","i18n","_","values","errorActions","errorMessage","skipError","getSwapStep","String","useSwapCallback","createSwapCalls","principal","useAccountPrincipal","allowedSlippage","slippageToPercent","approve","useSwapApprove","deposit","useSwapDeposit","transfer","useSwapTransfer","withdraw","useSwapWithdraw","updateSwapOutAmount","useUpdateSwapOutAmount","openErrorTip","useErrorTip","initialAndUpdateSwapStep","stepKey","_stepKey","swapInTokenUnusedBalance","subAccountTokenBalance","openExternalTip","calls","trades","Array","isArray","route","swaps","actualSwapAmount","maximumAmountIn","quotient","amountOut","minimumAmountOut","pools","tokenIn","tokenPath","tokenOut","poolId","userInputAmount","plus","async","BigInt","_ref3","message","tipKey","identity","getActorIdentity","status","data","swap","zeroForOne","amountIn","amountOutMinimum","ResultStatus","ERROR","getLocaleMessage","OK","swapOutAmount","_ref4","useSwapCalls","createSwapCall","useStepCalls","initialSteps","_ref5","newStepKey","reset","ONE_HUNDRED_PERCENT","Percent","JSBI","computeRealizedLPFeePercent","percent","subtract","reduce","currentFee","pool","multiply","Fraction","fee","numerator","denominator","IMPACT_TIERS","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","_path","_path2","LinkIcon","SvgSyncAlt","TradePriceNoInfo","_price$quoteCurrency","_price$baseCurrency","_price$baseCurrency2","_price$quoteCurrency2","price","token0","token0PriceUSDValue","token1","token1PriceUSDValue","matchDownSM","useMediaQuery","breakpoints","down","showInverted","setShowInverted","formattedPrice","_price$invert","invert","error","quoteCurrency","baseCurrency","labelInverted","flipPrice","usdValue","equals","text","formatDollarAmount","SyncAltIcon","style","marginLeft","TradePrice","_price$quoteCurrency3","_price$baseCurrency3","_price$baseCurrency4","_price$quoteCurrency4","v2","_price$invert2","link","INFO_URL","useMaxAmountSpend","currencyAmount","useAccountPrincipalString","allowanceCanisterId","result","allowance","useAllowance","canisterId","owner","spender","CurrencyAmount","fromRawAmount","SwapInputCurrency","onMax","currencyState","onTokenChange","currencyPrice","formatAmount","onInput","currencyBalance","parsedAmount","tradePoolId","usdChange","maxInputAmount","showMaxButton","Boolean","greaterThan","equalTo","currencyBalanceUSDValue","amount","USDChangeColor","level3","level1","UseCurrencyState","LOADING","flex","0","formatCurrencyAmount","SwapInputWrapper","_parsedAmounts$depend","_parsedAmounts$depend2","onMaxInput","onTokenAChange","onTokenBChange","tokenAPrice","tokenBPrice","parsedAmounts","currencyBalances","inputCurrencyState","outputCurrencyState","ui","independentField","typedValue","useSwapState","onSwitchTokens","useSwapHandlers","dependentField","SWAP_FIELD","INPUT","OUTPUT","formattedAmounts","inputBalanceUSDValue","outputBalanceUSDValue","USDChange","dividedBy","transform","overflow","FormattedPriceImpact","priceImpact","transferBox","arrowDown","SwapCurrency","align","DetailItem","tooltip","isElement","_trade$inputAmount","_trade$outputAmount","onConfirm","realizedLPFee","feeAmount","numberToString","realizedLpFeePercent","inputFeeUSDValue","inputTokenFee","outputFeeUSDValue","outputTokenFee","inputToken","outputToken","inputTokenUSDPrice","useUSDPriceById","outputTokenUSDPrice","useSwapFeeTip","SwapModal","ArrowRightAlt","flexDirection","executionPrice","Button","startIcon","CircularProgress","SwapWrapper","onInputTokenChange","onOutputTokenChange","onTradePoolIdChange","confirmModalShow","setConfirmModalShow","refreshBalance","setRefreshBalance","isExpertMode","useLoadDefaultParams","currencyA","currencyB","handleClearSwapState","useCleanSwapState","inputError","swapInputError","state","swapState","userSlippageTolerance","useSwapInfo","useEffect","handleTokenAChange","prePath","ICP","handleTokenBChange","handleInput","isLoadingRoute","TradeState","isNoRouteFound","NO_ROUTE_FOUND","isValid","isPoolNotChecked","NOT_CHECK","swapCallback","swapLoading","setSwapLoading","openSuccessTip","useSuccessTip","openLoadingTip","closeLoadingTip","useLoadingTip","inputTokenAddress","tradePool","sub","SubAccount","fromPrincipal","toUint8Array","useTokenBalance","unusedBalance","useUserUnusedBalance","swapTokenUnusedBalance","balance0","balance1","handleSwapConfirm","isNullArgs","ReclaimTips","loadingKey","1","extraContent","StepViewButton","setTimeout","handleMaxInput","maxAmountFormat","toExact","priceImpactSeverity","executionPriceImpact","impact","impactLevel","lessThan","warningSeverity","priceImpactTooHigh","inputCurrencyInterfacePrice","useUSDPrice","outputCurrencyInterfacePrice","MainCard","level","handleSwap","Identity","onSubmit","submit","SwapConfirm","BIPS_BASE","MaxUint128","exponentiate","P","Promise","resolve","reject","fulfilled","generator","next","rejected","throw","done","then","thisArg","_arguments","getTokenBalance","_a","tokenAdapter","balance","isPrincipal","Principal","fromText","subaccount","reload","__awaiter","argument","nonNullArgs"],"sourceRoot":""}