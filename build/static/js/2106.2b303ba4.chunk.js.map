{"version":3,"file":"static/js/2106.2b303ba4.chunk.js","mappings":"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","sources":["components/CurrencyAvatar/index.tsx","components/swap/LiquidityPoolIntro.tsx","components/swap/PoolCard.tsx","components/swap/SwapUIWrapper.tsx","components/swap/PositionContext.ts","components/swap/PositionItem.tsx","views/swap-liquidity-v3/liquidity/Positions.tsx","views/swap-liquidity-v3/liquidity/PoolList.tsx","views/swap-liquidity-v3/liquidity/index.tsx","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.17_@emotion+react@11.11.4_@types+react@17.0.2_re_lyqavj3g7ctinxmr5j3myp6gz4/node_modules/@mui/icons-material/esm/KeyboardArrowDown.js","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.17_@emotion+react@11.11.4_@types+react@17.0.2_re_lyqavj3g7ctinxmr5j3myp6gz4/node_modules/@mui/icons-material/esm/KeyboardArrowUp.js","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.17_@emotion+react@11.11.4_@types+react@17.0.2_re_lyqavj3g7ctinxmr5j3myp6gz4/node_modules/@mui/icons-material/esm/SyncAlt.js"],"sourcesContent":["import { Avatar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nconst useStyles = ({ borderColor, size }: { borderColor: string; size?: string | undefined }) =>\n  makeStyles(() => {\n    return {\n      avatar: {\n        width: size || \"24px\",\n        height: size || \"24px\",\n        border: `1px solid ${borderColor}`,\n      },\n    };\n  });\n\nexport interface CurrencyAvatarProps {\n  currency: Token | undefined | null;\n  borderColor?: string;\n  bgColor?: string;\n  className?: string;\n  size?: string;\n}\n\nexport default function CurrencyAvatar({\n  currency,\n  borderColor = \"#ffffff\",\n  bgColor = \"#97a4ef\",\n  className,\n  size,\n}: CurrencyAvatarProps) {\n  const classes = useStyles({ borderColor, size })();\n\n  return (\n    <Avatar className={`${classes.avatar} ${className || \"\"}`} sx={{ bgcolor: bgColor }} src={currency?.logo}>\n      &nbsp;\n    </Avatar>\n  );\n}\n","import { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Trans } from \"@lingui/macro\";\nimport { MainCard } from \"components/index\";\n\nconst useStyle = makeStyles(() => {\n  return {\n    button: {\n      width: \"230px\",\n      height: \"48px\",\n    },\n  };\n});\n\nexport default function LiquidityPoolIntro({ version }: { version?: \"v2\" | \"v3\" }) {\n  const classes = useStyle();\n  const history = useHistory();\n\n  const loadAddLiquidity = useCallback(() => {\n    if (version === \"v2\") {\n      history.push(\"/swap/v2/liquidity/add\");\n    } else {\n      history.push(\"/swap/liquidity/add\");\n    }\n  }, [history]);\n\n  return (\n    <MainCard level={1} sx={{ height: \"244px\" }} className=\"lightGray200\">\n      <Typography variant=\"h3\" align=\"center\" color=\"text.primary\">\n        <Trans>Liquidity Pool</Trans>\n      </Typography>\n      <Box mt={2}>\n        <Typography fontSize={16} align=\"center\">\n          <Trans>\n            80% of the trading fees are rewarded to the liquidity providers, and the remaining 20% of the trading fees\n            are put into the ICS Repurchase-and-Burn Pool.\n          </Trans>\n        </Typography>\n      </Box>\n      <Grid container mt={4} justifyContent=\"center\">\n        <Grid item>\n          <Button className={classes.button} variant=\"contained\" onClick={loadAddLiquidity}>\n            <Trans>Add Liquidity</Trans>\n          </Button>\n        </Grid>\n      </Grid>\n    </MainCard>\n  );\n}\n","import { useCallback } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport CurrenciesAvatar from \"components/CurrenciesAvatar\";\nimport { useToken } from \"hooks/useCurrency\";\nimport { feeAmountToPercentage } from \"utils/swap/index\";\nimport { useHistory } from \"react-router-dom\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { formatDollarAmount } from \"@w2e/utils\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    topBox: {\n      clear: \"both\",\n      overflow: \"hidden\",\n    },\n    floatLeft: {\n      float: \"left\",\n    },\n    listItem: {\n      height: \"140px\",\n      padding: \"18px\",\n      borderRadius: `${theme.radius}px`,\n      cursor: \"pointer\",\n    },\n    poolName: {\n      margin: \"0 8px\",\n      \"& .MuiTypography-root\": {\n        color: \"#fff\",\n        fontWeight: 700,\n      },\n    },\n    feeAmount: {\n      padding: \"2px 4px\",\n      borderRadius: \"4px\",\n      \"& .MuiTypography-root\": {\n        color: \"#fff\",\n      },\n    },\n    poolData: {\n      marginTop: \"28px\",\n    },\n  };\n});\n\nexport interface PoolCardProps {\n  token0: string;\n  token1: string;\n  fee: bigint;\n  tvlUSD: string | number;\n  totalVolumeUSD: string | number;\n  version?: \"v2\" | \"v3\";\n  token0Symbol?: string;\n  token1Symbol?: string;\n}\n\nexport default function PoolCard({\n  token0,\n  token1,\n  fee,\n  totalVolumeUSD,\n  tvlUSD,\n  token0Symbol,\n  token1Symbol,\n  version,\n}: PoolCardProps) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [, currency0] = useToken(token0);\n  const [, currency1] = useToken(token1);\n\n  const handlePoolClick = useCallback(() => {\n    if (version === \"v2\") {\n      history.push(`/swap/v2/liquidity/add/${token0}/${token1}/${Number(fee)}`);\n    } else {\n      history.push(`/swap/liquidity/add/${token0}/${token1}/${Number(fee)}`);\n    }\n  }, [history]);\n\n  return (\n    <Box className={`${classes.listItem} list-item`} onClick={handlePoolClick}>\n      <Box className=\"list-item-color-box\" />\n      <Grid container alignItems=\"center\" className={`${classes.topBox}`}>\n        <CurrenciesAvatar\n          className={classes.floatLeft}\n          currencyA={currency0}\n          currencyB={currency1}\n          borderColor=\"transparent\"\n          bgColor=\"transparent\"\n        />\n        <Box className={`${classes.poolName} ${classes.floatLeft}`}>\n          <Typography>{`${token0Symbol ?? currency0?.symbol ?? \"--\"}/${token1Symbol ?? currency1?.symbol ?? \"--\"\n            }`}</Typography>\n        </Box>\n        <Box className={`${classes.feeAmount} feeAmount ${classes.floatLeft}`}>\n          <Typography>{feeAmountToPercentage(Number(fee))}</Typography>\n        </Box>\n      </Grid>\n      <Grid container className={classes.poolData}>\n        <Grid container flexDirection=\"column\" item xs={6}>\n          <Grid item container justifyContent=\"flex-start\">\n            <Typography className=\"title\">\n              <Trans>TVL</Trans>\n            </Typography>\n          </Grid>\n          <Grid item mt={1} container justifyContent=\"flex-start\">\n            <Typography className=\"value\" color=\"#ffffff\" fontWeight={700} fontSize={16}>\n              {formatDollarAmount(tvlUSD)}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container item xs={6} flexDirection=\"column\" justifyContent=\"flex-end\">\n          <Grid item container justifyContent=\"flex-end\">\n            <Typography className=\"title\">\n              <Trans>Total Volume</Trans>\n            </Typography>\n          </Grid>\n          <Grid mt={1} item container justifyContent=\"flex-end\">\n            <Typography className=\"value\" color=\"#ffffff\" fontWeight={700} fontSize={16}>\n              {formatDollarAmount(totalVolumeUSD)}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { Box, Typography, Grid } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport { Wrapper, TabPanel } from \"components/index\";\nimport React from \"react\";\nimport { INFO_URL } from \"constants/index\";\n\nfunction LinkIcon() {\n  return (\n    <svg width=\"6\" height=\"7\" viewBox=\"0 0 6 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.09619 1.5H0.303301V0.5H5.3033H5.8033V1V6H4.8033V2.20711L0.707107 6.3033L0 5.59619L4.09619 1.5Z\"\n        fill=\"#4F5A84\"\n      />\n    </svg>\n  );\n}\n\ntype Button = {\n  id: number | string;\n  value: React.ReactNode;\n  path?: string;\n  key: string;\n};\n\nfunction SwapWrapper({ children, buttons }: { children: React.ReactNode; buttons: Button[] }) {\n  return (\n    <Wrapper>\n      <TabPanel tabs={buttons} />\n      <Box mt={4}>{children}</Box>\n    </Wrapper>\n  );\n}\n\nexport function SwapV2Wrapper({ children }: { children: React.ReactNode }) {\n  const buttons = [\n    { id: 3, value: t`Wrap`, path: \"/swap/v2/wrap\", key: \"/wrap\" },\n    {\n      id: 2,\n      key: \"/swap/v2/liquidity\",\n      value: t`Liquidity V2`,\n      path: \"/swap/v2/liquidity\",\n    },\n    {\n      id: 4,\n      key: \"swap-v3\",\n      value: (\n        <Grid container>\n          <Typography\n            sx={{\n              fontWeight: 600,\n              \"@media (max-width: 640px)\": {\n                fontSize: \"12px\",\n              },\n            }}\n          >\n            Exchange\n          </Typography>\n          <Box sx={{ margin: \"0 0 0 3px\", position: \"relative\", top: \"-4px\" }}>\n            <LinkIcon />\n          </Box>\n        </Grid>\n      ),\n      path: \"/swap\",\n    },\n  ];\n\n  return <SwapWrapper buttons={buttons}>{children}</SwapWrapper>;\n}\n\nexport default function _SwapWrapper({ children }: { children: React.ReactNode }) {\n  const buttons = [\n    { id: 1, value: t`Swap V3`, path: \"/swap\", key: \"/swap\" },\n    {\n      id: 2,\n      key: \"/swap/liquidity\",\n      value: t`Liquidity`,\n      path: \"/swap/liquidity\",\n    },\n    {\n      id: 3,\n      key: \"info\",\n      value: (\n        <Grid container>\n          <Typography>Info</Typography>\n          <Box sx={{ margin: \"0 0 0 3px\", position: \"relative\", top: \"-4px\" }}>\n            <LinkIcon />\n          </Box>\n        </Grid>\n      ),\n      link: INFO_URL,\n    },\n  ];\n\n  return <SwapWrapper buttons={buttons}>{children}</SwapWrapper>;\n}\n","import { createContext } from \"react\";\nimport BigNumber from \"bignumber.js\";\n\nexport interface PositionContextProps {\n  allPositionsUSDValue: BigNumber | undefined;\n  setAllPositionsUSDValue: (id: string, totalUSDValue: BigNumber) => void;\n  counter: number;\n  updateCounter: () => void;\n}\n\nexport default createContext<PositionContextProps>({} as PositionContextProps);\n","import React, { useState, useCallback, useMemo, useEffect, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Typography, Grid, Chip, Button, useMediaQuery, Box, Popper } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport CurrenciesAvatar from \"components/CurrenciesAvatar\";\nimport { KeyboardArrowDown, KeyboardArrowUp, SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\nimport { Bound } from \"constants/swap\";\nimport { DEFAULT_PERCENT_SYMBOL, CurrencyAmountFormatDecimals } from \"constants/index\";\nimport { feeAmountToPercentage } from \"utils/swap/index\";\nimport CollectFeesModal from \"components/swap/CollectFeesModal\";\nimport { usePositionFees } from \"hooks/swap/usePositionFees\";\nimport { numberToString, BigNumber, formatDollarAmount } from \"@w2e/utils\";\nimport { CurrencyAmount, Position, getPriceOrderingFromPositionForUI, useInverter } from \"@w2e/swap-sdk\";\nimport { isDarkTheme, toFormat } from \"utils\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Loading } from \"components/index\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\nimport PositionContext from \"components/swap/PositionContext\";\nimport { isElement } from \"react-is\";\nimport { isMobile } from \"react-device-detect\";\nimport { ClickAwayListener } from \"@mui/base\";\n\nimport PositionStatus from \"./PositionRangeState\";\nimport TransferPosition from \"./TransferPosition\";\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  positionContainer: {\n    position: \"relative\",\n    backgroundColor: theme.palette.background.level3,\n    borderRadius: `${theme.radius}px`,\n    border: theme.palette.border.gray200,\n    padding: \"24px 20px\",\n    marginTop: \"16px\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n    \"&:first-child\": {\n      marginTop: \"0\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"16px 10px\",\n    },\n  },\n  detailContainer: {\n    backgroundColor: theme.palette.background.level3,\n    borderRadius: `${theme.radius}px`,\n    border: theme.palette.border.gray200,\n    padding: \"20px\",\n  },\n}));\n\nexport interface PositionDetailItemProps {\n  label: React.ReactChild;\n  value: React.ReactChild | undefined;\n  convert?: boolean;\n  onConvertClick?: () => void;\n}\n\nexport function PositionDetailItem({ label, value, convert, onConvertClick }: PositionDetailItemProps) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Grid\n      container\n      sx={{\n        height: \"48px\",\n      }}\n      alignItems=\"center\"\n    >\n      <Grid item xs={4}>\n        <Typography {...(matchDownSM ? { fontSize: \"12px\" } : {})}>{label}</Typography>\n      </Grid>\n      <Grid item xs={8} container justifyContent=\"flex-end\">\n        {isElement(value) ? (\n          value\n        ) : (\n          <Typography {...(matchDownSM ? { fontSize: \"12px\" } : {})} color=\"textPrimary\">\n            {value}\n          </Typography>\n        )}\n\n        {convert && (\n          <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport interface PositionDetailsProps {\n  positionId: bigint;\n  invalid?: boolean;\n  showButtons?: boolean;\n  position: Position | undefined;\n  manuallyInverted: boolean;\n  setManuallyInverted: (manuallyInverted: boolean) => void;\n  show: boolean | undefined;\n  token0USDPrice: number | undefined;\n  token1USDPrice: number | undefined;\n}\n\nexport function PositionDetails({\n  position,\n  showButtons,\n  positionId,\n  invalid = false,\n  manuallyInverted,\n  setManuallyInverted,\n  show,\n  token0USDPrice,\n  token1USDPrice,\n}: PositionDetailsProps) {\n  const classes = useStyle();\n  const history = useHistory();\n  const moreRef = useRef(null);\n  const theme = useTheme() as Theme;\n\n  const [collectFeesShow, setCollectFeesShow] = useState(false);\n  const [reloadPositionFee, setReloadPositionFee] = useState(false);\n  const [transferPopperShow, setTransferPopperShow] = useState(false);\n  const [transferShow, setTransferShow] = useState(false);\n\n  const { updateCounter } = useContext(PositionContext);\n\n  const noLiquidity = position?.liquidity.toString() === \"0\";\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const handleLoadRemoveLiquidity = useCallback(() => {\n    if (invalid) {\n      history.push(`/swap/liquidity/decrease/${String(positionId)}?invalid=true`);\n      return;\n    }\n    history.push(`/swap/liquidity/decrease/${String(positionId)}/${position?.pool.id}`);\n  }, [history, invalid, positionId]);\n\n  const handleLoadIncreaseLiquidity = useCallback(() => {\n    history.push(`/swap/liquidity/increase/${String(positionId)}/${position?.pool.id}`);\n  }, [token0, token1]);\n\n  const handleCollectFee = useCallback(() => {\n    setCollectFeesShow(true);\n  }, [setCollectFeesShow]);\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n\n  // handle manual inversion\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition?.priceLower,\n    priceUpper: pricesFromPosition?.priceUpper,\n    quote: pricesFromPosition?.quote,\n    base: pricesFromPosition?.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const pairName = useMemo(() => {\n    return `${currencyQuote?.symbol} per ${currencyBase?.symbol}`;\n  }, [currencyQuote, currencyBase]);\n\n  const { amount0: feeAmount0, amount1: feeAmount1 } = usePositionFees(\n    position?.pool.id,\n    positionId,\n    reloadPositionFee,\n  );\n\n  const currencyFeeAmount0 = useMemo(() => {\n    if (!token0 || feeAmount0 === undefined) return undefined;\n    return CurrencyAmount.fromRawAmount(token0, numberToString(new BigNumber(feeAmount0.toString())));\n  }, [feeAmount0, token0]);\n\n  const currencyFeeAmount1 = useMemo(() => {\n    if (!token1 || feeAmount1 === undefined) return undefined;\n    return CurrencyAmount.fromRawAmount(token1, numberToString(new BigNumber(feeAmount1.toString())));\n  }, [feeAmount1, token1]);\n\n  const handleClaimedSuccessfully = () => {\n    setReloadPositionFee(!reloadPositionFee);\n  };\n\n  const hasUnclaimedFees = useMemo(() => {\n    if (!feeAmount0 && !feeAmount1) return false;\n    return true;\n  }, [feeAmount0, feeAmount1]);\n\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleTransferSuccess = () => {\n    updateCounter();\n  };\n\n  return (\n    <>\n      <Grid mt={1} className={classes.detailContainer} sx={{ display: show ? \"block\" : \"none\" }}>\n        <PositionDetailItem label={t`Position ID`} value={positionId.toString()} />\n        <PositionDetailItem\n          label={t`${currencyQuote?.symbol} Amount`}\n          value={\n            inverted\n              ? toFormat(position?.amount0.toFixed(CurrencyAmountFormatDecimals(position?.amount0.currency.decimals)))\n              : toFormat(position?.amount1.toFixed(CurrencyAmountFormatDecimals(position?.amount1.currency.decimals)))\n          }\n        />\n        <PositionDetailItem\n          label={t`${currencyBase?.symbol} Amount`}\n          value={\n            inverted\n              ? toFormat(position?.amount1.toFixed(CurrencyAmountFormatDecimals(position?.amount1.currency.decimals)))\n              : toFormat(position?.amount0.toFixed(CurrencyAmountFormatDecimals(position?.amount0.currency.decimals)))\n          }\n        />\n        <PositionDetailItem\n          label={t`Current Price`}\n          value={\n            !!token1 && !!token0\n              ? inverted\n                ? pool?.priceOf(token1)\n                  ? `${toFormat(pool?.priceOf(token1).toSignificant(6))} ${pairName}`\n                  : \"--\"\n                : pool?.priceOf(token0)\n                  ? `${toFormat(pool?.priceOf(token0).toSignificant(6))} ${pairName}`\n                  : \"--\"\n              : \"--\"\n          }\n          convert\n          onConvertClick={() => setManuallyInverted(!manuallyInverted)}\n        />\n        <PositionDetailItem\n          label={t`Price Range`}\n          value={`${formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)} - ${formatTickPrice(\n            priceUpper,\n            tickAtLimit,\n            Bound.UPPER,\n          )} ${pairName}`}\n          convert\n          onConvertClick={() => setManuallyInverted(!manuallyInverted)}\n        />\n        <PositionDetailItem\n          label={t`Unclaimed fees`}\n          value={\n            <Box>\n              <Typography\n                color=\"text.primary\"\n                align=\"right\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                  },\n                }}\n              >\n                {currencyFeeAmount0 !== undefined || currencyFeeAmount1 !== undefined\n                  ? `${toFormat(\n                    new BigNumber(currencyFeeAmount0 ? currencyFeeAmount0.toExact() : 0).toFixed(8),\n                  )} ${token0?.symbol} and ${toFormat(\n                    new BigNumber(currencyFeeAmount1 ? currencyFeeAmount1.toExact() : 0).toFixed(8),\n                  )} ${token1?.symbol}`\n                  : \"--\"}\n              </Typography>\n              <Typography\n                mt=\"5px\"\n                align=\"right\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                  },\n                }}\n              >\n                {currencyFeeAmount0 !== undefined &&\n                  currencyFeeAmount1 !== undefined &&\n                  !!token0USDPrice &&\n                  !!token1USDPrice\n                  ? formatDollarAmount(\n                    new BigNumber(currencyFeeAmount0 ? currencyFeeAmount0.toExact() : 0)\n                      .multipliedBy(token0USDPrice)\n                      .plus(\n                        new BigNumber(currencyFeeAmount1 ? currencyFeeAmount1.toExact() : 0).multipliedBy(\n                          token1USDPrice,\n                        ),\n                      )\n                      .toString(),\n                  )\n                  : \"--\"}\n              </Typography>\n            </Box>\n          }\n        />\n        {showButtons && (\n          <Box\n            mt={3}\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: matchDownSM ? \"1fr\" : !hasUnclaimedFees ? \"1fr 1fr 40px\" : \"1fr 1fr 1fr 40px\",\n              gap: matchDownSM ? \"20px 0\" : \"0 20px\",\n            }}\n          >\n            {!noLiquidity ? (\n              <Button\n                fullWidth\n                variant=\"outlined\"\n                size={matchDownSM ? \"medium\" : \"medium\"}\n                onClick={handleLoadRemoveLiquidity}\n              >\n                <Trans>Remove Liquidity</Trans>\n              </Button>\n            ) : (\n              <Box />\n            )}\n            {hasUnclaimedFees ? (\n              <Button fullWidth variant=\"outlined\" size={matchDownSM ? \"medium\" : \"medium\"} onClick={handleCollectFee}>\n                <Trans>Claim fees</Trans>\n              </Button>\n            ) : null}\n            {!invalid ? (\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size={matchDownSM ? \"medium\" : \"medium\"}\n                onClick={handleLoadIncreaseLiquidity}\n              >\n                <Trans>Increase Liquidity</Trans>\n              </Button>\n            ) : (\n              <Box />\n            )}\n\n            {!isMobile ? (\n              <Box\n                ref={moreRef}\n                onMouseEnter={() => setTransferPopperShow(true)}\n                onMouseLeave={() => setTransferPopperShow(false)}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    gap: \"0 5px\",\n                    alignItems: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <Box sx={{ width: \"4px\", height: \"4px\", borderRadius: \"50%\", background: \"#4F5A84\" }} />\n                  <Box sx={{ width: \"4px\", height: \"4px\", borderRadius: \"50%\", background: \"#4F5A84\" }} />\n                  <Box sx={{ width: \"4px\", height: \"4px\", borderRadius: \"50%\", background: \"#4F5A84\" }} />\n                </Box>\n\n                <Popper\n                  open={transferPopperShow}\n                  anchorEl={moreRef?.current}\n                  placement=\"top\"\n                  popperOptions={{\n                    modifiers: [\n                      {\n                        name: \"offset\",\n                        options: {\n                          offset: [-30, 0],\n                        },\n                      },\n                    ],\n                  }}\n                >\n                  <ClickAwayListener onClickAway={() => setTransferPopperShow(false)}>\n                    <Box\n                      sx={{\n                        padding: \"16px\",\n                        borderRadius: \"12px\",\n                        background: theme.palette.background.level1,\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => {\n                        setTransferShow(true);\n                        setTransferPopperShow(false);\n                      }}\n                    >\n                      <Typography color=\"text.primary\">\n                        <Trans>Transfer position</Trans>\n                      </Typography>\n                    </Box>\n                  </ClickAwayListener>\n                </Popper>\n              </Box>\n            ) : null}\n          </Box>\n        )}\n      </Grid>\n\n      <CollectFeesModal\n        pool={pool}\n        positionId={positionId}\n        open={collectFeesShow}\n        currencyFeeAmount0={currencyFeeAmount0}\n        currencyFeeAmount1={currencyFeeAmount1}\n        onClose={() => {\n          setCollectFeesShow(false);\n        }}\n        onClaimedSuccessfully={handleClaimedSuccessfully}\n      />\n\n      {transferShow ? (\n        <TransferPosition\n          closed={closed}\n          open={transferShow}\n          position={position}\n          positionId={positionId}\n          onClose={() => setTransferShow(false)}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport interface PositionItemProps {\n  positionId: bigint;\n  invalid?: boolean;\n  showButtons?: boolean;\n  position: Position | undefined;\n  closed: boolean;\n}\n\nexport default function PositionItem({\n  position,\n  showButtons,\n  positionId,\n  invalid = false,\n  closed,\n}: PositionItemProps) {\n  const classes = useStyle();\n  const theme = useTheme() as Theme;\n\n  const matchDownMD = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [detailShow, setDetailShow] = useState<boolean | undefined>(undefined);\n\n  const handleToggleShow = useCallback(() => {\n    if (!position) return;\n    setDetailShow(!detailShow);\n  }, [detailShow, setDetailShow, position]);\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  // handle manual inversion\n  const { base } = useInverter({\n    priceLower: pricesFromPosition?.priceLower,\n    priceUpper: pricesFromPosition?.priceUpper,\n    quote: pricesFromPosition?.quote,\n    base: pricesFromPosition?.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const outOfRange =\n    pool && (tickUpper || tickUpper === 0) && (tickLower || tickLower === 0)\n      ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper\n      : false;\n\n  const token0USDPrice = useUSDPriceById(position?.pool.token0.address);\n  const token1USDPrice = useUSDPriceById(position?.pool.token1.address);\n\n  const totalUSDValue = useMemo(() => {\n    if (!position || !token0USDPrice || !token1USDPrice) return undefined;\n\n    const totalUSD = new BigNumber(token0USDPrice)\n      .multipliedBy(position.amount0.toExact())\n      .plus(new BigNumber(token1USDPrice).multipliedBy(position.amount1.toExact()));\n\n    return totalUSD.toString();\n  }, [position, token0USDPrice, token1USDPrice]);\n\n  const { setAllPositionsUSDValue } = useContext(PositionContext);\n\n  const positionKey = useMemo(() => {\n    if (!position) return undefined;\n    return `${position.pool.id}_${positionId.toString()}`;\n  }, [position, positionId]);\n\n  useEffect(() => {\n    if (!!totalUSDValue && !!positionKey) {\n      setAllPositionsUSDValue(positionKey, new BigNumber(totalUSDValue));\n    }\n  }, [totalUSDValue, positionKey]);\n\n  return (\n    <>\n      <Grid className={classes.positionContainer} container onClick={handleToggleShow}>\n        {!position && <Loading loading={!position} circularSize={28} />}\n\n        <Grid item xs>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CurrenciesAvatar\n                currencyA={currencyBase}\n                currencyB={currencyQuote}\n                borderColor={isDarkTheme(theme) ? \"rgba(189, 200, 240, 0.4)\" : \"rgba(255, 255, 255, 0.4)\"}\n                bgColor={isDarkTheme(theme) ? \"#273155\" : \"#DADADA\"}\n                size={matchDownMD ? \"20px\" : \"24px\"}\n              />\n            </Grid>\n            <Grid item mx={1}>\n              <Typography color=\"textPrimary\" fontSize={matchDownMD ? 14 : 16} fontWeight={500}>\n                {currencyBase?.symbol}/{currencyQuote?.symbol}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Chip\n                label={feeAmount ? feeAmountToPercentage(feeAmount) : DEFAULT_PERCENT_SYMBOL}\n                sx={{\n                  borderRadius: \"8px\",\n                  height: matchDownMD ? \"22px\" : \"24px\",\n                  \"& span\": { padding: matchDownMD ? \"2px\" : \"5px\", fontSize: matchDownMD ? \"12px\" : \"14px\" },\n                  backgroundColor: isDarkTheme(theme) ? \"#4F5A84\" : \"#EFEFFF\",\n                }}\n              />\n            </Grid>\n          </Grid>\n\n          {!closed ? (\n            <Grid container mt=\"10px\">\n              <Typography>\n                <Trans>Value:</Trans>&nbsp;\n              </Typography>\n              <Typography color=\"text.primary\">{totalUSDValue ? formatDollarAmount(totalUSDValue) : \"--\"}</Typography>\n            </Grid>\n          ) : null}\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <PositionStatus closed={closed} outOfRange={outOfRange} />\n            <Grid item ml={matchDownMD ? \"5px\" : \"10px\"}>\n              <Grid container alignItems=\"center\">\n                {detailShow ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {typeof detailShow !== \"boolean\" ? null : (\n        <PositionDetails\n          position={position}\n          positionId={positionId}\n          invalid={invalid}\n          showButtons={showButtons}\n          manuallyInverted={manuallyInverted}\n          setManuallyInverted={setManuallyInverted}\n          show={detailShow}\n          token0USDPrice={token0USDPrice}\n          token1USDPrice={token1USDPrice}\n        />\n      )}\n    </>\n  );\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { Typography, Box } from \"@mui/material\";\nimport PositionItemComponent from \"components/swap/PositionItem\";\nimport { usePosition } from \"hooks/swap/usePosition\";\nimport { Trans } from \"@lingui/macro\";\nimport { NoData, MainCard, LoadingRow, TextButton, FindPositionsModal } from \"components/index\";\nimport BigNumber from \"bignumber.js\";\nimport { useAccountPrincipalString } from \"store/auth/hooks\";\nimport PositionContext from \"components/swap/PositionContext\";\nimport { useUserAllPositions } from \"hooks/swap/useUserAllPositions\";\nimport { UserPosition } from \"types/swap\";\nimport { useInitialUserPositionPools } from \"store/hooks\";\nimport { formatDollarAmount } from \"@w2e/utils\";\n\nfunction hasLiquidity(position: UserPosition | undefined) {\n  return position?.liquidity?.toString() !== \"0\";\n}\n\ninterface PositionItemProps {\n  position: UserPosition;\n}\n\nfunction PositionItem({ position: positionDetail }: PositionItemProps) {\n  const { position } = usePosition({\n    poolId: positionDetail.id,\n    tickLower: positionDetail.tickLower,\n    tickUpper: positionDetail.tickUpper,\n    liquidity: positionDetail.liquidity,\n  });\n\n  const noLiquidity = !hasLiquidity(positionDetail);\n\n  return noLiquidity ? null : (\n    <PositionItemComponent\n      closed={noLiquidity}\n      position={position}\n      positionId={BigInt(positionDetail.index)}\n      showButtons\n    />\n  );\n}\n\nexport default function Positions() {\n  const principal = useAccountPrincipalString();\n\n  const [findPositionsOpen, setFindPositionsOpen] = useState(false);\n  const [allPositionsUSDKeyValue, setAllPositionsUSDValue] = useState<\n    { [id: string]: BigNumber | undefined } | undefined\n  >({});\n  const [counter, setCounter] = useState<number>(0);\n\n  const { result: positions, loading } = useUserAllPositions(counter);\n\n  const { loading: initialUserPositionPoolsLoading } = useInitialUserPositionPools();\n\n  const hasLiquidityPositions = useMemo(() => {\n    return positions.filter((position) => hasLiquidity(position)).length !== 0;\n  }, [positions]);\n\n  const handleAllPositionsUSDValue = (id: string, usdValue: BigNumber) => {\n    setAllPositionsUSDValue((prevState) => ({\n      ...prevState,\n      [id]: usdValue,\n    }));\n  };\n\n  // reset all positions usd value when account change\n  useEffect(() => {\n    setAllPositionsUSDValue(undefined);\n  }, [principal]);\n\n  const updateCounter = () => {\n    setCounter(counter + 1);\n  };\n\n  const allPositionsUSDValue = useMemo(() => {\n    if (!allPositionsUSDKeyValue) return undefined;\n\n    return Object.values(allPositionsUSDKeyValue).reduce((prev, curr) => {\n      return prev?.plus(curr ?? 0);\n    }, new BigNumber(0));\n  }, [allPositionsUSDKeyValue]);\n\n  return (\n    <PositionContext.Provider\n      value={{ allPositionsUSDValue, setAllPositionsUSDValue: handleAllPositionsUSDValue, counter, updateCounter }}\n    >\n      <MainCard level={1} className=\"lightGray200\">\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          <Trans>Your Positions</Trans>\n        </Typography>\n\n        <Box mt=\"5px\" mb=\"10px\">\n          <Typography component=\"span\">\n            <Trans>Total Value:</Trans>&nbsp;\n          </Typography>\n          <Typography component=\"span\" color=\"text.primary\">\n            {allPositionsUSDValue ? formatDollarAmount(allPositionsUSDValue.toString()) : \"--\"}\n          </Typography>\n        </Box>\n\n        <Box mt=\"5px\" mb=\"10px\">\n          <Typography component=\"span\">\n            <Trans>Don't see a pair you joined?</Trans>&nbsp;\n          </Typography>\n          <TextButton onClick={() => setFindPositionsOpen(true)}>\n            <Trans>Find other positions</Trans>\n          </TextButton>\n        </Box>\n\n        {(loading || initialUserPositionPoolsLoading) && !!principal ? (\n          <LoadingRow>\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n          </LoadingRow>\n        ) : (\n          <>\n            {!hasLiquidityPositions || positions?.length === 0 ? (\n              <Box mt={2}>\n                <NoData />\n              </Box>\n            ) : null}\n            <Box>\n              {positions.map((position) => (\n                <PositionItem key={`${position.id}_${position.index}`} position={position} />\n              ))}\n            </Box>\n          </>\n        )}\n      </MainCard>\n\n      <FindPositionsModal open={findPositionsOpen} onClose={() => setFindPositionsOpen(false)} />\n    </PositionContext.Provider>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { isDarkTheme } from \"utils/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport LoadingRow from \"components/Loading/LoadingRow\";\nimport PoolCard from \"components/swap/PoolCard\";\nimport { useAllPoolsTVL, useInfoAllPools } from \"@w2e/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const bgOpacity = isDarkTheme(theme) ? \"0.34\" : \"0.7\";\n\n  return {\n    wrapper: {\n      display: \"grid\",\n      gap: \"0 20px\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      overflow: \"hidden\",\n      width: \"100%\",\n      \"@media (max-width:1140px)\": {\n        gridGap: \"10px 10px\",\n        gridTemplateColumns: \"1fr 1fr\",\n      },\n      \"@media (max-width:640px)\": {\n        gridGap: \"10px 0\",\n        gridTemplateColumns: \"1fr\",\n      },\n      \"& .title\": {\n        color: \"rgba(255, 255, 255, 0.6)\",\n      },\n      \"& .value\": {\n        color: \"#ffffff\",\n      },\n    },\n    listWrapper: {\n      \"& .list-item\": {\n        position: \"relative\",\n        overflow: \"hidden\",\n        border: \"1px solid rgba(255, 255, 255, 0.04)\",\n      },\n      \"& .list-item-color-box\": {\n        position: \"absolute\",\n        left: \"10px\",\n        bottom: \"7px\",\n        width: \"98px\",\n        height: \"98px\",\n        filter: \"blur(34px)\",\n        zIndex: \"-1\",\n      },\n      \"&:first-child\": {\n        \"& .list-item\": {\n          background: `rgba(80, 95, 186, ${bgOpacity})`,\n        },\n        \"& .list-item-color-box\": {\n          background: \"#3644C2\",\n        },\n        \"& .feeAmount\": {\n          background: \"#4D5CA9\",\n        },\n      },\n      \"&:nth-of-type(2)\": {\n        \"& .list-item\": {\n          background: `rgba(101, 80, 186, ${bgOpacity})`,\n        },\n        \"& .list-item-color-box\": {\n          background: \"#5D0A9E\",\n        },\n        \"& .feeAmount\": {\n          background: \"#654DA9\",\n        },\n      },\n      \"&:nth-of-type(3)\": {\n        \"& .list-item\": {\n          background: `rgba(45, 148, 243, ${bgOpacity})`,\n        },\n        \"& .list-item-color-box\": {\n          background: \"#0A609E\",\n        },\n        \"& .feeAmount\": {\n          background: \"#2D94F3\",\n        },\n      },\n      \"&:nth-of-type(4)\": {\n        \"& .list-item\": {\n          background: `rgba(162, 88, 145, ${bgOpacity})`,\n        },\n        \"& .list-item-color-box\": {\n          background: \"#9E0A8F\",\n        },\n        \"& .feeAmount\": {\n          background: \"#833780\",\n        },\n      },\n    },\n  };\n});\n\nexport default function PoolList() {\n  const classes = useStyles();\n\n  const { result: pools, loading } = useInfoAllPools();\n  const { result: allPoolsTVL, loading: tvlLoading } = useAllPoolsTVL();\n\n  const poolList = useMemo(() => {\n    if (!pools || !allPoolsTVL) return [];\n\n    return pools\n      .sort((a, b) => {\n        if (a.totalVolumeUSD > b.totalVolumeUSD) {\n          return -1;\n        }\n        return 1;\n      })\n      .filter((pool) => pool.feeTier === BigInt(3000))\n      .slice(0, 4)\n      .map((pool) => {\n        const tvlUSD = allPoolsTVL.find((poolTVL) => poolTVL[0] === pool.pool);\n        return { ...pool, tvlUSD: tvlUSD ? tvlUSD[1] : 0 };\n      });\n  }, [pools, allPoolsTVL]);\n\n  return loading || tvlLoading ? (\n    <LoadingRow>\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </LoadingRow>\n  ) : (\n    <Box className={classes.wrapper}>\n      {poolList.map((pool, index) => (\n        <Box className={classes.listWrapper} key={index}>\n          <PoolCard\n            token0={pool.token0Id}\n            token1={pool.token1Id}\n            fee={pool.feeTier}\n            token0Symbol={pool.token0Symbol}\n            token1Symbol={pool.token1Symbol}\n            tvlUSD={pool.tvlUSD}\n            totalVolumeUSD={pool.totalVolumeUSD}\n          />\n        </Box>\n      ))}\n    </Box>\n  );\n}\n","import { useEffect } from \"react\";\nimport { Box } from \"@mui/material\";\nimport SwapWrapper from \"components/swap/SwapUIWrapper\";\nimport { useSwapPools } from \"@w2e/hooks\";\nimport { usePoolStandardManager } from \"store/global/hooks\";\nimport { useUpdateTokenStandard } from \"store/token/cache/hooks\";\nimport { TOKEN_STANDARD } from \"constants/tokens\";\nimport LiquidityPoolIntro from \"components/swap/LiquidityPoolIntro\";\nimport { TextButton, LoadingRow } from \"components/index\";\nimport { Trans } from \"@lingui/macro\";\nimport Positions from \"./Positions\";\nimport PoolList from \"./PoolList\";\n\nexport default function Liquidity() {\n  const [isInitialed, updatePoolStandardInitialed] = usePoolStandardManager();\n\n  const { result: pools } = useSwapPools();\n\n  const updateTokenStandard = useUpdateTokenStandard();\n\n  useEffect(() => {\n    const trigger = (updatedNum: number) => {\n      if (pools && updatedNum === pools.length) {\n        updatePoolStandardInitialed(true);\n      }\n    };\n\n    const call = () => {\n      if (pools && pools.length && !isInitialed) {\n        let updatedNum = 0;\n        for (let i = 0; i < pools.length; i++) {\n          const pool = pools[i];\n          updateTokenStandard({ canisterId: pool.token0.address, standard: pool.token0.standard as TOKEN_STANDARD });\n          updateTokenStandard({ canisterId: pool.token1.address, standard: pool.token1.standard as TOKEN_STANDARD });\n\n          updatedNum++;\n          trigger(updatedNum);\n        }\n      } else if (pools && pools.length === 0) {\n        updatePoolStandardInitialed(true);\n      }\n    };\n\n    call();\n  }, [pools]);\n\n  return (\n    <SwapWrapper>\n      {!isInitialed ? (\n        <LoadingRow>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRow>\n      ) : (\n        <>\n          <PoolList />\n          <Box\n            sx={{\n              margin: \"32px 0 0 0\",\n              display: \"flex\",\n              gap: \"0 16px\",\n              \"@media(max-width: 980px)\": {\n                flexDirection: \"column\",\n                gap: \"16px 0\",\n              },\n            }}\n          >\n            <Box sx={{ flex: 1 }}>\n              <LiquidityPoolIntro />\n\n              <Box sx={{ width: \"100%\", display: \"flex\", margin: \"5px 0 0 0\", justifyContent: \"flex-end\" }}>\n                <TextButton to=\"/swap/pcm/reclaim\">\n                  <Trans>Withdraw unused swap pool creation fees</Trans>\n                </TextButton>\n              </Box>\n            </Box>\n\n            <Box sx={{ flex: 1, height: \"100%\" }}>\n              <Positions />\n            </Box>\n          </Box>\n        </>\n      )}\n    </SwapWrapper>\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m18 12 4-4-4-4v3H3v2h15zM6 12l-4 4 4 4v-3h15v-2H6z\"\n}), 'SyncAlt');"],"names":["useStyles","_ref","borderColor","size","makeStyles","avatar","width","height","border","concat","CurrencyAvatar","_ref2","currency","bgColor","className","classes","_jsx","Avatar","sx","bgcolor","src","logo","children","useStyle","button","LiquidityPoolIntro","version","history","useHistory","loadAddLiquidity","useCallback","push","_jsxs","MainCard","level","Typography","variant","align","color","Trans","id","Box","mt","fontSize","Grid","container","justifyContent","item","Button","onClick","theme","topBox","clear","overflow","floatLeft","float","listItem","padding","borderRadius","radius","cursor","poolName","margin","fontWeight","feeAmount","poolData","marginTop","PoolCard","_ref3","token0","token1","fee","totalVolumeUSD","tvlUSD","token0Symbol","token1Symbol","currency0","useToken","currency1","handlePoolClick","Number","alignItems","CurrenciesAvatar","currencyA","currencyB","symbol","feeAmountToPercentage","flexDirection","xs","formatDollarAmount","LinkIcon","viewBox","fill","xmlns","fillRule","clipRule","d","SwapWrapper","buttons","Wrapper","TabPanel","tabs","SwapV2Wrapper","value","i18n","_","path","key","position","top","_SwapWrapper","link","INFO_URL","createContext","positionContainer","backgroundColor","palette","background","level3","gray200","breakpoints","down","detailContainer","PositionDetailItem","label","convert","onConvertClick","useTheme","matchDownSM","useMediaQuery","isElement","SyncAltIcon","marginLeft","PositionDetails","showButtons","positionId","invalid","manuallyInverted","setManuallyInverted","show","token0USDPrice","token1USDPrice","moreRef","useRef","collectFeesShow","setCollectFeesShow","useState","reloadPositionFee","setReloadPositionFee","transferPopperShow","setTransferPopperShow","transferShow","setTransferShow","updateCounter","useContext","PositionContext","noLiquidity","liquidity","toString","pool","tickLower","tickUpper","handleLoadRemoveLiquidity","String","handleLoadIncreaseLiquidity","handleCollectFee","_tickAtLimit","useIsTickAtLimit","pricesFromPosition","getPriceOrderingFromPositionForUI","priceLower","priceUpper","base","useInverter","quote","invert","inverted","equals","undefined","tickAtLimit","useMemo","Bound","LOWER","UPPER","currencyQuote","currencyBase","pairName","amount0","feeAmount0","amount1","feeAmount1","usePositionFees","currencyFeeAmount0","CurrencyAmount","fromRawAmount","numberToString","BigNumber","currencyFeeAmount1","hasUnclaimedFees","_Fragment","display","values","0","toFormat","toFixed","CurrencyAmountFormatDecimals","decimals","priceOf","toSignificant","formatTickPrice","toExact","multipliedBy","plus","gridTemplateColumns","gap","fullWidth","isMobile","ref","onMouseEnter","onMouseLeave","Popper","open","anchorEl","current","placement","popperOptions","modifiers","name","options","offset","ClickAwayListener","onClickAway","level1","CollectFeesModal","onClose","onClaimedSuccessfully","handleClaimedSuccessfully","TransferPosition","closed","onTransferSuccess","handleTransferSuccess","PositionItem","matchDownMD","detailShow","setDetailShow","handleToggleShow","outOfRange","tickCurrent","useUSDPriceById","address","totalUSDValue","setAllPositionsUSDValue","positionKey","useEffect","Loading","loading","circularSize","isDarkTheme","mx","Chip","DEFAULT_PERCENT_SYMBOL","PositionStatus","ml","KeyboardArrowUp","KeyboardArrowDown","hasLiquidity","_position$liquidity","positionDetail","usePosition","poolId","PositionItemComponent","BigInt","index","Positions","principal","useAccountPrincipalString","findPositionsOpen","setFindPositionsOpen","allPositionsUSDKeyValue","counter","setCounter","result","positions","useUserAllPositions","initialUserPositionPoolsLoading","useInitialUserPositionPools","hasLiquidityPositions","filter","length","allPositionsUSDValue","Object","reduce","prev","curr","Provider","handleAllPositionsUSDValue","usdValue","prevState","mb","component","TextButton","LoadingRow","NoData","map","FindPositionsModal","bgOpacity","wrapper","gridGap","listWrapper","left","bottom","zIndex","PoolList","pools","useInfoAllPools","allPoolsTVL","tvlLoading","useAllPoolsTVL","poolList","sort","a","b","feeTier","slice","find","poolTVL","token0Id","token1Id","Liquidity","isInitialed","updatePoolStandardInitialed","usePoolStandardManager","useSwapPools","updateTokenStandard","useUpdateTokenStandard","trigger","updatedNum","call","i","canisterId","standard","flex","to","createSvgIcon"],"sourceRoot":""}