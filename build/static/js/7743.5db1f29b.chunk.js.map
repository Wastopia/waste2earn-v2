{"version":3,"file":"static/js/7743.5db1f29b.chunk.js","mappings":"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","sources":["components/CurrenciesAvatar/index.tsx","components/swap/CollectFeesModal.tsx","components/swap/PositionRangeState.tsx","components/swap/TransferPosition.tsx","components/swap/CollectFeeSteps.tsx","hooks/swap/useClaimFees.ts","hooks/swap/usePosition.ts","hooks/swap/usePositionFees.ts","hooks/swap/useUserAllPositions.ts","../packages/hooks/src/info/global.ts","../packages/swap-sdk/src/utils/getPriceOrderingFromPositionForUI.ts","../packages/swap-sdk/src/utils/invert.ts"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport CurrencyAvatar from \"components/CurrencyAvatar\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nconst useStyles = makeStyles(() => {\n  return {\n    floatLeft: {\n      float: \"left\",\n    },\n    avatarBox: {\n      clear: \"both\",\n      overflow: \"hidden\",\n      \"& .currencyB\": {\n        marginLeft: \"-8px\",\n        float: \"left\",\n      },\n      \"& .currencyA \": {\n        float: \"left\",\n      },\n    },\n  };\n});\n\nexport interface CurrenciesAvatarProps {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  borderColor: string;\n  bgColor: string;\n  className?: any;\n  size?: string;\n}\n\nexport default function CurrenciesAvatar({\n  currencyA,\n  currencyB,\n  borderColor = \"#ffffff\",\n  bgColor = \"#97a4ef\",\n  size,\n}: CurrenciesAvatarProps) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.avatarBox}>\n      <CurrencyAvatar\n        className=\"currencyA\"\n        borderColor={borderColor}\n        bgColor={bgColor}\n        currency={currencyA}\n        size={size}\n      />\n      <CurrencyAvatar\n        className=\"currencyB\"\n        borderColor={borderColor}\n        bgColor={bgColor}\n        currency={currencyB}\n        size={size}\n      />\n    </Box>\n  );\n}\n","import { Box, Grid, Typography, CircularProgress } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport SwapModal from \"components/modal/swap\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { BigNumber } from \"@w2e/utils\";\nimport { Token, CurrencyAmount, Pool } from \"@w2e/swap-sdk\";\nimport Button from \"components/authentication/ButtonConnector\";\nimport { toFormat } from \"utils/index\";\nimport { TokenImage } from \"components/index\";\nimport { useMemo, useState } from \"react\";\nimport { useCollectFeeCallback } from \"hooks/swap/useClaimFees\";\nimport { ExternalTipArgs } from \"types/index\";\nimport { ReclaimTips } from \"components/ReclaimTips\";\nimport { useSuccessTip, useLoadingTip, useErrorTip } from \"hooks/useTips\";\nimport StepViewButton from \"components/Steps/View\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  feeBox: {\n    padding: \"16px 16px\",\n    borderRadius: \"12px\",\n    background: theme.palette.background.level3,\n  },\n}));\n\nexport interface CollectFeeModalProps {\n  open: boolean;\n  onClose: () => void;\n  currencyFeeAmount0: CurrencyAmount<Token> | undefined;\n  currencyFeeAmount1: CurrencyAmount<Token> | undefined;\n  pool: Pool | undefined | null;\n  positionId: number | bigint | undefined | string;\n  onClaimedSuccessfully?: () => void;\n}\n\nexport default function CollectFees({\n  open,\n  onClose,\n  currencyFeeAmount0,\n  currencyFeeAmount1,\n  pool,\n  positionId,\n  onClaimedSuccessfully,\n}: CollectFeeModalProps) {\n  const classes = useStyles();\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n  const [loading, setLoading] = useState(false);\n\n  const { token0, token1 } = useMemo(() => {\n    if (!pool) return { token0: undefined, token1: undefined };\n    return { token0: pool.token0, token1: pool.token1 };\n  }, [pool]);\n\n  const getClaimFeeCall = useCollectFeeCallback();\n\n  const handleCollect = async () => {\n    if (loading || !positionId || !pool || !currencyFeeAmount0 || !currencyFeeAmount1) return;\n\n    setLoading(true);\n    onClose();\n\n    const { call, key } = getClaimFeeCall({\n      pool,\n      positionId: BigInt(positionId),\n      currencyFeeAmount0,\n      currencyFeeAmount1,\n      openExternalTip: ({ message, tipKey }: ExternalTipArgs) => {\n        openErrorTip(<ReclaimTips message={message} tipKey={tipKey} />);\n      },\n    });\n\n    const loadingTipKey = openLoadingTip(\n      `Claim ${currencyFeeAmount0.toSignificant(6, {\n        groupSeparator: \",\",\n      })} ${token0?.symbol} and ${currencyFeeAmount1.toSignificant(6, { groupSeparator: \",\" })} ${token1?.symbol}`,\n      {\n        extraContent: <StepViewButton step={key} />,\n      },\n    );\n\n    const result = await call();\n\n    if (result === true) {\n      openSuccessTip(t`Claimed successfully`);\n      if (onClaimedSuccessfully) onClaimedSuccessfully();\n    }\n\n    closeLoadingTip(loadingTipKey);\n    setLoading(false);\n  };\n\n  return (\n    <SwapModal open={open} onClose={onClose} title={t`Claim fees`}>\n      <>\n        <Box className={classes.feeBox}>\n          <Grid container alignItems=\"center\">\n            <Grid item xs container alignItems=\"center\">\n              <Grid item mr={1}>\n                <TokenImage logo={token0?.logo} tokenId={token0?.address} />\n              </Grid>\n              <Grid item>\n                <Typography color=\"text.primary\">{token0?.symbol}</Typography>\n              </Grid>\n            </Grid>\n            <Grid item xs>\n              <Typography align=\"right\" color=\"text.primary\">\n                {currencyFeeAmount0 ? toFormat(new BigNumber(currencyFeeAmount0.toExact()).toFixed(8)) : \"--\"}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container mt={2} alignItems=\"center\">\n            <Grid item xs container alignItems=\"center\">\n              <Grid item mr={1}>\n                <TokenImage logo={token1?.logo} tokenId={token1?.address} />\n              </Grid>\n              <Grid item>\n                <Typography color=\"text.primary\">{token1?.symbol}</Typography>\n              </Grid>\n            </Grid>\n            <Grid item xs>\n              <Typography align=\"right\" color=\"text.primary\">\n                {currencyFeeAmount1 ? toFormat(new BigNumber(currencyFeeAmount1.toExact()).toFixed(8)) : \"--\"}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n        <Typography mt={1}>\n          <Trans>You can claim the liquidity incentive reward from the transaction according to your position.</Trans>\n        </Typography>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          fullWidth\n          sx={{ marginTop: \"24px\" }}\n          onClick={handleCollect}\n          disabled={loading}\n          startIcon={loading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n        >\n          {t`Claim`}\n        </Button>\n      </>\n    </SwapModal>\n  );\n}\n","import { Box, Typography, SvgIcon } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    wrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"24px\",\n      padding: \"0 9px\",\n      borderRadius: \"8px\",\n\n      \"& .MuiTypography-root\": {\n        fontSize: \"12px\",\n        fontWeight: 500,\n      },\n\n      \"&.inRange\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.closed\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.outOfRange\": {\n        background: \"#FFC107\",\n        \"& .MuiTypography-root\": {\n          color: theme.colors.darkLevel1,\n          marginLeft: \"3px\",\n        },\n      },\n    },\n  };\n});\n\nfunction Marker(props: any) {\n  return (\n    <SvgIcon width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" {...props}>\n      <path\n        d=\"M5.5 3.5H6.5V4.5H5.5V3.5ZM5.5 5.5H6.5V8.5H5.5V5.5ZM6 1C3.24 1 1 3.24 1 6C1 8.76 3.24 11 6 11C8.76 11 11 8.76 11 6C11 3.24 8.76 1 6 1ZM6 10C3.795 10 2 8.205 2 6C2 3.795 3.795 2 6 2C8.205 2 10 3.795 10 6C10 8.205 8.205 10 6 10Z\"\n        fill={props.color ? props.color : \"#111936\"}\n      />\n    </SvgIcon>\n  );\n}\n\nfunction Closed() {\n  const classes = useStyle();\n\n  return (\n    <Box component=\"span\" className={`${classes.wrapper} closed`}>\n      <Marker fontSize=\"12px\" color=\"#fff\" />\n\n      <Typography color=\"#ffffff\" sx={{ marginLeft: \"3px\" }}>\n        <Trans>Closed</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction OutOfRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} outOfRange`}>\n      <Marker fontSize=\"12px\" />\n\n      <Typography>\n        <Trans>Out of range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction InRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} inRange`}>\n      <Box\n        component=\"span\"\n        sx={{ background: \"#54C081\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", marginRight: \"8px\" }}\n      />\n      <Typography color=\"#ffffff\">\n        <Trans>In range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface PositionRangeStateProps {\n  outOfRange?: boolean | undefined;\n  closed?: boolean | undefined;\n}\n\nexport default function PositionRangeState({ outOfRange, closed }: PositionRangeStateProps) {\n  return closed ? <Closed /> : outOfRange ? <OutOfRange /> : <InRange />;\n}\n","import React, { useState, useMemo } from \"react\";\nimport { Typography, Grid, Chip, Button, useMediaQuery, Box } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport CurrenciesAvatar from \"components/CurrenciesAvatar\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\nimport { Bound } from \"constants/swap\";\nimport { DEFAULT_PERCENT_SYMBOL, CurrencyAmountFormatDecimals } from \"constants/index\";\nimport { feeAmountToPercentage } from \"utils/swap/index\";\nimport { usePositionFees } from \"hooks/swap/usePositionFees\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport {\n  numberToString,\n  BigNumber,\n  resultFormat,\n  formatDollarAmount,\n  isValidPrincipal,\n  toSignificantWithGroupSeparator,\n} from \"@w2e/utils\";\nimport { swapPool } from \"@w2e/actor\";\nimport { ResultStatus } from \"@w2e/types\";\nimport { CurrencyAmount, Position, getPriceOrderingFromPositionForUI, useInverter } from \"@w2e/swap-sdk\";\nimport { isDarkTheme } from \"utils/index\";\nimport { useSuccessTip, useLoadingTip, useErrorTip } from \"hooks/useTips\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { FilledTextField, Loading } from \"components/index\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\nimport { isElement } from \"react-is\";\nimport SwapModal from \"components/modal/swap\";\nimport { Principal } from \"@dfinity/principal\";\n\nimport PositionStatus from \"./PositionRangeState\";\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  positionContainer: {\n    position: \"relative\",\n    backgroundColor: theme.palette.background.level3,\n    borderRadius: `${theme.radius}px`,\n    border: theme.palette.border.gray200,\n    padding: \"24px 20px\",\n    marginTop: \"16px\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n    \"&:first-child\": {\n      marginTop: \"0\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"16px 10px\",\n    },\n  },\n  detailContainer: {\n    backgroundColor: theme.palette.background.level3,\n    borderRadius: `${theme.radius}px`,\n    border: theme.palette.border.gray200,\n    padding: \"20px\",\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"10px\",\n    },\n  },\n}));\n\nexport interface PositionDetailItemProps {\n  label: React.ReactChild;\n  value: React.ReactChild | undefined;\n  convert?: boolean;\n  onConvertClick?: () => void;\n}\n\nexport function PositionDetailItem({ label, value, convert, onConvertClick }: PositionDetailItemProps) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Typography {...(matchDownSM ? { fontSize: \"12px\" } : {})}>{label}</Typography>\n      <Grid sx={{ flex: 1 }} container justifyContent=\"flex-end\" alignItems=\"center\">\n        {isElement(value) ? (\n          value\n        ) : (\n          <Typography {...(matchDownSM ? { fontSize: \"12px\" } : {})} color=\"textPrimary\">\n            {value}\n          </Typography>\n        )}\n\n        {convert && (\n          <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport interface PositionDetailsProps {\n  positionId: bigint;\n  invalid?: boolean;\n  showButtons?: boolean;\n  position: Position | undefined;\n  manuallyInverted: boolean;\n  setManuallyInverted: (manuallyInverted: boolean) => void;\n  show: boolean | undefined;\n  token0USDPrice: number | undefined;\n  token1USDPrice: number | undefined;\n  onPrincipalChange: (principal: string) => void;\n}\n\nexport function PositionDetails({\n  position,\n  positionId,\n  manuallyInverted,\n  setManuallyInverted,\n  show,\n  token0USDPrice,\n  token1USDPrice,\n  onPrincipalChange,\n}: PositionDetailsProps) {\n  const classes = useStyle();\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n\n  // handle manual inversion\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition?.priceLower,\n    priceUpper: pricesFromPosition?.priceUpper,\n    quote: pricesFromPosition?.quote,\n    base: pricesFromPosition?.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const pairName = useMemo(() => {\n    return `${currencyQuote?.symbol} per ${currencyBase?.symbol}`;\n  }, [currencyQuote, currencyBase]);\n\n  const { amount0: feeAmount0, amount1: feeAmount1 } = usePositionFees(position?.pool.id, positionId);\n\n  const currencyFeeAmount0 = useMemo(() => {\n    if (!token0 || feeAmount0 === undefined) return undefined;\n    return CurrencyAmount.fromRawAmount(token0, numberToString(new BigNumber(feeAmount0.toString())));\n  }, [feeAmount0, token0]);\n\n  const currencyFeeAmount1 = useMemo(() => {\n    if (!token1 || feeAmount1 === undefined) return undefined;\n    return CurrencyAmount.fromRawAmount(token1, numberToString(new BigNumber(feeAmount1.toString())));\n  }, [feeAmount1, token1]);\n\n  return (\n    <>\n      <Box\n        className={classes.detailContainer}\n        sx={{ display: show ? \"flex\" : \"none\", margin: \"8px 0 0 0\", gap: \"20px 0\", flexDirection: \"column\" }}\n      >\n        <PositionDetailItem label={t`Position ID`} value={positionId.toString()} />\n        <PositionDetailItem\n          label={t`${currencyQuote?.symbol} Amount`}\n          value={\n            !position\n              ? \"--\"\n              : inverted\n                ? toSignificantWithGroupSeparator(\n                  position.amount0.toFixed(CurrencyAmountFormatDecimals(position?.amount0.currency.decimals)),\n                )\n                : toSignificantWithGroupSeparator(\n                  position.amount1.toFixed(CurrencyAmountFormatDecimals(position?.amount1.currency.decimals)),\n                )\n          }\n        />\n        <PositionDetailItem\n          label={t`${currencyBase?.symbol} Amount`}\n          value={\n            !position\n              ? \"--\"\n              : inverted\n                ? toSignificantWithGroupSeparator(\n                  position.amount1.toFixed(CurrencyAmountFormatDecimals(position?.amount1.currency.decimals)),\n                )\n                : toSignificantWithGroupSeparator(\n                  position.amount0.toFixed(CurrencyAmountFormatDecimals(position?.amount0.currency.decimals)),\n                )\n          }\n        />\n        <PositionDetailItem\n          label={t`Current Price`}\n          value={\n            !!token1 && !!token0 && pool\n              ? inverted\n                ? `${pool.priceOf(token1).toSignificant(6, { groupSeparator: \",\" })} ${pairName}`\n                : `${pool.priceOf(token0).toSignificant(6, { groupSeparator: \",\" })} ${pairName}`\n              : \"--\"\n          }\n          convert\n          onConvertClick={() => setManuallyInverted(!manuallyInverted)}\n        />\n        <PositionDetailItem\n          label={t`Price Range`}\n          value={\n            <Box>\n              <Typography\n                color=\"text.primary\"\n                align=\"right\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                  },\n                }}\n              >\n                {formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)} -\n                {formatTickPrice(priceUpper, tickAtLimit, Bound.UPPER)}\n              </Typography>\n              <Typography\n                color=\"text.primary\"\n                align=\"right\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                  },\n                }}\n              >\n                {pairName}\n              </Typography>\n            </Box>\n          }\n          convert\n          onConvertClick={() => setManuallyInverted(!manuallyInverted)}\n        />\n        <PositionDetailItem\n          label={t`Unclaimed fees`}\n          value={\n            <Box>\n              <Typography\n                color=\"text.primary\"\n                align=\"right\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                  },\n                }}\n              >\n                {currencyFeeAmount0 !== undefined || currencyFeeAmount1 !== undefined\n                  ? `${toSignificantWithGroupSeparator(\n                    new BigNumber(currencyFeeAmount0 ? currencyFeeAmount0.toExact() : 0).toString(),\n                  )} ${token0?.symbol}`\n                  : \"--\"}\n              </Typography>\n              <Typography\n                color=\"text.primary\"\n                align=\"right\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                  },\n                }}\n              >\n                {currencyFeeAmount0 !== undefined || currencyFeeAmount1 !== undefined\n                  ? `and ${toSignificantWithGroupSeparator(\n                    new BigNumber(currencyFeeAmount1 ? currencyFeeAmount1.toExact() : 0).toString(),\n                  )} ${token1?.symbol}`\n                  : \"--\"}\n              </Typography>\n              <Typography\n                mt=\"5px\"\n                align=\"right\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                  },\n                }}\n              >\n                {currencyFeeAmount0 !== undefined &&\n                  currencyFeeAmount1 !== undefined &&\n                  !!token0USDPrice &&\n                  !!token1USDPrice\n                  ? formatDollarAmount(\n                    new BigNumber(currencyFeeAmount0 ? currencyFeeAmount0.toExact() : 0)\n                      .multipliedBy(token0USDPrice)\n                      .plus(\n                        new BigNumber(currencyFeeAmount1 ? currencyFeeAmount1.toExact() : 0).multipliedBy(\n                          token1USDPrice,\n                        ),\n                      )\n                      .toString(),\n                  )\n                  : \"--\"}\n              </Typography>\n            </Box>\n          }\n        />\n\n        <Box>\n          <Typography sx={{ margin: \"0  0 10px 0\" }}>\n            <Trans>Transfer to</Trans>\n          </Typography>\n\n          <FilledTextField multiline placeholder=\"Enter the principal ID\" onChange={onPrincipalChange} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport interface TransferPositionProps {\n  positionId: bigint;\n  invalid?: boolean;\n  showButtons?: boolean;\n  position: Position | undefined;\n  closed: boolean;\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n}\n\nexport default function TransferPosition({\n  position,\n  showButtons,\n  positionId,\n  invalid = false,\n  closed,\n  open,\n  onClose,\n  onTransferSuccess,\n}: TransferPositionProps) {\n  const classes = useStyle();\n  const theme = useTheme() as Theme;\n\n  const userPrincipal = useAccountPrincipal();\n\n  const [principal, setPrincipal] = useState<undefined | string>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n\n  const matchDownMD = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  // handle manual inversion\n  const { base } = useInverter({\n    priceLower: pricesFromPosition?.priceLower,\n    priceUpper: pricesFromPosition?.priceUpper,\n    quote: pricesFromPosition?.quote,\n    base: pricesFromPosition?.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const outOfRange =\n    pool && (tickUpper || tickUpper === 0) && (tickLower || tickLower === 0)\n      ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper\n      : false;\n\n  const token0USDPrice = useUSDPriceById(position?.pool.token0.address);\n  const token1USDPrice = useUSDPriceById(position?.pool.token1.address);\n\n  const totalUSDValue = useMemo(() => {\n    if (!position || !token0USDPrice || !token1USDPrice) return undefined;\n\n    const totalUSD = new BigNumber(token0USDPrice)\n      .multipliedBy(position.amount0.toExact())\n      .plus(new BigNumber(token1USDPrice).multipliedBy(position.amount1.toExact()));\n\n    return totalUSD.toString();\n  }, [position, token0USDPrice, token1USDPrice]);\n\n  const handlePrincipalChange = (principal: string) => {\n    setPrincipal(principal);\n  };\n\n  const handleTransfer = async () => {\n    if (!principal || !position || !userPrincipal) return;\n\n    setLoading(true);\n\n    const poolId = position.pool.id;\n\n    const loadingKey = openLoadingTip(t`Transferring your position, ID is ${positionId}`);\n\n    const { status, message } = resultFormat<boolean>(\n      await (\n        await swapPool(poolId, true)\n      ).transferPosition(userPrincipal, Principal.fromText(principal), BigInt(positionId)),\n    );\n\n    if (status === ResultStatus.OK) {\n      openSuccessTip(t`Transfer successfully`);\n      onClose();\n      if (onTransferSuccess) onTransferSuccess();\n    } else {\n      openErrorTip(message ?? t`Failed to transfer`);\n    }\n\n    setLoading(false);\n\n    closeLoadingTip(loadingKey);\n  };\n\n  let error: string | undefined;\n  if (principal && !isValidPrincipal(principal)) error = \"Invalid principal ID\";\n  if (!principal) error = \"Enter the principal ID\";\n\n  return (\n    <SwapModal open={open} title={t`Transfer position`} onClose={onClose}>\n      <Grid className={classes.positionContainer} container>\n        {!position && <Loading loading={!position} circularSize={28} />}\n\n        <Grid item xs>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CurrenciesAvatar\n                currencyA={currencyBase}\n                currencyB={currencyQuote}\n                borderColor={isDarkTheme(theme) ? \"rgba(189, 200, 240, 0.4)\" : \"rgba(255, 255, 255, 0.4)\"}\n                bgColor={isDarkTheme(theme) ? \"#273155\" : \"#DADADA\"}\n                size={matchDownMD ? \"20px\" : \"24px\"}\n              />\n            </Grid>\n            <Grid item mx={1}>\n              <Typography color=\"textPrimary\" fontSize={matchDownMD ? 14 : 16} fontWeight={500}>\n                {currencyBase?.symbol}/{currencyQuote?.symbol}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Chip\n                label={feeAmount ? feeAmountToPercentage(feeAmount) : DEFAULT_PERCENT_SYMBOL}\n                sx={{\n                  borderRadius: \"8px\",\n                  height: matchDownMD ? \"22px\" : \"24px\",\n                  \"& span\": { padding: matchDownMD ? \"2px\" : \"5px\", fontSize: matchDownMD ? \"12px\" : \"14px\" },\n                  backgroundColor: isDarkTheme(theme) ? \"#4F5A84\" : \"#EFEFFF\",\n                }}\n              />\n            </Grid>\n          </Grid>\n\n          {!closed ? (\n            <Grid container mt=\"10px\">\n              <Typography>\n                <Trans>Value:</Trans>&nbsp;\n              </Typography>\n              <Typography color=\"text.primary\">{totalUSDValue ? formatDollarAmount(totalUSDValue) : \"--\"}</Typography>\n            </Grid>\n          ) : null}\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <PositionStatus closed={closed} outOfRange={outOfRange} />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <PositionDetails\n        position={position}\n        positionId={positionId}\n        invalid={invalid}\n        showButtons={showButtons}\n        manuallyInverted={manuallyInverted}\n        setManuallyInverted={setManuallyInverted}\n        show\n        token0USDPrice={token0USDPrice}\n        token1USDPrice={token1USDPrice}\n        onPrincipalChange={handlePrincipalChange}\n      />\n\n      <Box mt=\"20px\">\n        <Button fullWidth size=\"medium\" variant=\"contained\" disabled={!!error || loading} onClick={handleTransfer}>\n          {error || <Trans>Transfer</Trans>}\n        </Button>\n      </Box>\n    </SwapModal>\n  );\n}\n","import { Box, Avatar } from \"@mui/material\";\nimport { Token, CurrencyAmount } from \"@w2e/swap-sdk\";\nimport { formatTokenAmount, shorten } from \"@w2e/utils\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { TextButton } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\n\nexport interface CollectStepsProps {\n  positionId: bigint;\n  retry?: () => Promise<boolean>;\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n  principal: Principal | undefined;\n  handleReclaim: () => void;\n}\n\nfunction TokenAmount({ logo, amount }: { logo: string; amount: string | undefined }) {\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={logo}>\n        &nbsp;\n      </Avatar>\n      {amount ?? 0}\n    </Box>\n  );\n}\n\nexport function getCollectFeeSteps({\n  positionId,\n  retry,\n  currencyFeeAmount0,\n  currencyFeeAmount1,\n  principal,\n  handleReclaim,\n}: CollectStepsProps) {\n  const principalString = shorten(principal?.toString() ?? \"\", 12);\n\n  const withdrawAmountA = currencyFeeAmount0.toSignificant(12, { groupSeparator: \",\" });\n  const _withdrawAmountA = currencyFeeAmount0.toSignificant(12);\n  const withdrawAmountB = currencyFeeAmount1.toSignificant(12, { groupSeparator: \",\" });\n  const _withdrawAmountB = currencyFeeAmount1.toSignificant(12);\n\n  const tokenA = currencyFeeAmount0.currency.wrapped;\n  const tokenB = currencyFeeAmount1.currency.wrapped;\n\n  const withdrawAmountALessThanZero = formatTokenAmount(_withdrawAmountA, tokenA.decimals)\n    .minus(tokenA.transFee)\n    .isLessThan(0);\n\n  const withdrawAmountBLessThanZero = formatTokenAmount(_withdrawAmountB, tokenB.decimals)\n    .minus(tokenB.transFee)\n    .isLessThan(0);\n\n  return [\n    {\n      title: `Collect ${tokenA.symbol} and ${tokenB.symbol}`,\n      step: 0,\n      children: [\n        { label: t`Position ID`, value: positionId.toString() },\n        {\n          label: t`Token0`,\n          value: <TokenAmount amount={withdrawAmountA} logo={tokenA.logo} />,\n        },\n        {\n          label: t`Token1`,\n          value: <TokenAmount amount={withdrawAmountB} logo={tokenB.logo} />,\n        },\n      ],\n      errorActions: [\n        <TextButton onClick={retry}>\n          <Trans>Retry</Trans>\n        </TextButton>,\n      ],\n    },\n    {\n      title: withdrawAmountALessThanZero ? t`Unable to withdraw ${tokenA.symbol}` : t`Withdraw ${tokenA.symbol}`,\n      step: 1,\n      children: [\n        {\n          label: t`Amount`,\n          value: <TokenAmount amount={withdrawAmountA} logo={tokenA.logo} />,\n        },\n        { label: t`Principal ID`, value: principalString },\n      ],\n      errorActions: [\n        <TextButton onClick={handleReclaim}>\n          <Trans>Reclaim</Trans>\n        </TextButton>,\n        <TextButton onClick={retry}>\n          <Trans>Retry</Trans>\n        </TextButton>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n      skipError: withdrawAmountALessThanZero ? t`The amount of withdrawal is less than the transfer fee` : undefined,\n    },\n    {\n      title: withdrawAmountBLessThanZero ? t`Unable to withdraw ${tokenB.symbol}` : t`Withdraw ${tokenB.symbol}`,\n      step: 2,\n      children: [\n        {\n          label: t`Amount`,\n          value: <TokenAmount amount={withdrawAmountB} logo={tokenB.logo} />,\n        },\n        { label: t`Principal ID`, value: principalString },\n      ],\n      errorActions: [\n        <TextButton onClick={handleReclaim}>\n          <Trans>Reclaim</Trans>\n        </TextButton>,\n        <TextButton onClick={retry}>\n          <Trans>Retry</Trans>\n        </TextButton>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n      skipError: withdrawAmountBLessThanZero ? t`The amount of withdrawal is less than the transfer fee` : undefined,\n    },\n  ];\n}\n","import { useCallback } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Pool, CurrencyAmount, Token } from \"@w2e/swap-sdk\";\nimport { t } from \"@lingui/macro\";\nimport { getActorIdentity } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { useStepCalls, newStepKey } from \"hooks/useStepCall\";\nimport { getCollectFeeSteps } from \"components/swap/CollectFeeSteps\";\nimport { useStepContentManager } from \"store/steps/hooks\";\nimport { useSwapWithdraw, useReclaimCallback } from \"hooks/swap/index\";\nimport { useErrorTip } from \"hooks/useTips\";\nimport { collect } from \"hooks/swap/v3Calls\";\nimport { ExternalTipArgs, OpenExternalTip } from \"types/index\";\n\nexport async function collectPositionFee(pool: string, positionId: bigint) {\n  const identity = await getActorIdentity();\n\n  return await collect(pool, identity, {\n    positionId,\n  });\n}\n\ninterface CollectFeeCallsArgs {\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  pool: Pool;\n  positionId: bigint;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n  openExternalTip: OpenExternalTip;\n  stepKey: string;\n}\n\nfunction useCollectFeeCalls() {\n  const principal = useAccountPrincipal();\n  const [openErrorTip] = useErrorTip();\n  const withdraw = useSwapWithdraw();\n\n  return useCallback(\n    ({ pool, positionId, currencyFeeAmount0, currencyFeeAmount1, openExternalTip, stepKey }: CollectFeeCallsArgs) => {\n      const _collect = async () => {\n        if (!positionId || !principal || !pool) return false;\n\n        const { status, message } = await collectPositionFee(pool.id, positionId);\n\n        if (status === \"ok\") {\n          return true;\n        }\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to claim`);\n        return false;\n      };\n\n      const withdrawCurrencyA = async () => {\n        if (!currencyFeeAmount0 || !pool) return false;\n\n        if (\n          !new BigNumber(currencyFeeAmount0.quotient.toString())\n            .minus(currencyFeeAmount0.currency.transFee)\n            .isGreaterThan(0)\n        )\n          return true;\n\n        return await withdraw(\n          currencyFeeAmount0.currency,\n          pool.id,\n          currencyFeeAmount0.quotient.toString(),\n          ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          },\n        );\n      };\n\n      const withdrawCurrencyB = async () => {\n        if (!currencyFeeAmount1 || !pool) return false;\n\n        if (\n          !new BigNumber(currencyFeeAmount1.quotient.toString())\n            .minus(currencyFeeAmount1.currency.transFee)\n            .isGreaterThan(0)\n        )\n          return true;\n\n        const result = await withdraw(\n          currencyFeeAmount1.currency,\n          pool.id,\n          currencyFeeAmount1.quotient.toString(),\n          ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          },\n        );\n\n        return result;\n      };\n\n      return [_collect, withdrawCurrencyA, withdrawCurrencyB];\n    },\n    [principal],\n  );\n}\n\ninterface AddLiquidityStepsArgs {\n  positionId: bigint;\n  retry: () => Promise<boolean>;\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n}\n\nfunction useCollectFeeSteps() {\n  const principal = useAccountPrincipal();\n  const stepContentManage = useStepContentManager();\n\n  const handleReclaim = useReclaimCallback();\n\n  return useCallback(\n    (key: string, { positionId, retry, currencyFeeAmount0, currencyFeeAmount1 }: AddLiquidityStepsArgs) => {\n      const content = getCollectFeeSteps({\n        positionId,\n        retry,\n        currencyFeeAmount1,\n        currencyFeeAmount0,\n        principal,\n        handleReclaim,\n      });\n\n      stepContentManage(String(key), {\n        content,\n        title: t`Claim Fees Details`,\n      });\n    },\n    [principal],\n  );\n}\n\nexport interface ClaimFeeArgs {\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  pool: Pool;\n  positionId: bigint;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n  openExternalTip: OpenExternalTip;\n}\n\nexport function useCollectFeeCallback() {\n  const getCalls = useCollectFeeCalls();\n  const formatCall = useStepCalls();\n  const initialSteps = useCollectFeeSteps();\n\n  return useCallback(\n    ({ pool, positionId, currencyFeeAmount0, currencyFeeAmount1, openExternalTip }: ClaimFeeArgs) => {\n      const key = newStepKey();\n      const calls = getCalls({\n        pool,\n        positionId,\n        currencyFeeAmount0,\n        currencyFeeAmount1,\n        openExternalTip,\n        stepKey: key,\n      });\n      const { call, reset, retry } = formatCall(calls, key);\n\n      initialSteps(key, { positionId, currencyFeeAmount0, currencyFeeAmount1, retry });\n\n      return { call, reset, retry, key };\n    },\n    [getCalls, formatCall, initialSteps],\n  );\n}\n","import { useMemo } from \"react\";\nimport { Position, Pool } from \"@w2e/swap-sdk\";\nimport { useSwapPoolMetadata } from \"@w2e/hooks\";\nimport { usePool, PoolState } from \"hooks/swap/usePools\";\nimport { useToken } from \"hooks/useCurrency\";\n\nexport interface usePositionProps {\n  poolId: string | undefined;\n  tickLower: bigint | undefined;\n  tickUpper: bigint | undefined;\n  liquidity: bigint | undefined;\n}\n\nexport function usePosition(userPosition: usePositionProps | undefined) {\n  const { result: poolMetadata } = useSwapPoolMetadata(userPosition?.poolId);\n\n  const [, currency0] = useToken(poolMetadata?.token0.address);\n  const [, currency1] = useToken(poolMetadata?.token1.address);\n\n  const [poolState, pool] = usePool(\n    currency0 ?? undefined,\n    currency1 ?? undefined,\n    poolMetadata?.fee ? Number(poolMetadata.fee) : undefined,\n  );\n\n  let position: Position | undefined;\n\n  if (\n    pool &&\n    poolMetadata &&\n    userPosition &&\n    userPosition.tickLower !== undefined &&\n    userPosition.tickUpper !== undefined &&\n    userPosition.liquidity !== undefined\n  ) {\n    position = new Position({\n      pool,\n      liquidity: userPosition.liquidity.toString(),\n      tickLower: Number(userPosition.tickLower),\n      tickUpper: Number(userPosition.tickUpper),\n    });\n  }\n\n  return {\n    loading: poolState === PoolState.LOADING,\n    checking: poolState === PoolState.NOT_CHECK,\n    position,\n    pool: pool ?? undefined,\n  };\n}\n\nexport interface usePositionWithPoolProps {\n  pool: Pool | null | undefined;\n  liquidity: number | string | undefined;\n  tickLower: number | string | undefined;\n  tickUpper: number | string | undefined;\n}\n\nexport function usePositionWithPool({ tickLower, tickUpper, liquidity, pool }: usePositionWithPoolProps) {\n  let position: Position | undefined;\n\n  if (pool && liquidity && (tickLower || tickLower === 0) && (tickUpper || tickUpper === 0)) {\n    position = new Position({\n      pool,\n      liquidity,\n      tickLower: Number(tickLower),\n      tickUpper: Number(tickUpper),\n    });\n  }\n\n  return useMemo(() => position, [position]);\n}\n","import { useMemo } from \"react\";\nimport { usePositionFee } from \"@w2e/hooks\";\n\nexport function usePositionFees(\n  canisterId: string | undefined,\n  positionId: bigint | undefined,\n  refresh?: number | boolean,\n) {\n  const { result } = usePositionFee(canisterId, positionId, refresh);\n\n  return useMemo(() => {\n    if (!result)\n      return {\n        amount0: undefined,\n        amount1: undefined,\n      };\n\n    return {\n      amount0: result.tokensOwed0,\n      amount1: result.tokensOwed1,\n    };\n  }, [result]);\n}\n","import { getSwapPosition } from \"@w2e/hooks\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { UserPosition } from \"types/swap\";\nimport { useStoreUserPositionPools } from \"store/hooks\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { getUserPositionIds } from \"./useUserPositionIds\";\n\ntype UserPositions = {\n  positions: bigint[];\n  poolId: string;\n};\n\nexport function useUserAllPositions(refresh?: number) {\n  const [loading, setLoading] = useState(true);\n  const [positions, setPositions] = useState<UserPosition[]>([]);\n\n  const principal = useAccountPrincipal();\n\n  const userPositionPools = useStoreUserPositionPools();\n\n  useEffect(() => {\n    async function call() {\n      if (userPositionPools && !!principal) {\n        if (userPositionPools.length === 0) {\n          setLoading(false);\n          setPositions([]);\n        } else {\n          const userPositionsResult = (\n            await Promise.all(\n              userPositionPools.map(async (poolId: string) => {\n                return await getUserPositionIds(poolId, principal.toString());\n              }),\n            )\n          )\n            .map((positions, index) => (positions ? { positions, poolId: userPositionPools[index] } : undefined))\n            .filter((ele) => !!ele) as UserPositions[];\n\n          const positions = await Promise.all(\n            userPositionsResult\n              .reduce((prev, curr) => {\n                return prev.concat(curr.positions.map((index) => [curr.poolId, index]));\n              }, [] as [string, bigint][])\n              .map(async ([canisterId, index]) => {\n                const position = await getSwapPosition(canisterId, index);\n                return { ...position, id: canisterId, index: Number(index) };\n              }),\n          );\n\n          setPositions(positions.filter((position) => !!position) as UserPosition[]);\n          setLoading(false);\n        }\n      } else if (!principal) {\n        setPositions([]);\n      }\n    }\n\n    call();\n  }, [userPositionPools, principal, refresh]);\n\n  return useMemo(() => ({ loading, result: positions }), [positions, loading]);\n}\n\nexport function useUserPoolPositions(poolId: string | undefined, refresh?: number) {\n  const [loading, setLoading] = useState(false);\n  const [positions, setPositions] = useState<UserPosition[]>([]);\n\n  const principal = useAccountPrincipal();\n\n  useEffect(() => {\n    async function call() {\n      if (!!principal && poolId) {\n        setLoading(true);\n\n        const userPositionsResult = await getUserPositionIds(poolId, principal.toString());\n\n        if (userPositionsResult) {\n          const positions = await Promise.all(\n            userPositionsResult.map(async (index) => {\n              const position = await getSwapPosition(poolId, index);\n              return { ...position, id: poolId, index: Number(index) };\n            }),\n          );\n\n          setPositions(positions.filter((position) => !!position) as UserPosition[]);\n        }\n\n        setLoading(false);\n      } else {\n        setPositions([]);\n      }\n    }\n\n    call();\n  }, [principal, refresh, poolId]);\n\n  return useMemo(() => ({ loading, result: positions }), [positions, loading]);\n}\n","import { useCallback } from \"react\";\nimport { resultFormat } from \"@w2e/utils\";\nimport { globalIndex } from \"@w2e/actor\";\nimport { AllPoolsTVL, AllTokensTVL, PoolLatestTVL, PublicProtocolData, TokenLatestTVL } from \"@w2e/types\";\nimport { useCallsData } from \"../useCallData\";\n\n// Global\nexport async function getAllPoolsTVL() {\n  return resultFormat<AllPoolsTVL>(await (await globalIndex()).getAllPoolTvl()).data;\n}\n\nexport function useAllPoolsTVL() {\n  return useCallsData(\n    useCallback(async () => {\n      return await getAllPoolsTVL();\n    }, []),\n  );\n}\n\nexport async function getAllTokensTVL() {\n  return resultFormat<AllTokensTVL>(await (await globalIndex()).getAllTokenTvl()).data;\n}\n\nexport function useAllTokensTVL() {\n  return useCallsData(\n    useCallback(async () => {\n      return await getAllTokensTVL();\n    }, []),\n  );\n}\n\nexport async function getSwapProtocolData() {\n  return resultFormat<PublicProtocolData>(await (await globalIndex()).getProtocolData()).data;\n}\n\nexport function useSwapProtocolData() {\n  return useCallsData(\n    useCallback(async () => {\n      return await getSwapProtocolData();\n    }, []),\n  );\n}\n\nexport async function getPoolLatestTVL(id: string) {\n  return resultFormat<PoolLatestTVL>(await (await globalIndex()).getPoolLastTvl(id)).data;\n}\n\nexport function usePoolLatestTVL(id: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!id) return undefined;\n      return await getPoolLatestTVL(id!);\n    }, [id]),\n  );\n}\n\nexport async function getTokenLatestTVL(id: string) {\n  return resultFormat<TokenLatestTVL>(await (await globalIndex()).getTokenLastTvl(id)).data;\n}\n\nexport function useTokenLatestTVL(id: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!id) return undefined;\n      return await getTokenLatestTVL(id!);\n    }, [id]),\n  );\n}\n\nexport async function getGlobalLatestStorageCanister() {\n  return resultFormat<string>(await (await globalIndex()).globalLastStorageCanister()).data;\n}\n\nexport function useGlobalLatestStorageCanister() {\n  return useCallsData(\n    useCallback(async () => {\n      return await getGlobalLatestStorageCanister();\n    }, []),\n  );\n}\n\nexport async function getGlobalStorageCanister() {\n  return resultFormat<string[]>(await (await globalIndex()).globalStorageCanister()).data;\n}\n\nexport function useGlobalStorageCanister() {\n  return useCallsData(\n    useCallback(async () => {\n      return await getGlobalStorageCanister();\n    }, []),\n  );\n}\n\nexport async function getTvlLatestStorageCanister() {\n  return resultFormat<string>(await (await globalIndex()).tvlLastStorageCanister()).data;\n}\n\nexport function useTvlLatestStorageCanister() {\n  return useCallsData(\n    useCallback(async () => {\n      return await getTvlLatestStorageCanister();\n    }, []),\n  );\n}\n\nexport async function getTvlStorageCanister() {\n  return resultFormat<string[]>(await (await globalIndex()).tvlStorageCanister()).data;\n}\n\nexport function useTvlStorageCanister() {\n  return useCallsData(\n    useCallback(async () => {\n      return await getTvlStorageCanister();\n    }, []),\n  );\n}\n","import { Position } from \"../entities/position\";\n\nexport function getPriceOrderingFromPositionForUI(position: Position | undefined) {\n  if (!position) return {};\n\n  const token0 = position.amount0.currency;\n  const token1 = position.amount1.currency;\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    };\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  };\n}\n","import { Token } from \"../core/entities/token\";\nimport { Price } from \"../core/entities/fractions/price\";\n\ninterface useInverterProps {\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  quote: Token | undefined;\n  base: Token | undefined;\n  invert: boolean;\n}\n\nexport function useInverter({ priceLower, priceUpper, quote, base, invert }: useInverterProps) {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base,\n  };\n}\n"],"names":["useStyles","makeStyles","floatLeft","float","avatarBox","clear","overflow","marginLeft","CurrenciesAvatar","_ref","currencyA","currencyB","borderColor","bgColor","size","classes","_jsxs","Box","className","children","_jsx","CurrencyAvatar","currency","theme","feeBox","padding","borderRadius","background","palette","level3","CollectFees","open","onClose","currencyFeeAmount0","currencyFeeAmount1","pool","positionId","onClaimedSuccessfully","openSuccessTip","useSuccessTip","openErrorTip","useErrorTip","openLoadingTip","closeLoadingTip","useLoadingTip","loading","setLoading","useState","token0","token1","useMemo","undefined","getClaimFeeCall","useCollectFeeCallback","SwapModal","title","i18n","_","id","_Fragment","Grid","container","alignItems","item","xs","mr","TokenImage","logo","tokenId","address","Typography","color","symbol","align","toFormat","BigNumber","toExact","toFixed","mt","Trans","Button","variant","fullWidth","sx","marginTop","onClick","async","call","key","BigInt","openExternalTip","_ref2","message","tipKey","ReclaimTips","loadingTipKey","concat","toSignificant","groupSeparator","extraContent","StepViewButton","step","disabled","startIcon","CircularProgress","useStyle","wrapper","display","height","fontSize","fontWeight","colors","darkPrimary400","darkLevel1","Marker","props","SvgIcon","width","viewBox","d","fill","Closed","component","OutOfRange","InRange","marginRight","PositionRangeState","outOfRange","closed","positionContainer","position","backgroundColor","radius","border","gray200","cursor","breakpoints","down","detailContainer","PositionDetailItem","label","value","convert","onConvertClick","useTheme","matchDownSM","useMediaQuery","flex","justifyContent","isElement","SyncAltIcon","PositionDetails","manuallyInverted","setManuallyInverted","show","token0USDPrice","token1USDPrice","onPrincipalChange","tickLower","tickUpper","fee","feeAmount","_tickAtLimit","useIsTickAtLimit","pricesFromPosition","getPriceOrderingFromPositionForUI","priceLower","priceUpper","base","useInverter","quote","invert","inverted","equals","tickAtLimit","Bound","LOWER","UPPER","currencyQuote","currencyBase","pairName","amount0","feeAmount0","amount1","feeAmount1","usePositionFees","CurrencyAmount","fromRawAmount","numberToString","toString","margin","gap","flexDirection","values","0","toSignificantWithGroupSeparator","CurrencyAmountFormatDecimals","decimals","priceOf","formatTickPrice","formatDollarAmount","multipliedBy","plus","FilledTextField","multiline","placeholder","onChange","TransferPosition","_ref3","showButtons","invalid","onTransferSuccess","userPrincipal","useAccountPrincipal","principal","setPrincipal","matchDownMD","tickCurrent","useUSDPriceById","totalUSDValue","error","isValidPrincipal","Loading","circularSize","isDarkTheme","mx","Chip","feeAmountToPercentage","DEFAULT_PERCENT_SYMBOL","PositionStatus","poolId","loadingKey","status","resultFormat","swapPool","transferPosition","Principal","fromText","ResultStatus","OK","TokenAmount","amount","Avatar","src","collectPositionFee","identity","getActorIdentity","collect","useCollectFeeSteps","stepContentManage","useStepContentManager","handleReclaim","useReclaimCallback","useCallback","_ref4","retry","content","_principal$toString","principalString","shorten","withdrawAmountA","_withdrawAmountA","withdrawAmountB","_withdrawAmountB","tokenA","wrapped","tokenB","withdrawAmountALessThanZero","formatTokenAmount","minus","transFee","isLessThan","withdrawAmountBLessThanZero","errorActions","TextButton","errorMessage","skipError","getCollectFeeSteps","String","getCalls","withdraw","useSwapWithdraw","stepKey","_getLocaleMessage","getLocaleMessage","quotient","isGreaterThan","useCollectFeeCalls","formatCall","useStepCalls","initialSteps","_ref5","newStepKey","calls","reset","usePosition","userPosition","result","poolMetadata","useSwapPoolMetadata","currency0","useToken","currency1","poolState","usePool","Number","liquidity","Position","PoolState","LOADING","checking","NOT_CHECK","usePositionWithPool","canisterId","refresh","usePositionFee","tokensOwed0","tokensOwed1","useUserAllPositions","positions","setPositions","userPositionPools","useStoreUserPositionPools","useEffect","length","userPositionsResult","Promise","all","map","getUserPositionIds","index","filter","ele","reduce","prev","curr","getSwapPosition","useUserPoolPositions","rejected","generator","throw","e","reject","done","resolve","then","fulfilled","apply","thisArg","_arguments","next","useAllPoolsTVL","useCallsData","__awaiter","globalIndex","getAllPoolTvl","data","getAllPoolsTVL","useTvlStorageCanister","tvlStorageCanister","getTvlStorageCanister","token0PriceUpper","lessThan","token0PriceLower"],"sourceRoot":""}