{"version":3,"file":"static/js/4263.a77f96bd.chunk.js","mappings":"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","sources":["assets/icons/Copy.svg","components/ConnectWallet.tsx","components/MaxButton.tsx","components/qrcode/index.tsx","hooks/nft/useNFTCalls.ts","store/nft/hooks.ts","assets/icons/refresh.svg","components/Wallet/context.ts","components/Wallet/WalletAccount.tsx","components/QRReader.tsx","components/TokenTransfer/index.tsx","components/XTCTopup/index.tsx","hooks/token/dip20.ts","components/Wallet/NFIDTransfer.tsx","components/Wallet/Receive.tsx","components/Wallet/TokenListTable.tsx","assets/icons/add.svg","components/Wallet/AddToken/modal.tsx","components/Wallet/AddToken/index.tsx","components/Wallet/PageToggle.tsx","components/Wallet/TokenListHeader.tsx","components/Wallet/TokenList.tsx","assets/icons/import.svg","components/Wallet/AddNFTCanister/Modal.tsx","components/Wallet/AddNFTCanister/index.tsx","../packages/constants/src/nft.ts","components/Wallet/ImportEXTNFT/Modal.tsx","components/Wallet/ImportEXTNFT/index.tsx","components/Wallet/NFTListHeader.tsx","components/Wallet/NFTList.tsx","views/wallet/index.tsx","../packages/hooks/src/ext-nft/useAllCollections.ts","../packages/hooks/src/ext-nft/useUserAllNFTs.ts","../packages/utils/src/isValidAccount.ts"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 4H2V10H8V4ZM2 3C1.44772 3 1 3.44772 1 4V10C1 10.5523 1.44772 11 2 11H8C8.55228 11 9 10.5523 9 10V4C9 3.44772 8.55228 3 8 3H2Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 9L10 2L3 2L3 0.999999L10 1C10.5523 1 11 1.44772 11 2L11 9L10 9Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/Copy.351d8604b102850f77eb6e2d05b49bb6.svg\";\nexport { ForwardRef as ReactComponent };","import { Grid, Box, Typography, Button } from \"@mui/material\";\nimport { MainCard } from \"components/index\";\nimport NoData from \"components/no-data\";\nimport { useWalletConnectorManager } from \"store/auth/hooks\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function ConnectWallet() {\n  const [, walletManager] = useWalletConnectorManager();\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box sx={{ maxWidth: \"1400px\", width: \"100%\" }}>\n        <MainCard level={3}>\n          <Grid container alignItems=\"center\" flexDirection=\"column\" sx={{ height: \"250px\" }}>\n            <NoData />\n            <Typography color=\"text.primary\">\n              <Trans>Connect wallet to view</Trans>\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={() => walletManager(true)}\n              sx={{ width: \"100%\", maxWidth: \"522px\", marginTop: \"23px\" }}\n              size=\"large\"\n            >\n              <Trans>Connect Wallet</Trans>\n            </Button>\n          </Grid>\n        </MainCard>\n      </Box>\n    </Grid>\n  );\n}\n","import { Typography, TypographyProps } from \"@mui/material\";\nimport { useTheme } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function MaxButton(props: TypographyProps) {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Typography\n      {...props}\n      sx={{\n        padding: \"1px 3px\",\n        cursor: \"pointer\",\n        borderRadius: \"2px\",\n        backgroundColor: theme.colors.secondaryMain,\n        color: \"#ffffff\",\n        fontSize: \"12px\",\n        ...(props.sx ?? {}),\n      }}\n    >\n      <Trans>Max</Trans>\n    </Typography>\n  );\n}\n","import QRCode from \"qrcode.react\";\n\nexport interface QRCodeProps {\n  width?: number;\n  height?: number;\n  value: string;\n}\n\nexport default ({ value, ...props }: QRCodeProps) => {\n  return <QRCode value={value} {...props} />;\n};\n","import { useCallback } from \"react\";\nimport { PaginationResult, Identity } from \"types/index\";\nimport type {\n  NFTTokenMetadata,\n  NFTTransaction,\n  NFTCanisterInfo,\n  NFTTransferArgs,\n  NFTControllerArgs,\n  NFTBatchMintArgs,\n  NFTControllerInfo,\n  StatusResult,\n} from \"@w2e/types\";\nimport { OLD_CANISTER_IDS } from \"constants/nft\";\nimport { resultFormat, principalToAccount, isAvailablePageArgs } from \"@w2e/utils\";\nimport { swapNFT, NFTCanisterController, NFTCanister } from \"@w2e/actor\";\nimport { useCallsData } from \"@w2e/hooks\";\nimport { Principal } from \"@dfinity/principal\";\nimport { v2SwapNFT } from \"actor/swapV2\";\n\nexport async function approveForAll(identity: Identity, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  const result = await (await swapNFT(identity)).approveForAll({ spender: { address: spender }, approved: true });\n  return resultFormat(result);\n}\n\nexport async function allowanceAll(account: string, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  return resultFormat<boolean>(await (await swapNFT()).isApproveForAll(account, spender)).data;\n}\n\nexport async function v2ApproveAll(identity: Identity, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  const result = await (await v2SwapNFT(identity)).approveForAll({ spender: { address: spender }, approved: true });\n  return resultFormat(result);\n}\n\nexport async function v2AllowanceAll(account: string, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  return resultFormat<boolean>(await (await v2SwapNFT()).isApproveForAll(account, spender)).data;\n}\n\nexport async function findTokenListByPool(principal: Principal, pool: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<NFTTokenMetadata>>(\n    await (await swapNFT()).findTokenListByPool(pool, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useUserNFTs(user: Principal | undefined, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!user || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTokenMetadata>>(\n        await (await swapNFT()).findTokenList({ principal: user }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [user]),\n  );\n}\n\nexport async function findV2TokenListByPool(\n  account: string,\n  searchCondition: { k: string; v: string }[],\n  offset: number,\n  limit: number,\n) {\n  return resultFormat<PaginationResult<NFTTokenMetadata>>(\n    await (await v2SwapNFT()).findMatchNFTLists({ address: account }, searchCondition, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport async function getSwapNFTTokenURI(tokenId: bigint | number) {\n  const { data } = resultFormat<string>(await (await swapNFT()).tokenURI(BigInt(tokenId)));\n  return JSON.parse(data ?? \"\") as { image: string; [key: string]: any };\n}\n\nexport function useMintNFTCallback(): (\n  canisterId: string,\n  identity: Identity,\n  params: NFTBatchMintArgs,\n) => Promise<StatusResult<bigint>> {\n  return useCallback(async (canisterId, identity, params) => {\n    if (params.count && BigInt(params.count) > 1) {\n      return resultFormat<bigint>(await (await NFTCanister(canisterId, identity)).mint_batch(params));\n    }\n\n    return resultFormat<bigint>(\n      await (\n        await NFTCanister(canisterId, identity)\n      ).mint({\n        ...params,\n      }),\n    );\n  }, []);\n}\n\nexport function useNFTMetadata(\n  canisterId: string | undefined | null,\n  tokenId: number | bigint | null | undefined,\n  reload?: any,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || (!tokenId && tokenId !== 0)) return undefined;\n      return resultFormat<NFTTokenMetadata>(await (await NFTCanister(canisterId)).icsMetadata(Number(tokenId))).data;\n    }, [tokenId]),\n    reload,\n  );\n}\n\nexport function useNFTTransaction(\n  canisterId: string,\n  tokenIdentifier: string | null | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !tokenIdentifier || !isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTTransaction>>(\n        await (await NFTCanister(canisterId)).findTxRecord(tokenIdentifier, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [canisterId, tokenIdentifier, offset, limit]),\n    reload,\n  );\n}\n\nexport function useUserNFTTransactions(canisterId: string, account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTransaction>>(\n        await (await NFTCanister(canisterId)).findTokenTxRecord({ address: account }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [account, offset, limit]),\n  );\n}\n\nexport function useNFTTransferCallback(): (\n  canisterId: string,\n  identity: Identity,\n  params: NFTTransferArgs,\n) => Promise<StatusResult<boolean>> {\n  return useCallback(\n    async (canisterId, identity, params) =>\n      resultFormat<boolean>(await (await NFTCanister(canisterId, identity)).transfer(params)),\n    [],\n  );\n}\n\nexport function useCanisterCycles(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return resultFormat<bigint>(await (await NFTCanister(canisterId)).cycleBalance()).data;\n    }, [canisterId]),\n  );\n}\n\nexport function useCanisterUserNFTCount(canisterId: string, account: string, reload?: boolean | number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account) return undefined;\n      return resultFormat<bigint>(await (await NFTCanister(canisterId)).ownerNFTCount({ address: account })).data;\n    }, [canisterId, account]),\n    reload,\n  );\n}\n\nexport function useNFTCanisterList(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findCanister(BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport function useUserCanisterList(account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findUserCanister(account, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport async function createCanister(values: NFTControllerArgs): Promise<StatusResult<string>> {\n  return resultFormat<string>(await (await NFTCanisterController(true)).create(values));\n}\n\nexport async function setCanisterLogo(canisterId: string, logo: string) {\n  return resultFormat<boolean>(await (await NFTCanister(canisterId, true)).setLogo(logo));\n}\n\nexport async function setCanisterLogoInController(canisterId: string, logo: string) {\n  return resultFormat<boolean>(await (await NFTCanisterController(true)).setLogo(logo, canisterId));\n}\n\nexport function useCanisterMetadata(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      if (OLD_CANISTER_IDS.includes(canisterId))\n        return resultFormat<NFTControllerInfo>(await (await NFTCanisterController()).canisterInfo(canisterId)).data;\n      return resultFormat<NFTCanisterInfo>(await (await NFTCanister(canisterId)).canisterInfo()).data;\n    }, [canisterId]),\n  );\n}\n\nexport async function getCanisterLogo(canisterId: string) {\n  // The there canisters doesn't has info method in canister\n  if (OLD_CANISTER_IDS.includes(canisterId))\n    return resultFormat<NFTControllerInfo>(await (await NFTCanisterController()).canisterInfo(canisterId)).data?.image;\n  return resultFormat<NFTCanisterInfo>(await (await NFTCanister(canisterId)).canisterInfo()).data?.image;\n}\n\nexport function useCanisterLogo(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getCanisterLogo(canisterId);\n    }, [canisterId]),\n  );\n}\n\nexport function useCanisterNFTList(canisterId: string, account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTokenMetadata>>(\n        await (await NFTCanister(canisterId)).findTokenList({ address: account }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [canisterId, account, offset, limit]),\n  );\n}\n\nexport function useNFTMintInfo() {\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<[bigint, bigint, string, string]>(await (await NFTCanisterController()).feeInfo()).data;\n    }, []),\n  );\n}\n\nexport async function getSwapNFTStat() {\n  return resultFormat<[bigint, bigint]>(await (await swapNFT()).getNftStat()).data;\n}\n","import { useCallback, useMemo } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"store/hooks\";\nimport { ImportedNFT } from \"types/nft\";\nimport { updateUserSelectedCanisters, deleteUserSelectedCanisters, importNFT, deleteNFT } from \"./actions\";\n\nexport function useSelectedCanisters() {\n  return useAppSelector((state) => state.nft.userSelectedCanisters);\n}\n\nexport function useSelectedCanistersManager(): [\n  string[],\n  (selectedCanisters: string[]) => void,\n  (selectedCanister: string) => void,\n] {\n  const dispatch = useAppDispatch();\n  const userSelectedCanisters = useSelectedCanisters();\n\n  const setUserSelectedCanistersCallback = useCallback(\n    (selectedCanisters: string[]) => {\n      dispatch(updateUserSelectedCanisters(selectedCanisters));\n    },\n    [dispatch],\n  );\n\n  const deleteUserSelectedCanisterCallback = useCallback(\n    (selectedCanister: string) => {\n      dispatch(deleteUserSelectedCanisters(selectedCanister));\n    },\n    [dispatch],\n  );\n\n  return [userSelectedCanisters, setUserSelectedCanistersCallback, deleteUserSelectedCanisterCallback];\n}\n\nexport function useImportedNFTs() {\n  return useAppSelector((state) => state.nft.importedNFTs);\n}\n\nexport function useEXTManager() {\n  const dispatch = useAppDispatch();\n  const importedNFTs = useImportedNFTs();\n\n  const importCall = useCallback(\n    (val: ImportedNFT) => {\n      dispatch(importNFT(val));\n    },\n    [dispatch],\n  );\n\n  const deleteCall = useCallback(\n    (canisterId: string) => {\n      dispatch(deleteNFT({ canisterId }));\n    },\n    [dispatch],\n  );\n\n  return useMemo(\n    () => ({ nfts: importedNFTs, importNFT: importCall, deleteNFT: deleteCall }),\n    [importedNFTs, importCall, deleteCall],\n  );\n}\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRefresh(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_36506_15939)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.0013 3.33268V0.666016L4.66797 3.99935L8.0013 7.33268V4.66602C10.208 4.66602 12.0013 6.45935 12.0013 8.66602C12.0013 10.8727 10.208 12.666 8.0013 12.666C5.79464 12.666 4.0013 10.8727 4.0013 8.66602H2.66797C2.66797 11.6127 5.05464 13.9993 8.0013 13.9993C10.948 13.9993 13.3346 11.6127 13.3346 8.66602C13.3346 5.71935 10.948 3.33268 8.0013 3.33268Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_36506_15939\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRefresh);\nexport default __webpack_public_path__ + \"static/media/refresh.c4b33d449a121c8f8626c6c7d9b9df0f.svg\";\nexport { ForwardRef as ReactComponent };","import { createContext } from \"react\";\nimport BigNumber from \"bignumber.js\";\n\nexport type TokenBalance = { [tokenId: string]: BigNumber };\n\nexport type Page = \"token\" | \"nft\";\n\nexport interface WalletContextProps {\n  refreshTotalBalance?: boolean;\n  setRefreshTotalBalance?: (refreshTotalBalance: boolean) => void;\n  refreshCounter: number;\n  setRefreshCounter: (refreshCounter: number) => void;\n  totalValue: BigNumber;\n  setTotalValue: (tokenId: string, value: BigNumber) => void;\n  transferTo: string;\n  setTransferTo: (transferTo: string) => void;\n  transferAmount: BigNumber;\n  setTransferAmount: (transferAmount: BigNumber) => void;\n  page: Page;\n  setPage: (page: Page) => void;\n  totalUSDBeforeChange: BigNumber;\n  setTotalUSDBeforeChange: (tokenId: string, value: BigNumber) => void;\n}\n\nexport default createContext<WalletContextProps>({} as WalletContextProps);\n","import { useContext, useMemo, useRef } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { formatDollarAmount, principalToAccount } from \"@w2e/utils\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { useSuccessTip } from \"hooks/useTips\";\nimport { useICPPrice } from \"hooks/useUSDPrice\";\nimport { ReactComponent as CopyIcon } from \"assets/icons/Copy.svg\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport Copy, { CopyRef } from \"components/Copy\";\nimport { ReactComponent as RefreshIcon } from \"assets/icons/refresh.svg\";\nimport WalletContext from \"./context\";\n\nexport interface AddressWrapperProps {\n  address: string | undefined;\n  label: string;\n}\n\nexport function AddressWrapper({ address, label }: AddressWrapperProps) {\n  const copyRef = useRef<CopyRef>(null);\n\n  const handleCopy = () => {\n    if (copyRef) {\n      copyRef?.current?.copy();\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        maxWidth: \"286px\",\n        borderRadius: \"8px\",\n        padding: \"12px\",\n        border: \"1px solid #29314F\",\n        height: \"fit-content\",\n        \"@media(max-width: 640px)\": {\n          maxWidth: \"100%\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: \"70px\",\n          height: \"20px\",\n          borderRadius: \"30px\",\n          background: \"#29314F\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography sx={{ fontSize: \"12px\", transform: \"scale(0.9)\" }}>{label}</Typography>\n      </Box>\n\n      <Box sx={{ margin: \"8px 0 0 0\", wordBreak: \"break-all\" }}>\n        <Typography\n          sx={{ fontSize: \"12px\", whiteSpace: \"break-spaces\", cursor: \"pointer\", userSelect: \"none\" }}\n          component=\"span\"\n          onClick={handleCopy}\n        >\n          {address}\n        </Typography>\n        <Box component=\"span\" sx={{ cursor: \"pointer\", margin: \"0 0 0 4px\", color: \"#5669DC\" }} onClick={handleCopy}>\n          <CopyIcon />\n        </Box>\n      </Box>\n\n      <Copy content={address ?? \"\"} hide ref={copyRef} />\n    </Box>\n  );\n}\n\nexport default function WalletAccount() {\n  const icpPrice = useICPPrice();\n\n  const principal = useAccountPrincipal();\n  const [openSuccessTip] = useSuccessTip();\n\n  const {\n    refreshTotalBalance,\n    setRefreshTotalBalance,\n    refreshCounter,\n    setRefreshCounter,\n    totalValue,\n    totalUSDBeforeChange,\n  } = useContext(WalletContext);\n\n  const useTotalICPValue = useMemo(() => {\n    if (icpPrice) return totalValue.dividedBy(icpPrice);\n    return undefined;\n  }, [totalValue, icpPrice]);\n\n  const usdChange = useMemo(() => {\n    if (totalValue.isEqualTo(0) || totalUSDBeforeChange.isEqualTo(0)) return undefined;\n    return `${totalValue.minus(totalUSDBeforeChange).dividedBy(totalUSDBeforeChange).multipliedBy(100).toFixed(2)}%`;\n  }, [totalUSDBeforeChange, totalValue]);\n\n  const usdChangeType = usdChange && usdChange.includes(\"-\") ? \"down\" : \"up\";\n  const USDChangeColor = usdChangeType === \"up\" ? \"#54C081\" : \"#D3625B\";\n\n  const handleRefreshBalance = () => {\n    if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n    setRefreshCounter(refreshCounter + 1);\n    openSuccessTip(\"Refresh Success\");\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        padding: \"0 0 30px 0\",\n        borderBottom: \"1px solid #29314F\",\n        \"@media(max-width: 640px)\": {\n          flexDirection: \"column\",\n          gap: \"20px 0\",\n        },\n      }}\n    >\n      <Box>\n        <Box sx={{ display: \"flex\", gap: \"0 8px\", alignItems: \"center\" }}>\n          <Typography>\n            <Trans>Estimated Balance</Trans>\n          </Typography>\n\n          <RefreshIcon style={{ cursor: \"pointer\" }} onClick={handleRefreshBalance} />\n        </Box>\n\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <Typography component=\"span\" sx={{ fontSize: \"32px\", fontWeight: 600 }} color=\"text.primary\">\n            ≈{formatDollarAmount(totalValue.toString(), 2)}\n          </Typography>\n        </Box>\n\n        <Box sx={{ margin: \"6px 0 0 0\", display: \"flex\", gap: \"0 8px\" }}>\n          <Typography>≈{useTotalICPValue ? useTotalICPValue.toFormat(4) : 0}&nbsp;ICP</Typography>\n          <Typography sx={{ color: USDChangeColor }} component=\"span\">\n            {usdChange ? `${usdChangeType === \"down\" ? \"\" : \"+\"}${usdChange}` : \"--\"}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          gap: \"0 12px\",\n          \"@media(max-width: 640px)\": {\n            flexDirection: \"column\",\n            gap: \"20px 0\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            minWidth: \"286px\",\n            \"@media(max-width: 640px)\": {\n              minWidth: \"100%\",\n            },\n          }}\n        >\n          <AddressWrapper\n            address={principal ? principalToAccount(principal?.toString()) : \"--\"}\n            label={t`Account ID`}\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"286px\",\n            \"@media(max-width: 640px)\": {\n              minWidth: \"100%\",\n            },\n          }}\n        >\n          <AddressWrapper address={principal ? principal.toString() : \"--\"} label={t`Principal ID`} />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import Button from \"@mui/material/Button\";\nimport { Result, useZxing } from \"react-zxing\";\n\ntype QrReaderProps = {\n  onResult: (result: Result) => void;\n  setVisible: (visible: boolean) => void;\n  visible: boolean;\n};\n\nexport default function QRReader(props: QrReaderProps) {\n  const { ref } = useZxing({\n    onResult: props.onResult,\n    paused: !props.visible,\n    constraints: {\n      video: {\n        facingMode: \"environment\",\n      },\n    },\n  });\n\n  if (!props.visible) return null;\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center justify-between p-5 mb-5 border rounded-lg\">\n        <video ref={ref} className=\"w-full h-72\" />\n      </div>\n\n      <Button className=\"w-full m-0\" onClick={() => props.setVisible(false)}>\n        Cancel\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useContext, useMemo } from \"react\";\nimport { Button, Grid, Typography, Box, InputAdornment, IconButton } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  parseTokenAmount,\n  formatTokenAmount,\n  isValidAccount,\n  isValidPrincipal,\n  toSignificantWithGroupSeparator,\n} from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { ICP, W2E } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { tokenTransfer } from \"hooks/token/calls\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount, useAccountPrincipal } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, FilledTextField, NumberFilledTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport MaxButton from \"components/MaxButton\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\nimport { QrCode } from \"@mui/icons-material\";\nimport QRReader from \"components/QRReader\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  weight: string;\n  amount: number;\n};\n\nfunction usePrincipalStandard(tokenId: string, standard: string) {\n  return (standard.includes(\"DIP20\") || standard.includes(\"ICRC\")) && tokenId !== ICP.address;\n}\n\nfunction useAccountStandard(tokenId: string, standard: string) {\n  return !usePrincipalStandard(tokenId, standard);\n}\n\nexport interface TransferModalProps {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n  transferTo?: string;\n}\n\nexport default function TransferModal({ open, onClose, onTransferSuccess, token, transferTo }: TransferModalProps) {\n  const [qrReaderOpen, setQrReaderOpen] = React.useState(false);\n  const [principalFromState, setPrincipalFromState] = React.useState(\"\");\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const principal = useAccountPrincipal() || principalFromState;\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n\n  const { result: balance } = useTokenBalance(token.canisterId, principal);\n  const tokenUSDPrice = useUSDPriceById(token.canisterId);\n\n  const initialValues = {\n    to: transferTo ?? \"\",\n    weight: \"\",\n    amount: 0,\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const handleQrResult = (result: unknown) => {\n    const p = result as any;\n    if (p?.text) {\n      setPrincipalFromState(p.text);\n      handleFieldChange(p.text, \"to\"); // Update the 'to' field value\n    }\n    setQrReaderOpen(false);\n  };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (usePrincipalStandard(token.canisterId, token.standardType)) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to) && !isValidPrincipal(values.to)) return t`Invalid account ID or principal ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (\n      values.amount &&\n      new BigNumber(values.amount ?? 0).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n    )\n      return t`Insufficient balance`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n\n    return undefined;\n  };\n\n  const handleSubmit = async (identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading || !account) return;\n\n      // Calculate the actual transfer amount considering weight\n      const weight = new BigNumber(values.weight ?? 0);\n      const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n\n      const actualTransferAmount = amount.minus(parseTokenAmount(token.transFee, token.decimals));\n\n      if (actualTransferAmount.isLessThanOrEqualTo(0)) {\n        openErrorTip(t`Transfer amount must be greater than transaction fee.`);\n        return;\n      }\n\n      const { status, message } = await tokenTransfer({\n        canisterId: token.canisterId.toString(),\n        to: values.to,\n        amount: formatTokenAmount(\n          new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)),\n          token.decimals,\n        ),\n        from: account,\n        fee: token.transFee,\n        decimals: token.decimals,\n      });\n\n      if (status === \"ok\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP.address || token.canisterId.toString() === W2E.address) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      } else {\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const actualTransferAmount = useMemo(() => {\n    const weight = new BigNumber(values.weight ?? 0);\n    const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n    return amount.isGreaterThan(0) ? amount.minus(parseTokenAmount(token.transFee, token.decimals)).toString() : \"0\";\n  }, [values, token]);\n\n  const addressHelpText = () => {\n    if (\n      (usePrincipalStandard(token.canisterId, token.standardType) && principalString === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) && account === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) &&\n        isValidPrincipal(values.to) &&\n        principalString === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  const handleMax = (event: React.MouseEvent<HTMLParagraphElement>) => {\n    event.stopPropagation();\n\n    if (balance) {\n      handleFieldChange(parseTokenAmount(balance, token.decimals).toString(), \"amount\");\n    }\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`Transfer`}>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\" }}>\n        <FilledTextField value={token.symbol} fullWidth disabled />\n        {!qrReaderOpen && (\n          <FilledTextField\n            value={values.to} // Use principal if available, else use 'to' field value\n            placeholder={\n              usePrincipalStandard(token.canisterId, token.standardType)\n                ? t`Scan QR to get the principal ID`\n                : t`Enter the account ID or principal ID`\n            }\n            onChange={(value: string) => handleFieldChange(value, \"to\")}\n            helperText={addressHelpText()}\n            fullWidth\n            autoComplete=\"To\"\n            multiline\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setQrReaderOpen(true)}>\n                    <QrCode className=\"w-4 h-4\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n        <QRReader\n          setVisible={setQrReaderOpen}\n          visible={qrReaderOpen}\n          onResult={handleQrResult}\n        />\n        <NumberFilledTextField\n          placeholder=\"Enter weight in kilogram\"\n          value={values.weight}\n          onChange={(value: string) => handleFieldChange(value, \"weight\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n          }}\n          autoComplete=\"off\"\n        />\n        <NumberFilledTextField\n          placeholder=\"Enter the amount\"\n          value={values.amount}\n          onChange={(value: string) => handleFieldChange(value, \"amount\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n            decimalScale: token.decimals,\n          }}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Typography color=\"text.primary\">\n                  {tokenUSDPrice && values.amount\n                    ? `~$${toSignificantWithGroupSeparator(\n                      new BigNumber(values.amount).multipliedBy(tokenUSDPrice).toString(),\n                      4,\n                    )}`\n                    : \"--\"}\n                </Typography>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Grid container alignItems=\"center\">\n          <Typography>\n            <Trans>\n              Balance:{\" \"}\n              {`${balance\n                ? new BigNumber(\n                  parseTokenAmount(balance, token.decimals).toFixed(token.decimals > 8 ? 8 : token.decimals),\n                ).toFormat()\n                : \"--\"\n                }`}\n            </Trans>\n          </Typography>\n          <MaxButton\n            sx={{\n              marginLeft: \"6px\",\n            }}\n            onClick={handleMax}\n          />\n        </Grid>\n        <Typography>\n          <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              parseTokenAmount(token.transFee.toString(), token.decimals).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography>\n          <Trans>Actually:</Trans> {toSignificantWithGroupSeparator(actualTransferAmount, 18)}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              new BigNumber(actualTransferAmount).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography color=\"text.warning\">\n          <Trans>Please ensure that the receiving address supports this Token/NFT!</Trans>\n        </Typography>\n        <Identity onSubmit={handleSubmit} fullScreenLoading>\n          {({ submit, loading }: CallbackProps) => (\n            <Button\n              variant=\"contained\"\n              fullWidth\n              color=\"primary\"\n              size=\"large\"\n              disabled={loading || !!errorMessage}\n              onClick={submit}\n            >\n              {errorMessage || (!loading ? <Trans>Confirm</Trans> : <CircularProgress size={26} color=\"inherit\" />)}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { FilledTextField, Modal, TextFieldNumberComponent, MaxButton } from \"components/index\";\nimport { Box, Button, Typography, Grid } from \"@mui/material\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { XTC } from \"constants/tokens\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { parseTokenAmount, formatTokenAmount, numberToString, isValidPrincipal } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { useTips, TIP_LOADING, TIP_SUCCESS, TIP_ERROR } from \"hooks/useTips\";\nimport { useXTCTopUp } from \"hooks/token/dip20\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { ResultStatus } from \"constants/index\";\n\nexport interface XTCTopUpProps {\n  open: boolean;\n  onClose: () => void;\n  onTopUpSuccess?: () => void;\n}\n\nexport interface Values {\n  amount: string | number;\n  canisterId: string;\n}\n\nexport default function XTCTopUp({ open, onClose, onTopUpSuccess }: XTCTopUpProps) {\n  const principal = useAccountPrincipal();\n  const { result: token } = useTokenInfo(XTC.address);\n  const { result: balance, loading } = useTokenBalance(XTC.address, principal);\n\n  const defaultValues = {\n    canisterId: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(defaultValues);\n  const [openTip, closeTip] = useTips();\n\n  const onFieldChange = (value: any, field: string) => {\n    setValues((prevState) => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const XTCTopUp = useXTCTopUp();\n\n  const handleTopUp = async (identity: CallIdentity, { loading }: SubmitLoadingProps) => {\n    if (loading || !token) return;\n\n    onClose();\n    setValues(defaultValues);\n\n    const loadingTipKey = openTip(t`Top-up ${values.amount} XTC to canister ${values.canisterId}`, TIP_LOADING);\n\n    const { status, message } = await XTCTopUp({\n      identity,\n      canisterId: values.canisterId,\n      amount: BigInt(numberToString(formatTokenAmount(values.amount, token.decimals).minus(Number(token.transFee)))),\n    });\n\n    closeTip(loadingTipKey);\n\n    if (status === ResultStatus.OK) {\n      openTip(t`Top-up successfully`, TIP_SUCCESS);\n      if (onTopUpSuccess) onTopUpSuccess();\n    } else {\n      openTip(getLocaleMessage(message) ?? message, TIP_ERROR);\n    }\n  };\n\n  const handleMax = () => {\n    if (balance && token) {\n      setValues((prevState) => ({\n        ...prevState,\n        amount: parseTokenAmount(balance, token.decimals).toNumber(),\n      }));\n    }\n  };\n\n  let errorMessage = \"\";\n  if (\n    values.amount &&\n    token &&\n    new BigNumber(Number(values.amount)).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n  )\n    errorMessage = t`Insufficient balance`;\n  if (!values.amount) errorMessage = t`Enter top-up XTC amount`;\n  if (values.canisterId && !isValidPrincipal(values.canisterId)) errorMessage = t`Invalid canister id`;\n  if (!values.canisterId) errorMessage = t`Enter top-up canister id`;\n\n  return (\n    <Modal open={open} title={t`Top-up a Canister by XTC`} onClose={onClose}>\n      <Box>\n        <FilledTextField\n          label={<Trans>Canister ID</Trans>}\n          onChange={(value) => onFieldChange(value, \"canisterId\")}\n          placeholder={t`Enter a canister ID`}\n        />\n      </Box>\n\n      <Box mt=\"20px\">\n        <FilledTextField\n          label={<Trans>Amount</Trans>}\n          value={values.amount}\n          onChange={(value) => onFieldChange(value, \"amount\")}\n          InputProps={{\n            inputComponent: TextFieldNumberComponent,\n            inputProps: {\n              allowNegative: false,\n              decimalScale: 4,\n              maxLength: 16,\n            },\n          }}\n          placeholder={t`Enter top-up amount`}\n        />\n      </Box>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Balance:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\" sx={{ marginRight: \"4px\" }}>\n          {balance ? parseTokenAmount(balance, token?.decimals).toFormat() : loading ? \"--\" : 0}\n        </Typography>\n        <MaxButton onClick={handleMax} />\n      </Grid>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Fee:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\">\n          {token ? parseTokenAmount(token.transFee, token?.decimals).toFormat() : 0}\n        </Typography>\n      </Grid>\n\n      <Box mt=\"40px\">\n        <Identity onSubmit={handleTopUp}>\n          {({ submit }: CallbackProps) => (\n            <Button size=\"large\" fullWidth variant=\"contained\" onClick={submit} disabled={!!errorMessage}>\n              {errorMessage || <Trans>Submit</Trans>}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useCallback } from \"react\";\nimport { xtc } from \"@w2e/actor\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { Principal } from \"@dfinity/principal\";\nimport { resultFormat } from \"@w2e/utils\";\n\nexport interface XTCTopUpProps {\n  canisterId: string;\n  amount: bigint | number;\n  identity: CallIdentity;\n}\n\nexport function useXTCTopUp() {\n  return useCallback(async ({ canisterId, amount, identity }: XTCTopUpProps) => {\n    return resultFormat<bigint>(\n      await (await xtc(identity)).burn({ canister_id: Principal.fromText(canisterId), amount: BigInt(amount) }),\n    );\n  }, []);\n}\n","import { useState, useContext } from \"react\";\nimport { Button, Grid, TextField, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { parseTokenAmount, isValidAccount } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { ICP_TOKEN_INFO } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, NumberTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport { NFIDRequestTransfer } from \"utils/connector/NF_ID\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  amount: string;\n};\n\nexport default function NFIDTransferModal({\n  open,\n  onClose,\n  onTransferSuccess,\n  token,\n}: {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n}) {\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n\n  const initialValues = {\n    to: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (token.standardType.includes(\"DIP20\")) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to)) return t`Invalid account ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n  };\n\n  const handleSubmit = async (identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading) return;\n\n      const result = await NFIDRequestTransfer({\n        to: values.to,\n        amount: Number(new BigNumber(values.amount).toFixed(8, BigNumber.ROUND_DOWN)),\n      });\n\n      if (result.status === \"SUCCESS\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP_TOKEN_INFO.canisterId) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      }\n\n      if (result.status === \"REJECTED\" || result.status === \"ERROR\") {\n        openErrorTip(getLocaleMessage(result.message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const balanceActuallyToAccount = () => {\n    const amount = new BigNumber(values.amount ?? 0).minus(parseTokenAmount(token.transFee, token.decimals));\n    return amount.isGreaterThan(0) ? amount.toFormat() : 0;\n  };\n\n  const addressHelpText = () => {\n    if (\n      (token.standardType.includes(\"DIP20\") && principalString === values.to) ||\n      (!token.standardType.includes(\"DIP20\") && account === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`NFID Transfer`}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField label={t`Token Symbol`} value={token.symbol} fullWidth disabled />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            label={t`To`}\n            value={values.to}\n            placeholder={token.standardType.includes(\"DIP20\") ? t`Enter the principal ID` : \"Enter the account ID\"}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"to\")}\n            helperText={addressHelpText()}\n            fullWidth\n            autoComplete=\"To\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <NumberTextField\n            label={t`Amount`}\n            type=\"text\"\n            value={values.amount}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"amount\")}\n            fullWidth\n            inputProps={{\n              autocomplete: \"new-password\",\n              form: {\n                autocomplete: \"off\",\n              },\n            }}\n            numericProps={{\n              allowNegative: false,\n              decimalScale: token.decimals,\n            }}\n            autoComplete=\"off\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Actually:</Trans> {balanceActuallyToAccount()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography color=\"text.warning\">\n            <Trans>Please ensure that the receiving address supports this Token/NFT!</Trans>\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Identity onSubmit={handleSubmit} fullScreenLoading>\n            {({ submit, loading }: CallbackProps) => (\n              <Button\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                size=\"large\"\n                disabled={loading || !!errorMessage}\n                onClick={submit}\n              >\n                {errorMessage || (!loading ? (\n                  <Trans>Approve by NFID</Trans>\n                ) : (\n                  <CircularProgress size={26} color=\"inherit\" />\n                ))}\n              </Button>\n            )}\n          </Identity>\n        </Grid>\n      </Grid>\n    </Modal>\n  );\n}\n","import { useRef } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport QRCode from \"../qrcode\";\nimport Modal from \"../modal/index\";\nimport Copy, { CopyRef } from \"../Copy\";\n\nexport interface ReceiveModalProps {\n  open: boolean;\n  onClose: () => void;\n  address: string;\n}\n\nexport function ReceiveModal({ open, onClose, address }: ReceiveModalProps) {\n  const copy = useRef<CopyRef>(null);\n\n  const onConfirm = () => {\n    copy?.current?.copy();\n  };\n\n  return (\n    <Modal\n      title={t`Receive`}\n      open={open}\n      onClose={onClose}\n      showConfirm\n      onConfirm={onConfirm}\n      confirmText={t`Copy Address`}\n    >\n      <Grid container spacing={2}>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <QRCode value={address} />\n          </Grid>\n        </Grid>\n\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                wordBreak: \"break-all\",\n              }}\n            >\n              {address}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Copy ref={copy} content={address} hide />\n    </Modal>\n  );\n}\n","import { useState, useContext, useMemo, useEffect } from \"react\";\nimport { Typography, Box, useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatDollarAmount, parseTokenAmount, mockALinkAndOpen, BigNumber, principalToAccount } from \"@w2e/utils\";\nimport TransferModal from \"components/TokenTransfer/index\";\nimport { NoData, LoadingRow } from \"components/index\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { ICP, Connector, NO_HIDDEN_TOKENS, INFO_URL } from \"constants/index\";\nimport { useAccount } from \"store/global/hooks\";\nimport { t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport WalletContext from \"components/Wallet/context\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { TokenInfo } from \"types/token\";\nimport { useAccountPrincipal, useConnectorType } from \"store/auth/hooks\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport { ckETH, ckBTC, WRAPPED_ICP, ICP_TOKEN_INFO, TOKEN_STANDARD, XTC, } from \"constants/tokens\";\nimport XTCTopUpModal from \"components/XTCTopup/index\";\nimport { useInfoToken } from \"hooks/info/useInfoTokens\";\nimport { useToken } from \"hooks/useCurrency\";\nimport NFIDTransfer from \"components/Wallet/NFIDTransfer\";\nimport { useHistory } from \"react-router-dom\";\nimport { isHouseUserTokenTransactions } from \"utils/index\";\nimport { TokenImage } from \"components/Image/Token\";\nimport { useSNSTokenRootId } from \"hooks/token/useSNSTokenRootId\";\nimport { ReceiveModal } from \"./Receive\";\n\nconst useStyles = makeStyles(() => ({\n  tokenAssets: {\n    fontSize: \"0.6rem\",\n  },\n  walletSymbol: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\ninterface ActionButtonProps {\n  label: string;\n  onClick?: () => void;\n}\n\nfunction ActionButton({ label, onClick }: ActionButtonProps) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        padding: \"7px 12px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: \"#4F5A84\",\n        borderRadius: \"8px\",\n        cursor: \"pointer\",\n      }}\n      onClick={onClick}\n    >\n      <Typography color=\"text.primary\">{label}</Typography>\n    </Box>\n  );\n}\n\nexport const XTCTopUpIcon = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9987 13.334C10.9442 13.334 13.332 10.9462 13.332 8.00065C13.332 5.05513 10.9442 2.66732 7.9987 2.66732C5.05318 2.66732 2.66536 5.05513 2.66536 8.00065C2.66536 10.9462 5.05318 13.334 7.9987 13.334ZM7.9987 14.6673C11.6806 14.6673 14.6654 11.6825 14.6654 8.00065C14.6654 4.31875 11.6806 1.33398 7.9987 1.33398C4.3168 1.33398 1.33203 4.31875 1.33203 8.00065C1.33203 11.6825 4.3168 14.6673 7.9987 14.6673Z\"\n        fill=\"#5669DC\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9678 6.58579L6.55359 8L7.9678 9.41421L9.38201 8L7.9678 6.58579ZM4.66797 8L7.9678 11.2998L11.2676 8L7.9678 4.70017L4.66797 8Z\"\n        fill=\"#5669DC\"\n      />\n    </svg>\n  );\n};\n\ntype ckTOKEN = {\n  id: string;\n  mintPath: string;\n  dissolvePath: string;\n};\n\nconst ckTokens: ckTOKEN[] = [\n  { id: ckBTC.address, mintPath: \"/wallet/ckBTC?type=mint\", dissolvePath: \"/wallet/ckBTC?type=dissolve\" },\n  { id: ckETH.address, mintPath: \"/wallet/ckETH?type=mint\", dissolvePath: \"/wallet/ckETH?type=dissolve\" },\n];\n\nfunction ChainKeyTokenButtons({ ckToken }: { ckToken: ckTOKEN }) {\n  const history = useHistory();\n\n  const handleCKTokenMint = (path: string) => {\n    history.push(path);\n  };\n\n  const handleCKTokenDissolve = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <>\n      <ActionButton label={t`Mint`} onClick={() => handleCKTokenMint(ckToken.mintPath)} />\n      <ActionButton label={t`Dissolve`} onClick={() => handleCKTokenDissolve(ckToken.dissolvePath)} />\n    </>\n  );\n}\n\nconst SWAP_BUTTON_EXCLUDE = [ICP_TOKEN_INFO.canisterId, WRAPPED_ICP.address];\n\nexport interface TokenListItemProps {\n  isHideSmallBalances: boolean;\n  searchValue: string;\n  canisterId: string;\n}\n\nexport function TokenListItem({ canisterId, isHideSmallBalances, searchValue }: TokenListItemProps) {\n  const classes = useStyles();\n  const account = useAccount();\n  const theme = useTheme() as Theme;\n  const principal = useAccountPrincipal();\n\n  const walletType = useConnectorType();\n\n  const history = useHistory();\n\n  const [, currency] = useToken(canisterId);\n\n  const infoToken = useInfoToken(currency?.address);\n\n  const tokenUSDPrice = useMemo(() => {\n    return infoToken?.priceUSD;\n  }, [infoToken]);\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n  const [XTCTopUpShow, setXTCTopUpShow] = useState(false);\n\n  const [refreshInnerCounter, setRefreshInnerCounter] = useState<number>(0);\n\n  const [open, setOpen] = useState(false);\n  const [receiveOpen, setReceiveOpen] = useState(false);\n  const [NFIDTransferOpen, setNFIDTransferOpen] = useState(false);\n\n  const { refreshCounter, setTotalValue, setTotalUSDBeforeChange } = useContext(WalletContext);\n\n  const refreshNumber = useMemo(() => {\n    return refreshInnerCounter + refreshCounter;\n  }, [refreshInnerCounter, refreshCounter]);\n\n  const { result: tokenBalance } = useTokenBalance(canisterId, principal, refreshNumber);\n\n  useEffect(() => {\n    if (\n      tokenInfo &&\n      tokenInfo.decimals !== undefined &&\n      tokenInfo.transFee !== undefined &&\n      tokenBalance &&\n      infoToken\n    ) {\n      setTotalValue(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(infoToken.priceUSD),\n      );\n\n      const usdBeforeChange = new BigNumber(infoToken.priceUSD).div(\n        new BigNumber(infoToken.priceUSDChange).dividedBy(100).plus(1),\n      );\n\n      setTotalUSDBeforeChange(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(usdBeforeChange),\n      );\n    }\n  }, [tokenBalance, infoToken, tokenInfo]);\n\n  const handleCloseModal = async () => {\n    setOpen(false);\n  };\n\n  const handleTransferSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n    handleCloseModal();\n    setNFIDTransferOpen(false);\n  };\n\n  const handleTopUpSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n  };\n\n  const handleTransfer = async () => {\n    setOpen(true);\n  };\n\n  const root_canister_id = useSNSTokenRootId(canisterId);\n\n  const handleToTransactions = () => {\n    if (!tokenInfo || !principal) return;\n\n    const { canisterId, standardType, symbol } = tokenInfo;\n\n    if (symbol === ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(`https://dashboard.internetcomputer.org/account//${account}`, \"TOKEN_TRANSACTIONS\");\n    } else if (root_canister_id) {\n      mockALinkAndOpen(\n        `https://dashboard.internetcomputer.org/sns/${root_canister_id}/account/${principal.toString()}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    } else if (tokenInfo.standardType === TOKEN_STANDARD.ICRC1 || tokenInfo.standardType === TOKEN_STANDARD.ICRC2) {\n      const url = isHouseUserTokenTransactions(tokenInfo.canisterId, principal?.toString());\n      mockALinkAndOpen(url, \"TOKEN_TRANSACTIONS\");\n    } else {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/transactions/${canisterId}/${principal?.toString()}?standard=${standardType}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    }\n  };\n\n  const handleLoadToDetail = (tokenInfo: TokenInfo | undefined) => {\n    if (tokenInfo && tokenInfo.symbol !== ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/details/${tokenInfo?.canisterId}?standard=${tokenInfo?.standardType}`,\n        \"TOKEN_DETAILs\",\n      );\n    }\n  };\n\n  const handleXTCTopUp = () => {\n    setXTCTopUpShow(true);\n  };\n\n  const handleWrappedICP = (value: \"wrap\" | \"unwrap\") => {\n    if (value === \"wrap\") {\n      history.push(\"/swap/v2/wrap?input=icp\");\n      return;\n    }\n\n    history.push(\"/swap/v2/wrap?input=wicp\");\n  };\n\n  const isHidden = useMemo(() => {\n    const hiddenBySmallBalance = isHideSmallBalances && !!tokenBalance && !tokenBalance?.isGreaterThan(0);\n\n    const hiddenBySearchValue = searchValue\n      ? !tokenInfo?.symbol\n        ? true\n        : !tokenInfo?.symbol.toLowerCase().includes(searchValue.toLowerCase())\n      : false;\n\n    if (NO_HIDDEN_TOKENS.includes(canisterId)) return false;\n\n    return hiddenBySmallBalance || hiddenBySearchValue;\n  }, [isHideSmallBalances, tokenBalance, canisterId, searchValue, tokenInfo]);\n\n  const handleToSwap = () => {\n    history.push(`/swap?input=${canisterId}&output=${ICP.address}`);\n  };\n\n  const handleReceive = () => {\n    setReceiveOpen(true);\n  };\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"12px\",\n        background: theme.palette.background.level4,\n        padding: \"20px\",\n        maxWidth: \"100%\",\n        overflow: \"hidden\",\n        ...(isHidden ? { display: \"none\" } : {}),\n        \"@media(max-width: 640px)\": {\n          padding: \"10px\",\n        },\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Box sx={{ display: \"flex\", gap: \"0 10px\" }}>\n          <TokenImage size=\"40px\" logo={tokenInfo?.logo} tokenId={tokenInfo?.canisterId} />\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              className={tokenInfo?.symbol !== ICP_TOKEN_INFO.symbol ? classes.walletSymbol : \"\"}\n              onClick={() => handleLoadToDetail(tokenInfo)}\n              fontWeight={500}\n            >\n              {tokenInfo?.symbol}\n            </Typography>\n            <Typography sx={{ fontSize: \"12px\" }}>{tokenInfo?.name}</Typography>\n          </Box>\n        </Box>\n        <TokenStandardLabel standard={tokenInfo?.standardType} />\n      </Box>\n\n      <Box sx={{ display: \"flex\", margin: \"12px 0 0 0\" }}>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Balance</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {parseTokenAmount(tokenBalance, tokenInfo?.decimals).toFormat()}\n          </Typography>\n          <Typography className={classes.tokenAssets}>\n            {tokenUSDPrice && tokenBalance\n              ? `≈\n              ${formatDollarAmount(\n                parseTokenAmount(tokenBalance, tokenInfo?.decimals)\n                  .multipliedBy(tokenUSDPrice)\n                  .toString(),\n                4,\n              )}`\n              : \"--\"}\n          </Typography>\n        </Box>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Price</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {tokenUSDPrice ? formatDollarAmount(tokenUSDPrice) : \"--\"}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        sx={{ margin: \"24px 0 0 0\", display: \"flex\", justifyContent: \"flex-end\", gap: \"10px 10px\", flexWrap: \"wrap\" }}\n      >\n        {SWAP_BUTTON_EXCLUDE.includes(canisterId) ? null : <ActionButton label=\"Swap\" onClick={handleToSwap} />}\n\n        <ActionButton label=\"Send\" onClick={handleTransfer} />\n        <ActionButton label=\"Receive\" onClick={handleReceive} />\n        <ActionButton label=\"Transactions\" onClick={handleToTransactions} />\n\n        {canisterId === ICP.address && walletType === Connector.NFID ? (\n          <ActionButton label={t`NFID Transfer`} onClick={() => setNFIDTransferOpen(true)} />\n        ) : null}\n\n        {tokenInfo?.canisterId === XTC.address ? <ActionButton label={t`Top-up`} onClick={handleXTCTopUp} /> : null}\n\n        {tokenInfo?.canisterId === WRAPPED_ICP.address ? (\n          <>\n            <ActionButton label={t`Unwrap`} onClick={() => handleWrappedICP(\"unwrap\")} />\n            <ActionButton label={t`Wrap`} onClick={() => handleWrappedICP(\"wrap\")} />\n          </>\n        ) : null}\n\n        {ckTokens\n          .filter((ele) => ele.id === tokenInfo?.canisterId)\n          .map((ele) => (\n            <ChainKeyTokenButtons key={ele.id} ckToken={ele} />\n          ))}\n      </Box>\n\n      {open && !!tokenInfo ? (\n        <TransferModal\n          open={open}\n          onClose={handleCloseModal}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {NFIDTransferOpen && !!tokenInfo ? (\n        <NFIDTransfer\n          open={NFIDTransferOpen}\n          onClose={() => setNFIDTransferOpen(false)}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {XTCTopUpShow ? (\n        <XTCTopUpModal open={XTCTopUpShow} onClose={() => setXTCTopUpShow(false)} onTopUpSuccess={handleTopUpSuccess} />\n      ) : null}\n\n      {receiveOpen ? (\n        <ReceiveModal\n          open={receiveOpen}\n          onClose={() => setReceiveOpen(false)}\n          address={\n            !principal\n              ? \"\"\n              : tokenInfo?.standardType === TOKEN_STANDARD.EXT || tokenInfo?.canisterId === ICP.address\n                ? principalToAccount(principal.toString())\n                : principal.toString()\n          }\n        />\n      ) : null}\n    </Box>\n  );\n}\n\nexport interface TokenListProps {\n  list: string[];\n  loading?: boolean;\n  isHideSmallBalances: boolean;\n  searchValue: string;\n}\n\nexport default function TokenList({ list, loading, isHideSmallBalances, searchValue }: TokenListProps) {\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr\",\n        gap: \"20px\",\n        \"@media(max-width: 1088px)\": {\n          gridTemplateColumns: \"1fr 1fr\",\n          gap: \"12px 12px\",\n        },\n        \"@media(max-width: 640px)\": {\n          gridTemplateColumns: \"1fr\",\n          gap: \"12px 0\",\n        },\n      }}\n    >\n      {list.map((canisterId) => {\n        return (\n          <TokenListItem\n            key={canisterId}\n            canisterId={canisterId}\n            isHideSmallBalances={isHideSmallBalances}\n            searchValue={searchValue}\n          />\n        );\n      })}\n\n      {list.length === 0 && !loading ? <NoData /> : null}\n\n      {loading ? (\n        <LoadingRow>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRow>\n      ) : null}\n    </Box>\n  );\n}\n","var _rect, _rect2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 9,\n    y: 15,\n    width: 14,\n    height: 2,\n    rx: 1,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 17,\n    y: 9,\n    width: 14,\n    height: 2,\n    rx: 1,\n    transform: \"rotate(90 17 9)\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.1275c2ddf891660b4f992c81a6422aa9.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useMemo } from \"react\";\nimport { Button, Grid, Box, Typography, InputAdornment, useTheme, useMediaQuery } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useWalletCatchTokenIds, useSaveCacheTokenCallback, useDeleteCacheTokenCallback } from \"store/wallet/hooks\";\nimport { IconSearch } from \"@tabler/icons\";\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { useImportedTokens } from \"store/token/cache/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport ImportToken from \"components/Wallet/ImportToken\";\nimport { NoData, TextButton, Modal, FilledTextField } from \"components/index\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { TokenImage } from \"@w2e/ui\";\n\nexport function TokenItem({ canisterId }: { canisterId: string }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const walletCatchTokenIds = useWalletCatchTokenIds() ?? [];\n  const addToken = useSaveCacheTokenCallback();\n  const deleteToken = useDeleteCacheTokenCallback();\n\n  const handleAddToken = (canisterId: string) => {\n    addToken([canisterId]);\n  };\n\n  const handleDeleteToken = (canisterId: string) => {\n    deleteToken([canisterId]);\n  };\n\n  const hasBeenAdded = (canisterId: string) => {\n    return !!walletCatchTokenIds.find((tokenId) => tokenId === canisterId);\n  };\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        gridTemplateColumns: \"190px 1fr 80px\",\n        gap: \"0 20px\",\n        height: \"73px\",\n        alignItems: \"center\",\n        borderTop: \"1px solid rgba(189, 200, 240, 0.082)\",\n      }}\n    >\n      <Grid container alignItems=\"center\">\n        <TokenImage logo={tokenInfo?.logo} size=\"32px\" />\n\n        <Grid ml={1} item xs>\n          <Grid container alignItems=\"center\" mr=\"5px\">\n            <Grid\n              item\n              xs\n              sx={{\n                width: \"80px\",\n                overflow: \"hidden\",\n              }}\n            >\n              <Typography>{tokenInfo?.symbol}</Typography>\n              <Typography\n                fontSize={12}\n                color=\"textSecondary\"\n                sx={{\n                  width: \"100%\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                {tokenInfo?.name}\n              </Typography>\n            </Grid>\n\n            <TokenStandardLabel standard={tokenInfo?.standardType} />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Typography>{matchDownSM ? \"\" : tokenInfo?.canisterId}</Typography>\n\n      <>\n        {DISPLAY_IN_WALLET_FOREVER.includes(canisterId) ? null : hasBeenAdded(canisterId) ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<HorizontalRuleIcon fontSize=\"small\" />}\n            onClick={() => handleDeleteToken(canisterId)}\n          >\n            <Trans>Delete</Trans>\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<AddIcon fontSize=\"small\" />}\n            onClick={() => handleAddToken(canisterId)}\n          >\n            <Trans>Add</Trans>\n          </Button>\n        )}\n      </>\n    </Box>\n  );\n}\n\nexport default function AddTokenModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [queryValue, setQueryValue] = useState(\"\");\n  const [importTokenShow, setImportTokenShow] = useState(false);\n\n  const globalTokenList = useGlobalTokenList();\n  const importedTokens = useImportedTokens();\n\n  const handleSearch = async (values: string) => {\n    setQueryValue(values);\n  };\n\n  const tokens = useMemo(() => {\n    const iTokens = Object.keys(importedTokens ?? [])\n      .filter((canisterId) => !globalTokenList.find((token) => token.canisterId === canisterId))\n      .map((canisterId) => {\n        const token = importedTokens[canisterId];\n\n        return {\n          canisterId,\n          name: token.name,\n          symbol: token.symbol,\n        };\n      });\n\n    const _tokens = globalTokenList\n      .filter((token) => !token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n      .map((token) => ({\n        canisterId: token.canisterId,\n        name: token.name,\n        symbol: token.symbol,\n      }));\n\n    const tokens = [...iTokens, ..._tokens];\n\n    if (queryValue) {\n      return tokens.filter(\n        (token) =>\n          token.name.toLowerCase().includes(queryValue.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(queryValue.toLowerCase()),\n      );\n    }\n\n    return tokens;\n  }, [importedTokens, globalTokenList, queryValue]);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={onClose}\n        title={t`Add Tokens`}\n        dialogProps={{\n          sx: {\n            \"& .MuiPaper-root\": {\n              width: \"700px\",\n              maxWith: \"700px\",\n            },\n          },\n        }}\n      >\n        <Box>\n          <FilledTextField\n            contained\n            background={theme.palette.background.level1}\n            borderRadius=\"12px\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconSearch stroke={1.5} size=\"1rem\" />\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n            size={matchDownSM ? \"small\" : undefined}\n            placeholder={t`Search token`}\n            onChange={handleSearch}\n          />\n        </Box>\n\n        <Box mt=\"16px\">\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: \"190px 1fr 80px\",\n              gap: \"0 20px\",\n              height: \"57px\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography>\n              <Trans>Token</Trans>\n            </Typography>\n            <Typography sx={{ \"@media (max-width: 540px)\": { display: \"none\" } }}>\n              <Trans>Canister ID</Trans>\n            </Typography>\n            <Typography>&nbsp;</Typography>\n          </Box>\n\n          <Box\n            sx={{\n              maxHeight: \"260px\",\n              overflow: \"auto\",\n              \"@media (max-width: 540px)\": { maxHeight: \"290px\" },\n            }}\n          >\n            {tokens.map((token, index) => (\n              <TokenItem key={`${token.canisterId}-${index}}`} canisterId={token.canisterId} />\n            ))}\n          </Box>\n\n          {tokens.length === 0 ? (\n            <Box sx={{ borderTop: \"1px solid rgba(189, 200, 240, 0.082)\" }}>\n              <NoData />\n            </Box>\n          ) : null}\n        </Box>\n\n        <Grid\n          container\n          justifyContent=\"center\"\n          sx={{\n            paddingTop: \"20px\",\n            borderTop: \"1px solid rgba(81, 81, 81, 1)\",\n            borderColor: \"rgba(189, 200, 240, 0.082)\",\n          }}\n        >\n          <TextButton onClick={() => setImportTokenShow(true)}>\n            <Trans>Import Token</Trans>\n          </TextButton>\n        </Grid>\n      </Modal>\n\n      {importTokenShow ? (\n        <ImportToken\n          open={importTokenShow}\n          onClose={() => setImportTokenShow(false)}\n          onImportSuccessfully={() => onClose()}\n        />\n      ) : null}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { ReactComponent as AddIcon } from \"assets/icons/add.svg\";\nimport AddTokenModal from \"./modal\";\n\nexport default function AddToken() {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <AddIcon style={{ cursor: \"pointer\" }} onClick={() => setModalVisible(true)} />\n      {modalVisible ? <AddTokenModal open={modalVisible} onClose={() => setModalVisible(false)} /> : null}\n    </>\n  );\n}\n","import { useMemo, useContext } from \"react\";\nimport { Typography, Box } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport walletContext from \"./context\";\n\ntype Item = {\n  name: string;\n  pageName: \"token\" | \"nft\";\n};\n\nconst DISPLAY_ITEMS: Item[] = [\n  {\n    name: t`Token`,\n    pageName: \"token\",\n  },\n  {\n    name: t`NFT`,\n    pageName: \"nft\",\n  },\n];\n\nexport default function WalletPageToggle() {\n  const { page, setPage } = useContext(walletContext);\n\n  const currentDisplay = useMemo(() => {\n    return DISPLAY_ITEMS.filter((item) => item.pageName === page)[0].pageName;\n  }, [page]);\n\n  const handleToggle = (item: Item) => {\n    setPage(item.pageName);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 24px\", alignItems: \"center\" }}>\n      {DISPLAY_ITEMS.map((item) => (\n        <Typography\n          key={item.pageName}\n          variant=\"h3\"\n          color={currentDisplay === item.pageName ? \"textPrimary\" : \"\"}\n          onClick={() => handleToggle(item)}\n          sx={{ cursor: \"pointer\" }}\n        >\n          {item.name}\n        </Typography>\n      ))}\n    </Box>\n  );\n}\n","import { Typography, Box, Checkbox, useMediaQuery, useTheme } from \"@mui/material\";\nimport AddToken from \"components/Wallet/AddToken\";\nimport WalletPageToggle from \"components/Wallet/PageToggle\";\nimport { Trans } from \"@lingui/macro\";\n\ninterface HideSmallBalanceProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  isHideSmallBalances: boolean;\n}\n\nfunction HideSmallBalance({ isHideSmallBalances, onHideSmallBalances }: HideSmallBalanceProps) {\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\" }}>\n      <Checkbox\n        checked={isHideSmallBalances}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => onHideSmallBalances(event.target.checked)}\n      />\n      <Typography sx={{ cursor: \"pointer\" }} onClick={() => onHideSmallBalances(!isHideSmallBalances)}>\n        <Trans>Hide Zero Balance</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface TokenHeaderProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  onSearchValue: (value: string) => void;\n  isHideSmallBalances: boolean;\n}\n\nexport default function TokenListHeader({ onHideSmallBalances, isHideSmallBalances }: TokenHeaderProps) {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <WalletPageToggle />\n\n        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 10px\" }}>\n          {!matchDownSM ? (\n            <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n          ) : null}\n\n          <AddToken />\n        </Box>\n      </Box>\n      {matchDownSM ? (\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport TokenListTable from \"components/Wallet/TokenListTable\";\nimport TokenListHeader from \"components/Wallet/TokenListHeader\";\nimport {\n  ICP_METADATA,\n  WRAPPED_ICP_METADATA,\n  W2E_METADATA,\n  WPL_METADATA,\n  WPR_METADATA,\n  WG_METADATA,\n  WM_METADATA,\n  WOX_METADATA,\n  EW_METADATA\n} from \"constants/tokens\";\nimport { NETWORK, network } from \"constants/server\";\nimport { useWalletCatchTokenIds, useUpdateHideSmallBalanceManager } from \"store/wallet/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\n\nexport default function WalletTokenList() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isHideSmallBalances, setIsHideSmallBalances] = useUpdateHideSmallBalanceManager();\n  const walletCacheTokenIds = useWalletCatchTokenIds();\n\n  const globalTokenList = useGlobalTokenList();\n\n  const tokens = useMemo(() => {\n    let tokenIds = [\n      ICP_METADATA.canisterId.toString(),\n      WRAPPED_ICP_METADATA.canisterId.toString(),\n      W2E_METADATA.canisterId.toString(),\n      WPL_METADATA.canisterId.toString(),\n      WPR_METADATA.canisterId.toString(),\n      WG_METADATA.canisterId.toString(),\n      WM_METADATA.canisterId.toString(),\n      WOX_METADATA.canisterId.toString(),\n      EW_METADATA.canisterId.toString(),\n    ];\n\n    if (network === NETWORK.IC) {\n      tokenIds = [\n        ...tokenIds,\n        ...globalTokenList\n          .filter((token) => !!token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n          .sort((a, b) => {\n            if (a.rank < b.rank) return -1;\n            if (a.rank > b.rank) return 1;\n            return 0;\n          })\n          .map((token) => token.canisterId),\n      ];\n    }\n\n    return [...new Set([...tokenIds, ...walletCacheTokenIds.filter((id) => !DISPLAY_IN_WALLET_FOREVER.includes(id))])];\n  }, [walletCacheTokenIds, globalTokenList]);\n\n  const handleSearchValue = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const hideSmallBalances = (hideOrNot: boolean) => {\n    setIsHideSmallBalances(hideOrNot);\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\", overflow: \"auto hidden\" }}>\n        <TokenListHeader\n          onHideSmallBalances={hideSmallBalances}\n          onSearchValue={handleSearchValue}\n          isHideSmallBalances={isHideSmallBalances}\n        />\n\n        <TokenListTable isHideSmallBalances={isHideSmallBalances} list={tokens} searchValue={searchValue} />\n      </Box>\n    </>\n  );\n}\n","var _path, _rect, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgImport(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 12V12C8 9.79086 9.79086 8 12 8H20C22.2091 8 24 9.79086 24 12V20C24 22.2091 22.2091 24 20 24H12C9.79086 24 8 22.2091 8 20V20\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 7,\n    y: 15,\n    width: 12,\n    height: 2,\n    rx: 1,\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 13L19.5 16L16.5 19\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgImport);\nexport default __webpack_public_path__ + \"static/media/import.9fd677d6205feabac1cd1c7dc9640e1d.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useMemo } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Avatar,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  InputAdornment,\n  useTheme,\n  useMediaQuery,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\nimport Modal from \"components/modal/index\";\nimport { IconSearch } from \"@tabler/icons\";\nimport { useSelectedCanistersManager } from \"store/nft/hooks\";\nimport { useNFTCanisterList, useCanisterLogo } from \"hooks/nft/useNFTCalls\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { OFFICIAL_CANISTER_IDS } from \"constants/index\";\nimport { isICPSwapOfficial } from \"utils\";\nimport type { NFTControllerInfo } from \"@w2e/types\";\nimport { Theme } from \"@mui/material/styles\";\nimport { NoData, FilledTextField } from \"components/index\";\n\nexport function CollectionInfoItem({ data }: { data: NFTControllerInfo }) {\n  const { result: logo } = useCanisterLogo(data.cid);\n\n  const [userSelectedCanisters, setUserSelectedCanisters, deleteUserSelectedCanister] = useSelectedCanistersManager();\n\n  const hasBeenAdded = (canister: NFTControllerInfo) => {\n    return (\n      !!userSelectedCanisters.find((canisterId) => canisterId === canister?.cid) ||\n      OFFICIAL_CANISTER_IDS.includes(canister?.cid)\n    );\n  };\n\n  const handleAddNFTCanister = (canisterId: string) => {\n    setUserSelectedCanisters([canisterId]);\n  };\n\n  const handleDeleteNFTCanister = (canisterId: string) => {\n    deleteUserSelectedCanister(canisterId);\n  };\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Grid container alignItems=\"center\">\n          <Avatar src={logo ?? \"\"}>&nbsp;</Avatar>\n          <Grid\n            ml={1}\n            item\n            xs\n            sx={{\n              width: \"120px\",\n              overflow: \"hidden\",\n            }}\n          >\n            <Typography\n              fontSize={12}\n              color=\"textSecondary\"\n              sx={{\n                width: \"100%\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {data.name}\n            </Typography>\n          </Grid>\n        </Grid>\n      </TableCell>\n      <TableCell>\n        <Typography>{data.cid?.toString()}</Typography>\n      </TableCell>\n      <TableCell>\n        {!isICPSwapOfficial(data.owner) ? (\n          hasBeenAdded(data) ? (\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              startIcon={<HorizontalRuleIcon />}\n              onClick={() => handleDeleteNFTCanister(data.cid)}\n            >\n              <Trans>Delete</Trans>\n            </Button>\n          ) : (\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              startIcon={<AddIcon />}\n              onClick={() => handleAddNFTCanister(data.cid)}\n            >\n              <Trans>Add</Trans>\n            </Button>\n          )\n        ) : null}\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default function AddNFTCanisterModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const { result } = useNFTCanisterList(0, 1000);\n  const { content } = result ?? { content: [] as NFTControllerInfo[] };\n\n  const list = useMemo(() => {\n    return content.filter((item) =>\n      !searchValue ? true : item.name?.toLowerCase()?.includes(searchValue?.toLowerCase()) || item.cid === searchValue,\n    );\n  }, [searchValue, content]);\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      title={t`Add NFTs`}\n      dialogProps={{\n        sx: {\n          \"& .MuiPaper-root\": {\n            width: \"700px\",\n            maxWith: \"700px\",\n          },\n        },\n      }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FilledTextField\n            contained\n            borderRadius=\"12px\"\n            background={theme.palette.background.level1}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconSearch stroke={1.5} size=\"1rem\" />\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n            size={matchDownSM ? \"small\" : undefined}\n            placeholder=\"Search canister\"\n            onChange={setSearchValue}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer style={{ maxHeight: \"400px\" }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Trans>Name</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Address</Trans>\n                  </TableCell>\n                  <TableCell>&nbsp;</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {list.map((item, index) => (\n                  <CollectionInfoItem key={`${item.cid}-${index}`} data={item} />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {list.length === 0 ? <NoData /> : null}\n        </Grid>\n      </Grid>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { ReactComponent as AddIcon } from \"assets/icons/add.svg\";\nimport AddNFTCanisterModal from \"./Modal\";\n\nexport default function AddNFTCanister() {\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n\n  return (\n    <>\n      <AddIcon style={{ cursor: \"pointer\" }} onClick={() => setModalVisible(true)} />\n      {modalVisible && <AddNFTCanisterModal open={modalVisible} onClose={() => setModalVisible(false)} />}\n    </>\n  );\n}\n","export enum NFT_STANDARDS {\n  EXT = \"EXT\",\n}\n","import { useEffect, useState } from \"react\";\nimport Modal from \"components/modal/index\";\nimport { Trans, t } from \"@lingui/macro\";\nimport type { EXTCollection } from \"@w2e/types\";\nimport { NFT_STANDARDS } from \"@w2e/constants\";\nimport { FilledTextField } from \"components/index\";\nimport { useEXTAllCollections } from \"@w2e/hooks\";\nimport { Button, Box } from \"@mui/material\";\nimport { isValidPrincipal } from \"@w2e/utils\";\nimport { useEXTManager } from \"store/nft/hooks\";\n\nexport const Standards = [{ label: \"EXT\", value: NFT_STANDARDS.EXT }];\n\nexport interface Value {\n  id: string;\n  standard: string;\n}\n\nexport function WarningIcon() {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_25889_76502)\">\n        <path\n          d=\"M8.00196 10.9668C8.44927 10.9668 8.82422 11.3417 8.82422 11.7891C8.82422 12.2364 8.44927 12.6113 8.00196 12.6113C7.57109 12.6113 7.1797 12.2364 7.19943 11.8088C7.1797 11.3385 7.55136 10.9668 8.00196 10.9668Z\"\n          fill=\"#B79C4A\"\n        />\n        <path\n          d=\"M0.389341 13.8799C-0.127039 12.9885 -0.130329 11.9262 0.382763 11.0381L5.53341 2.11824C6.04321 1.22033 6.96415 0.6875 7.99691 0.6875C9.02967 0.6875 9.9506 1.22361 10.4604 2.11495L15.6176 11.0447C16.1307 11.9426 16.1274 13.0116 15.6078 13.9029C15.0947 14.7844 14.177 15.3139 13.1508 15.3139H2.86271C1.83323 15.3139 0.909011 14.7778 0.389341 13.8799ZM1.50762 13.2352C1.79377 13.7286 2.30028 14.0213 2.86599 14.0213H13.1541C13.7133 14.0213 14.2165 13.7352 14.4961 13.2517C14.7789 12.7616 14.7822 12.1761 14.4994 11.6828L9.34213 2.75631C9.06256 2.26624 8.56263 1.97681 7.99691 1.97681C7.43448 1.97681 6.93126 2.26953 6.65169 2.7596L1.49775 11.6861C1.22147 12.1663 1.22476 12.7451 1.50762 13.2352Z\"\n          fill=\"#B79C4A\"\n        />\n        <path\n          d=\"M8.20506 5.19314C8.59645 5.30496 8.83984 5.66018 8.83984 6.09105C8.82011 6.35088 8.80366 6.614 8.78393 6.87384C8.72802 7.86384 8.6721 8.83411 8.61619 9.82411C8.59645 10.1596 8.33662 10.403 8.00114 10.403C7.66565 10.403 7.40253 10.1432 7.38609 9.80438C7.38609 9.60046 7.38608 9.41298 7.36635 9.20577C7.33017 8.57099 7.2907 7.9362 7.25452 7.30141C7.23479 6.89028 7.19861 6.47915 7.17887 6.06802C7.17887 5.92001 7.19861 5.78845 7.25452 5.65689C7.42226 5.28852 7.81366 5.10104 8.20506 5.19314Z\"\n          fill=\"#B79C4A\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_25889_76502\">\n          <rect width=\"16\" height=\"16\" fill=\"white\" transform=\"matrix(-1 0 0 1 16 0)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\nexport function ImportNFTCanisterModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n  const [step, setStep] = useState(0);\n  const [metadata, setMetadata] = useState<null | undefined | EXTCollection>(null);\n  const [values, setValues] = useState<Value>({ standard: NFT_STANDARDS.EXT } as Value);\n  const [riskWarning, setRiskWarning] = useState(false);\n\n  const { result: extAllCollections } = useEXTAllCollections();\n\n  const { nfts, importNFT } = useEXTManager();\n\n  const handleValueChange = (value: any, filed: string) => {\n    setStep(0);\n    setMetadata(null);\n    setRiskWarning(false);\n\n    setValues({\n      ...values,\n      [filed]: value,\n    });\n  };\n\n  const handleImport = async () => {\n    if (!metadata) return;\n    importNFT({ canisterId: values.id, standard: values.standard as NFT_STANDARDS });\n    onClose();\n  };\n\n  useEffect(() => {\n    if (values.id && extAllCollections) {\n      const metadata = extAllCollections.find((e) => e.id === values.id);\n      setMetadata(metadata);\n    }\n  }, [extAllCollections, values.id]);\n\n  const isExisted = (id: string | null | undefined) => {\n    if (!id) return false;\n\n    if (id && nfts && nfts.length > 0) {\n      if (nfts.find((ele) => ele.canisterId === id)) return true;\n    }\n\n    return false;\n  };\n\n  let error = \"\";\n  if (values.id && isValidPrincipal(values.id) && isExisted(values.id)) error = t`The token exists`;\n  if (values.id && !isValidPrincipal(values.id)) error = t`Invalid canister id`;\n  if (values.id && !!extAllCollections?.length && !extAllCollections.find((e) => e.id === values.id))\n    error = t`Non-existent canister id `;\n  if (!values.id) error = t`Enter the canister id`;\n  if (!values.standard) error = t`Select the token standard`;\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      title={t`Import NFT`}\n      dialogProps={{\n        sx: {\n          \"& .MuiPaper-root\": {\n            width: \"700px\",\n            maxWith: \"700px\",\n          },\n        },\n      }}\n    >\n      <Box>\n        <FilledTextField\n          label={t`NFT Standard`}\n          select\n          menus={Standards}\n          placeholder={t`Select the NFT standard`}\n          onChange={(value) => handleValueChange(value, \"standard\")}\n          value={values.standard}\n        />\n      </Box>\n\n      <Box mt=\"30px\">\n        <FilledTextField\n          label={t`Canister ID`}\n          placeholder={t`Enter the canister id`}\n          onChange={(value) => handleValueChange(value, \"id\")}\n          value={values.id}\n        />\n      </Box>\n\n      {/* {!checkFailed && metadata ? (\n        <Box mt=\"40px\">\n          <Grid container>\n            <Avatar sx={{ width: \"48px\", height: \"48px\", marginRight: \"12px\" }} src={metadata?.avatar ?? \"\"}>\n              &nbsp;\n            </Avatar>\n            <Grid item xs>\n              <Grid container alignItems=\"center\">\n                <Typography fontSize=\"16px\" fontWeight=\"500\" component=\"span\" color=\"#ffffff\">\n                  ({metadata.name})\n                </Typography>\n                <Grid item xs ml=\"8px\">\n                  <TokenStandardLabel standard={values.standard} />\n                </Grid>\n              </Grid>\n              <Typography sx={{ marginTop: \"8px\" }}>{values.id}</Typography>\n              <Box mt=\"10px\">\n                <TextButton link={`${INFO_URL}/token/details/${values.id}`}>\n                  <Trans>View On Info</Trans>\n                </TextButton>\n              </Box>\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            mt=\"24px\"\n            sx={{\n              background: \"rgba(183, 156, 74, 0.2)\",\n              border: \"1px solid #B79C4A\",\n              borderRadius: \"12px\",\n              padding: \"16px 14px\",\n            }}\n          >\n            <Box sx={{ position: \"relative\", top: \"5px\" }}>\n              <WarningIcon />\n            </Box>\n            <Grid item xs ml=\"16px\">\n              <Typography color=\"#B79C4A\" sx={{ lineHeight: \"23px\" }}>\n                <Trans>\n                  Anyone can create a token on Internet Computer with any name and LOGO, including creating fake\n                  versions of existing tokens and tokens that claim to represent projects that do not have a token.\n                </Trans>\n              </Typography>\n\n              <Typography color=\"#B79C4A\" mt=\"20px\" sx={{ lineHeight: \"23px\" }}>\n                <Trans>\n                  These risks are always present. If you purchase these fake tokens, it may result in a loss of assets.\n                  Please DYOR before investing!\n                </Trans>\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid container alignItems=\"center\" mt=\"24px\">\n            <Checkbox\n              checked={riskWarning}\n              onChange={({ target: { checked } }) => {\n                setRiskWarning(checked);\n              }}\n              sx={{\n                padding: \"0\",\n              }}\n            />\n\n            <Grid item xs ml=\"4px\">\n              <Typography sx={{ cursor: \"pointer\" }} onClick={() => setRiskWarning(!riskWarning)}>\n                <Trans>I have read the risk warning carefully and agree to take the risk myself</Trans>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      ) : null} */}\n\n      <Box mt=\"30px\">\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          fullWidth\n          disabled={!!error || (!riskWarning && step === 1)}\n          onClick={handleImport}\n        // startIcon={loading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n        >\n          {error || (step === 1 ? <Trans>Confirm</Trans> : <Trans>Import</Trans>)}\n        </Button>\n      </Box>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { ReactComponent as ImportIcon } from \"assets/icons/import.svg\";\nimport { ImportNFTCanisterModal } from \"./Modal\";\n\nexport function ImportEXTNft() {\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n\n  return (\n    <>\n      <ImportIcon style={{ cursor: \"pointer\" }} onClick={() => setModalVisible(true)} />\n      {modalVisible && <ImportNFTCanisterModal open={modalVisible} onClose={() => setModalVisible(false)} />}\n    </>\n  );\n}\n","import { Box } from \"@mui/material\";\nimport WalletPageToggle from \"components/Wallet/PageToggle\";\nimport AddNFTCanister from \"./AddNFTCanister\";\nimport { ImportEXTNft } from \"./ImportEXTNFT\";\n\nexport default function NFTListHeader() {\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <WalletPageToggle />\n\n      <Box\n        sx={{\n          display: \"flex\",\n          gap: \"0 10px\",\n        }}\n      >\n        <ImportEXTNft />\n        <AddNFTCanister />\n      </Box>\n    </Box>\n  );\n}\n","import { useMemo, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Box, Typography, Avatar, useTheme } from \"@mui/material\";\nimport NFTListHeader from \"components/Wallet/NFTListHeader\";\nimport { useAccount } from \"store/global/hooks\";\nimport NoData from \"components/no-data\";\nimport { isICPSwapOfficial } from \"utils/index\";\nimport { useSelectedCanistersManager, useEXTManager } from \"store/nft/hooks\";\nimport { useCanisterUserNFTCount, useNFTCanisterList, useCanisterLogo } from \"hooks/nft/useNFTCalls\";\nimport { Theme } from \"@mui/material/styles\";\nimport type { NFTControllerInfo, EXTCollection, ExtNft } from \"@w2e/types\";\nimport Loading from \"components/Loading/Static\";\nimport WalletContext from \"components/Wallet/context\";\nimport { useEXTAllCollections, useExtUserNFTs } from \"@w2e/hooks\";\n\nconst ICPSwapPositionNFTs = [\n  \"jwh2l-aqaaa-aaaan-qatdq-cai\",\n  // \"brx5n-xqaaa-aaaan-qanqa-cai\",\n  // \"4lnl6-hqaaa-aaaag-qblla-cai\",\n];\n\nexport interface NFTCardUIProps {\n  number: number | string | undefined;\n  name: string | undefined;\n  src: string | undefined;\n  onClick?: () => void;\n}\n\nfunction NFTCardUI({ number, name, src, onClick }: NFTCardUIProps) {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Box\n      sx={{\n        background: theme.palette.background.level4,\n        borderRadius: \"12px\",\n        padding: \"20px\",\n        \"@media(max-width: 640px)\": {\n          padding: \"15px\",\n        },\n      }}\n      onClick={onClick}\n    >\n      <Grid\n        container\n        alignItems=\"center\"\n        sx={{\n          cursor: \"pointer\",\n        }}\n      >\n        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 16px\", overflow: \"hidden\" }}>\n          <Avatar style={{ width: \"60px\", height: \"60px\" }} src={src ?? \"\"}>\n            &nbsp;\n          </Avatar>\n\n          <Box sx={{ overflow: \"hidden\" }}>\n            <Typography\n              color=\"textPrimary\"\n              fontSize=\"16px\"\n              fontWeight={600}\n              sx={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {name}\n            </Typography>\n            <Typography\n              sx={{\n                margin: \"10px 0 0 0\",\n                display: \"inline-flex\",\n                padding: \"0px 12px\",\n                alignItems: \"center\",\n                gap: \"10px\",\n                borderRadius: \"40px\",\n                background: \"#4F5A84\",\n                color: \"#ffffff\",\n                fontWeight: 500,\n              }}\n            >\n              {number === undefined ? \"--\" : number}\n            </Typography>\n          </Box>\n        </Box>\n      </Grid>\n    </Box>\n  );\n}\n\nexport interface NFTCardProps {\n  canister: NFTControllerInfo;\n}\n\nexport function NFTCanisterCard({ canister }: NFTCardProps) {\n  const account = useAccount();\n  const history = useHistory();\n\n  const { refreshCounter } = useContext(WalletContext);\n  const { result: count } = useCanisterUserNFTCount(canister.cid, account, refreshCounter);\n  const { result: logo } = useCanisterLogo(canister.cid);\n\n  const handleCardClick = () => {\n    history.push(`/wallet/nft/canister/details/${canister.cid}`);\n  };\n\n  return <NFTCardUI onClick={handleCardClick} src={logo} name={canister.name} number={count?.toString()} />;\n}\n\nexport interface ExtNFTCardProps {\n  collection: EXTCollection;\n  userAllExtNfts: ExtNft[] | undefined;\n}\n\nexport function ExtNFTCard({ collection, userAllExtNfts }: ExtNFTCardProps) {\n  const history = useHistory();\n\n  const count = useMemo(() => {\n    if (!userAllExtNfts || !collection) return undefined;\n    return userAllExtNfts.filter((e) => e.canister === collection.id).length;\n  }, [userAllExtNfts, collection]);\n\n  const handleClick = () => {\n    history.push(`/wallet/nft/canister/details/${collection.id}`);\n  };\n\n  return <NFTCardUI name={collection.name} src={collection.avatar} onClick={handleClick} number={count} />;\n}\n\nexport default function NFTList() {\n  const { result, loading } = useNFTCanisterList(0, 1000);\n  const nftCanisters = result?.content;\n  const [userSelectedCanisters] = useSelectedCanistersManager();\n\n  const account = useAccount();\n\n  const list = useMemo(() => {\n    return nftCanisters?.filter((canister) => {\n      return (\n        (userSelectedCanisters.includes(canister.cid) || isICPSwapOfficial(canister.owner)) &&\n        !ICPSwapPositionNFTs.includes(canister.cid) // Filter ICPSwap Position NFTs\n      );\n    });\n  }, [userSelectedCanisters, nftCanisters]);\n\n  const { nfts } = useEXTManager();\n  const { result: extAllCollections } = useEXTAllCollections();\n\n  const importedNFTs = useMemo(() => {\n    if (!extAllCollections) return [];\n\n    return nfts\n      .map((nft) => extAllCollections.find((e) => e.id === nft.canisterId))\n      .filter((e) => !!e) as EXTCollection[];\n  }, [nfts, extAllCollections]);\n\n  const { result: userAllExtNfts } = useExtUserNFTs(account);\n\n  return (\n    <Box>\n      <NFTListHeader />\n\n      <Box sx={{ overflow: \"hidden\", width: \"100%\", margin: \"30px 0\" }}>\n        <Box\n          sx={{\n            width: \"100%\",\n            display: \"grid\",\n            gridTemplateColumns: \"1fr 1fr 1fr\",\n            gap: \"20px\",\n            \"@media(max-width: 1088px)\": {\n              gridTemplateColumns: \"1fr 1fr\",\n            },\n            \"@media(max-width: 640px)\": {\n              gridTemplateColumns: \"100%\",\n              gap: \"20px 0\",\n            },\n          }}\n        >\n          {!loading &&\n            importedNFTs?.map((collection) => (\n              <Grid key={collection.id} item xs={12}>\n                <ExtNFTCard collection={collection} userAllExtNfts={userAllExtNfts} />\n              </Grid>\n            ))}\n\n          {list?.map((canister) => (\n            <Grid key={canister.cid} item xs={12}>\n              <NFTCanisterCard canister={canister} />\n            </Grid>\n          ))}\n        </Box>\n      </Box>\n\n      {loading ? <Loading loading /> : null}\n\n      {list && list.length === 0 && !!importedNFTs && importedNFTs.length === 0 && !loading ? <NoData /> : null}\n    </Box>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Box } from \"@mui/material\";\nimport WalletAccount from \"components/Wallet/WalletAccount\";\nimport TokenList from \"components/Wallet/TokenList\";\nimport NFTList from \"components/Wallet/NFTList\";\nimport WalletContext, { TokenBalance, Page } from \"components/Wallet/context\";\nimport { useConnectorStateConnected } from \"store/auth/hooks\";\nimport ConnectWallet from \"components/ConnectWallet\";\n\nexport default function Wallet() {\n  const [refreshCounter, setRefreshCounter] = useState<number>(0);\n  const [refreshTotalBalance, setRefreshTotalBalance] = useState(false);\n  const [totalValue, setTotalValue] = useState<TokenBalance>({} as TokenBalance);\n  const [totalUSDBeforeChange, setTotalUSDBeforeChange] = useState<TokenBalance>({} as TokenBalance);\n  const [transferTo, setTransferTo] = useState<string>(\"\");\n  const [transferAmount, setTransferAmount] = useState<BigNumber>(new BigNumber(0));\n  const [page, setPage] = useState<Page>(\"token\");\n\n  const walletIsConnected = useConnectorStateConnected();\n\n  const handleTotalValueChange = (tokenId: string, value: BigNumber) => {\n    setTotalValue((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const handleTotalUSDChange = (tokenId: string, value: BigNumber) => {\n    setTotalUSDBeforeChange((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const allTokenTotalValue = useMemo(() => {\n    return Object.values(totalValue).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalValue]);\n\n  const allTokenTotalUSDChange = useMemo(() => {\n    return Object.values(totalUSDBeforeChange).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalUSDBeforeChange]);\n\n  return walletIsConnected ? (\n    <WalletContext.Provider\n      value={{\n        refreshTotalBalance,\n        setRefreshTotalBalance,\n        refreshCounter,\n        setRefreshCounter,\n        totalValue: allTokenTotalValue,\n        setTotalValue: handleTotalValueChange,\n        totalUSDBeforeChange: allTokenTotalUSDChange,\n        setTotalUSDBeforeChange: handleTotalUSDChange,\n        transferTo,\n        setTransferTo,\n        transferAmount,\n        setTransferAmount,\n        page,\n        setPage,\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Box sx={{ width: \"100%\", maxWidth: \"1400px\" }}>\n          <WalletAccount />\n          <Box sx={{ margin: \"30px 0 0 0\" }}>\n            <Box sx={{ display: page === \"token\" ? \"block\" : \"none\" }}>\n              <TokenList />\n            </Box>\n            <Box sx={{ display: page === \"nft\" ? \"block\" : \"none\" }}>\n              <NFTList />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </WalletContext.Provider>\n  ) : (\n    <ConnectWallet />\n  );\n}\n","import { useCallback } from \"react\";\nimport { EXTCollection } from \"@w2e/types\";\nimport { useCallsData } from \"../useCallData\";\n\nexport function useEXTAllCollections() {\n  return useCallsData(\n    useCallback(async () => {\n      const response = await fetch(\"https://us-central1-entrepot-api.cloudfunctions.net/api/collections\").catch(\n        () => undefined,\n      );\n\n      if (!response) return undefined;\n\n      return (await response.json()) as EXTCollection[];\n    }, []),\n  );\n}\n","import { useCallback } from \"react\";\nimport { type ExtNft } from \"@w2e/types\";\nimport { useCallsData } from \"../useCallData\";\n\nexport function useExtUserNFTs(address: string | undefined, reload?: boolean) {\n  const call = useCallback(async () => {\n    if (!address) return undefined;\n    const result = await fetch(`https://us-central1-entrepot-api.cloudfunctions.net/api/user/${address}/all`).catch(\n      () => undefined,\n    );\n\n    if (!result) return undefined;\n\n    return (await result.json()) as ExtNft[];\n  }, [address]);\n\n  return useCallsData(call, reload);\n}\n","export const ICP_ADDRESS_LENGTH = 64;\n\nexport function isValidAccount(address: string): boolean {\n  return (\n    /^[0-9a-fA-F]+$/.test(address) && ICP_ADDRESS_LENGTH === address.length\n  );\n}\n"],"names":["_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgCopy","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","ConnectWallet","walletManager","useWalletConnectorManager","_jsx","Grid","container","justifyContent","children","Box","sx","maxWidth","MainCard","level","_jsxs","alignItems","flexDirection","NoData","Typography","color","Trans","Button","variant","onClick","marginTop","size","MaxButton","_props$sx","theme","useTheme","padding","cursor","borderRadius","backgroundColor","colors","secondaryMain","fontSize","value","QRCode","useMintNFTCallback","useCallback","async","canisterId","identity","params","count","BigInt","resultFormat","NFTCanister","mint_batch","mint","useNFTMetadata","tokenId","reload","useCallsData","icsMetadata","Number","data","useNFTTransaction","tokenIdentifier","offset","limit","isAvailablePageArgs","findTxRecord","useUserNFTTransactions","account","findTokenTxRecord","address","useNFTTransferCallback","transfer","useCanisterCycles","cycleBalance","useCanisterUserNFTCount","ownerNFTCount","useNFTCanisterList","NFTCanisterController","findCanister","useUserCanisterList","findUserCanister","createCanister","values","create","setCanisterLogo","logo","setLogo","setCanisterLogoInController","useCanisterMetadata","OLD_CANISTER_IDS","includes","canisterInfo","useCanisterLogo","_resultFormat$data","_resultFormat$data2","image","getCanisterLogo","useCanisterNFTList","findTokenList","useNFTMintInfo","feeInfo","getSwapNFTStat","swapNFT","getNftStat","useSelectedCanistersManager","dispatch","useAppDispatch","useAppSelector","state","nft","userSelectedCanisters","selectedCanisters","updateUserSelectedCanisters","selectedCanister","deleteUserSelectedCanisters","useEXTManager","importedNFTs","importCall","val","importNFT","deleteCall","deleteNFT","useMemo","nfts","_g","_defs","SvgRefresh","clipPath","createContext","AddressWrapper","label","copyRef","useRef","handleCopy","_copyRef$current","current","copy","border","background","display","transform","margin","wordBreak","whiteSpace","userSelect","component","CopyIcon","Copy","content","hide","WalletAccount","icpPrice","useICPPrice","principal","useAccountPrincipal","openSuccessTip","useSuccessTip","refreshTotalBalance","setRefreshTotalBalance","refreshCounter","setRefreshCounter","totalValue","totalUSDBeforeChange","useContext","WalletContext","useTotalICPValue","dividedBy","usdChange","isEqualTo","concat","minus","multipliedBy","toFixed","usdChangeType","USDChangeColor","borderBottom","gap","RefreshIcon","style","handleRefreshBalance","fontWeight","formatDollarAmount","toString","toFormat","minWidth","principalToAccount","i18n","_","QRReader","useZxing","onResult","paused","visible","constraints","video","facingMode","className","setVisible","useStyles","makeStyles","warningText","palette","warning","dark","usePrincipalStandard","standard","ICP","useAccountStandard","TransferModal","_token$transFee","open","onClose","onTransferSuccess","token","transferTo","qrReaderOpen","setQrReaderOpen","React","principalFromState","setPrincipalFromState","classes","useAccount","principalString","useAccountPrincipalString","openErrorTip","useErrorTip","result","balance","useTokenBalance","tokenUSDPrice","useUSDPriceById","initialValues","to","weight","amount","setValues","useState","handleFieldChange","field","actualTransferAmount","_values$weight2","_values$amount3","BigNumber","isGreaterThan","parseTokenAmount","transFee","decimals","errorMessage","getErrorMessage","_values$amount","standardType","Principal","fromText","error","isValidAccount","isValidPrincipal","Modal","FilledTextField","symbol","fullWidth","disabled","placeholder","onChange","helperText","addressHelpText","autoComplete","multiline","InputProps","endAdornment","InputAdornment","position","IconButton","QrCode","p","text","NumberFilledTextField","numericProps","allowNegative","decimalScale","toSignificantWithGroupSeparator","0","marginLeft","event","stopPropagation","Identity","onSubmit","_ref2","loading","closeLoading","_values$weight","_values$amount2","isLessThanOrEqualTo","status","message","tokenTransfer","formatTokenAmount","from","fee","_getLocaleMessage","W2E","getLocaleMessage","console","fullScreenLoading","_ref3","submit","CircularProgress","XTCTopUp","onTopUpSuccess","useTokenInfo","XTC","defaultValues","openTip","closeTip","useTips","onFieldChange","prevState","xtc","burn","canister_id","mt","inputComponent","TextFieldNumberComponent","inputProps","maxLength","marginRight","handleMax","toNumber","loadingTipKey","1","TIP_LOADING","numberToString","ResultStatus","OK","TIP_SUCCESS","TIP_ERROR","NFIDTransferModal","spacing","item","xs","TextField","NumberTextField","type","_ref4","autocomplete","form","balanceActuallyToAccount","NFIDRequestTransfer","ROUND_DOWN","ICP_TOKEN_INFO","_ref5","ReceiveModal","showConfirm","onConfirm","_copy$current","confirmText","tokenAssets","walletSymbol","textDecoration","ActionButton","ckTokens","ckBTC","mintPath","dissolvePath","ckETH","ChainKeyTokenButtons","ckToken","history","useHistory","_Fragment","handleCKTokenMint","path","push","handleCKTokenDissolve","SWAP_BUTTON_EXCLUDE","WRAPPED_ICP","TokenListItem","isHideSmallBalances","searchValue","walletType","useConnectorType","currency","useToken","infoToken","useInfoToken","priceUSD","tokenInfo","XTCTopUpShow","setXTCTopUpShow","refreshInnerCounter","setRefreshInnerCounter","setOpen","receiveOpen","setReceiveOpen","NFIDTransferOpen","setNFIDTransferOpen","setTotalValue","setTotalUSDBeforeChange","refreshNumber","tokenBalance","useEffect","undefined","usdBeforeChange","div","priceUSDChange","plus","handleCloseModal","handleTransferSuccess","root_canister_id","useSNSTokenRootId","handleWrappedICP","isHidden","hiddenBySmallBalance","hiddenBySearchValue","toLowerCase","NO_HIDDEN_TOKENS","level4","overflow","TokenImage","mockALinkAndOpen","INFO_URL","handleLoadToDetail","name","TokenStandardLabel","flexWrap","handleToSwap","handleReceive","handleToTransactions","TOKEN_STANDARD","ICRC1","ICRC2","url","isHouseUserTokenTransactions","Connector","NFID","handleXTCTopUp","filter","ele","map","NFIDTransfer","XTCTopUpModal","handleTopUpSuccess","EXT","TokenList","list","gridTemplateColumns","LoadingRow","_rect","_rect2","SvgAdd","x","y","rx","TokenItem","_useWalletCatchTokenI","matchDownSM","useMediaQuery","breakpoints","down","walletCatchTokenIds","useWalletCatchTokenIds","addToken","useSaveCacheTokenCallback","deleteToken","useDeleteCacheTokenCallback","borderTop","ml","mr","textOverflow","DISPLAY_IN_WALLET_FOREVER","find","hasBeenAdded","startIcon","HorizontalRuleIcon","handleDeleteToken","AddIcon","handleAddToken","AddTokenModal","queryValue","setQueryValue","importTokenShow","setImportTokenShow","globalTokenList","useGlobalTokenList","importedTokens","useImportedTokens","tokens","keys","configs","config","dialogProps","maxWith","contained","level1","startAdornment","IconSearch","stroke","maxHeight","index","paddingTop","borderColor","TextButton","ImportToken","onImportSuccessfully","AddToken","modalVisible","setModalVisible","DISPLAY_ITEMS","pageName","WalletPageToggle","page","setPage","walletContext","currentDisplay","handleToggle","HideSmallBalance","onHideSmallBalances","Checkbox","checked","TokenListHeader","WalletTokenList","setSearchValue","setIsHideSmallBalances","useUpdateHideSmallBalanceManager","walletCacheTokenIds","tokenIds","ICP_METADATA","WRAPPED_ICP_METADATA","W2E_METADATA","WPL_METADATA","WPR_METADATA","WG_METADATA","WM_METADATA","WOX_METADATA","EW_METADATA","network","NETWORK","IC","sort","a","b","rank","Set","hideOrNot","onSearchValue","TokenListTable","CollectionInfoItem","_data$cid","cid","setUserSelectedCanisters","deleteUserSelectedCanister","TableRow","TableCell","Avatar","src","isICPSwapOfficial","owner","canister","OFFICIAL_CANISTER_IDS","handleDeleteNFTCanister","handleAddNFTCanister","AddNFTCanisterModal","_item$name","_item$name$toLowerCas","TableContainer","Table","TableHead","TableBody","AddNFTCanister","SvgImport","strokeWidth","strokeLinecap","strokeLinejoin","NFT_STANDARDS","Standards","ImportNFTCanisterModal","step","setStep","metadata","setMetadata","riskWarning","setRiskWarning","extAllCollections","useEXTAllCollections","handleValueChange","filed","e","select","menus","ImportEXTNft","ImportIcon","NFTListHeader","ICPSwapPositionNFTs","NFTCardUI","number","NFTCanisterCard","handleCardClick","ExtNFTCard","collection","userAllExtNfts","avatar","handleClick","NFTList","nftCanisters","useExtUserNFTs","Loading","Wallet","setTransferTo","transferAmount","setTransferAmount","walletIsConnected","useConnectorStateConnected","allTokenTotalValue","reduce","prev","curr","allTokenTotalUSDChange","Provider","handleTotalValueChange","handleTotalUSDChange","__awaiter","response","fetch","catch","json","ICP_ADDRESS_LENGTH","test"],"sourceRoot":""}