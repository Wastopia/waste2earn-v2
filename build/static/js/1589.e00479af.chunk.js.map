{"version":3,"file":"static/js/1589.e00479af.chunk.js","mappings":"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","sources":["components/Copy/icon.tsx","views/sns/Voting/components/ProposalDetails.tsx","../packages/utils/src/formatPercentage.ts","views/sns/Voting/components/VotableNeurons.tsx","views/sns/Voting/components/VoteConfirm.tsx","views/sns/Voting/components/Progressbar.tsx","views/sns/Voting/components/VotedNeurons.tsx","views/sns/Voting/components/VotingResult.tsx","views/sns/Voting/components/Summary.tsx","components/markdown/BaseMarkdown.tsx","views/sns/Voting/components/Payload.tsx","views/sns/Voting/Voting.tsx","views/sns/Voting/proposal.utils.ts","../packages/hooks/src/sns/governance_proposal.ts"],"sourcesContent":["import copyToClipboard from \"copy-to-clipboard\";\nimport { ReactComponent as CopyIcon } from \"assets/icons/Copy.svg\";\nimport { useTips, TIP_SUCCESS } from \"hooks/useTips\";\n\nexport interface CopyProps {\n  content: string | undefined | null;\n}\n\nexport function Copy({ content }: CopyProps) {\n  const [openTips] = useTips();\n\n  const handleCopy = () => {\n    if (!content) return;\n    copyToClipboard(content);\n    openTips(\"Copy Success\", TIP_SUCCESS);\n  };\n\n  return <CopyIcon onClick={handleCopy} style={{ cursor: \"pointer\" }} />;\n}\n","import { Box, Typography } from \"@mui/material\";\nimport { Trans } from \"@lingui/macro\";\nimport { useMemo } from \"react\";\nimport type { ProposalData } from \"@w2e/types\";\nimport { shorten, nowInSeconds, toHexString } from \"@w2e/utils\";\nimport { useParams } from \"react-router-dom\";\nimport { Copy } from \"components/Copy/icon\";\nimport dayjs from \"dayjs\";\n\nimport { convertProposalNumberToText, snsRewardStatus, SnsRewordsText } from \"../proposal.utils\";\n\ninterface ProposalDetailItemProps {\n  label: React.ReactNode;\n  value: React.ReactNode;\n}\n\nfunction ProposalDetailItem({ label, value }: ProposalDetailItemProps) {\n  return (\n    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n      <Typography component=\"div\">{label}</Typography>\n      <Typography component=\"div\">{value}</Typography>\n    </Box>\n  );\n}\n\nexport interface ProposalDetailsProps {\n  proposal_data: ProposalData | undefined;\n}\n\nexport function ProposalDetails({ proposal_data }: ProposalDetailsProps) {\n  const { proposal_id } = useParams<{ governance_id: string; proposal_id: string }>();\n\n  const { isExecuted, proposer } = useMemo(() => {\n    if (!proposal_data) return {};\n\n    const __proposal = proposal_data.proposal[0];\n\n    if (!__proposal) return {};\n\n    const deadline = proposal_data.wait_for_quiet_state[0]?.current_deadline_timestamp_seconds;\n\n    return {\n      url: __proposal.url,\n      title: __proposal.title,\n      action: __proposal.action,\n      summary: __proposal.summary,\n      seconds: deadline ? deadline - BigInt(nowInSeconds()) : undefined,\n      isExecuted: proposal_data.executed_timestamp_seconds > 0,\n      proposer: proposal_data.proposer[0]?.id,\n    };\n  }, [proposal_data]);\n\n  return (\n    <Box>\n      <Typography sx={{ color: \"text.primary\", fontWeight: 500, fontSize: \"16px\" }}>\n        <Trans>Proposal Details</Trans>\n      </Typography>\n\n      <Box sx={{ margin: \"20px 0 0 0\" }}>\n        <Box sx={{ display: \"grid\", gridTemplateColumns: \"1fr\", gap: \"20px 0\" }}>\n          <ProposalDetailItem label={<Trans>Proposal ID</Trans>} value={proposal_id} />\n\n          <ProposalDetailItem\n            label={<Trans>Type</Trans>}\n            value={proposal_data ? convertProposalNumberToText(proposal_data?.action) : \"--\"}\n          />\n\n          <ProposalDetailItem\n            label={<Trans>Status</Trans>}\n            value={<Typography>{isExecuted ? <Trans>Executed</Trans> : <Trans>Open</Trans>}</Typography>}\n          />\n\n          <ProposalDetailItem\n            label={<Trans>Reward Status</Trans>}\n            value={<Typography>{proposal_data ? SnsRewordsText[snsRewardStatus(proposal_data)] : \"--\"}</Typography>}\n          />\n\n          <ProposalDetailItem\n            label={<Trans>Created</Trans>}\n            value={\n              <Typography>\n                {proposal_data?.proposal_creation_timestamp_seconds\n                  ? dayjs(Number(proposal_data.proposal_creation_timestamp_seconds * BigInt(1000))).format(\n                    \"YYYY-MM-DD HH:mm:ss\",\n                  )\n                  : \"--\"}\n              </Typography>\n            }\n          />\n\n          {isExecuted ? (\n            <>\n              <ProposalDetailItem\n                label={<Trans>Decided</Trans>}\n                value={\n                  <Typography>\n                    {proposal_data?.decided_timestamp_seconds\n                      ? dayjs(Number(proposal_data.decided_timestamp_seconds * BigInt(1000))).format(\n                        \"YYYY-MM-DD HH:mm:ss\",\n                      )\n                      : \"--\"}\n                  </Typography>\n                }\n              />\n\n              <ProposalDetailItem\n                label={<Trans>Executed</Trans>}\n                value={\n                  <Typography>\n                    {proposal_data?.executed_timestamp_seconds\n                      ? dayjs(Number(proposal_data.executed_timestamp_seconds * BigInt(1000))).format(\n                        \"YYYY-MM-DD HH:mm:ss\",\n                      )\n                      : \"--\"}\n                  </Typography>\n                }\n              />\n            </>\n          ) : null}\n\n          <ProposalDetailItem\n            label={<Trans>Proposer</Trans>}\n            value={\n              proposer ? (\n                <Box sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\" }}>\n                  <Typography>{shorten(toHexString(proposer))}</Typography>\n                  <Copy content={toHexString(proposer)} />\n                </Box>\n              ) : (\n                \"--\"\n              )\n            }\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import { BigNumber } from \"./bignumber\";\n\nexport const formatPercentage = (value: number, options?: { fraction: number }) => {\n  const { fraction = 3 } = options || {};\n  return `${new BigNumber(value * 100).toFixed(fraction)}%`;\n};\n","import { Trans } from \"@lingui/macro\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport type { Neuron, ProposalData } from \"@w2e/types\";\nimport { shorten } from \"@w2e/utils\";\nimport { Collapse, Typography, Box, Checkbox } from \"components/Mui\";\nimport { neuronFormat, votingPowerFormat, getVotingPowers, getVotingPower } from \"utils/sns/index\";\nimport { ChevronDown } from \"react-feather\";\n\nexport interface ProposalDetailsProps {\n  voteableNeurons: Neuron[];\n  onCheckedChange: (neuronIds: string[], votingPowers: bigint) => void;\n  proposal: ProposalData;\n}\n\nexport function VotableNeurons({ voteableNeurons, onCheckedChange, proposal }: ProposalDetailsProps) {\n  const [checkedNeurons, setCheckedNeurons] = useState<string[]>([]);\n  const [votableOpen, setVoteableOpen] = useState(false);\n\n  useEffect(() => {\n    const checkedNeurons = voteableNeurons\n      .map((neuron) => {\n        const formattedNeuron = neuronFormat(neuron);\n        return formattedNeuron.id;\n      })\n      .filter((id) => id !== undefined) as string[];\n\n    setCheckedNeurons(checkedNeurons);\n\n    const votingPowers = getVotingPowers(\n      voteableNeurons.filter((voteableNeuron) => {\n        const formattedNeuron = neuronFormat(voteableNeuron);\n        if (!formattedNeuron.id) return false;\n        return checkedNeurons.includes(formattedNeuron.id);\n      }),\n      proposal,\n    );\n\n    onCheckedChange(checkedNeurons, votingPowers);\n  }, [voteableNeurons, proposal]);\n\n  const handleToggleOpen = () => {\n    setVoteableOpen(!votableOpen);\n  };\n\n  const handleCheckedChange = (checked: boolean, neuronId: string | undefined) => {\n    if (!neuronId) return;\n\n    let checkedNeuronIds: string[] = [];\n\n    if (checked) {\n      checkedNeuronIds = [...checkedNeurons, neuronId];\n      setCheckedNeurons(checkedNeuronIds);\n    } else {\n      checkedNeuronIds = [...checkedNeurons];\n      checkedNeuronIds.splice(checkedNeurons.indexOf(neuronId), 1);\n      setCheckedNeurons(checkedNeuronIds);\n    }\n\n    const votingPowers = getVotingPowers(\n      voteableNeurons.filter((voteableNeuron) => {\n        const formattedNeuron = neuronFormat(voteableNeuron);\n        if (!formattedNeuron.id) return false;\n        return checkedNeuronIds.includes(formattedNeuron.id);\n      }),\n      proposal,\n    );\n\n    onCheckedChange(checkedNeuronIds, votingPowers);\n  };\n\n  const votingPowers = useMemo(() => {\n    const votingPowers = getVotingPowers(\n      voteableNeurons.filter((voteableNeuron) => {\n        const formattedNeuron = neuronFormat(voteableNeuron);\n        if (!formattedNeuron.id) return false;\n        return checkedNeurons.includes(formattedNeuron.id);\n      }),\n      proposal,\n    );\n\n    return votingPowers;\n  }, [voteableNeurons, proposal, checkedNeurons]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          cursor: \"pointer\",\n          alignItems: \"center\",\n          \"@media(max-width: 640px)\": {\n            flexDirection: \"column\",\n            gap: \"5px\",\n            alignItems: \"flex-start\",\n          },\n        }}\n        onClick={handleToggleOpen}\n      >\n        <Box sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\", width: \"fit-content\" }}>\n          <Typography>\n            <Trans>\n              Vote with {checkedNeurons.length}/{voteableNeurons.length} Neurons\n            </Trans>\n          </Typography>\n\n          <ChevronDown size=\"18px\" style={{ transform: votableOpen ? \"rotate(180deg)\" : \"rotate(0deg)\" }} />\n        </Box>\n\n        <Typography>\n          <Trans>Voting Power: {votingPowerFormat(votingPowers)}</Trans>\n        </Typography>\n      </Box>\n\n      <Collapse in={votableOpen}>\n        <Box sx={{ padding: \"12px 0\", display: \"flex\", flexDirection: \"column\", gap: \"10px 0\" }}>\n          {voteableNeurons.map((neuron) => {\n            const formattedNeuron = neuronFormat(neuron);\n\n            if (formattedNeuron.id === undefined) return null;\n\n            return (\n              <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <Typography sx={{ fontSize: \"12px\" }}>{shorten(formattedNeuron.id, 12)}</Typography>\n\n                <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 8px\" }}>\n                  <Typography sx={{ fontSize: \"12px\" }}>\n                    {votingPowerFormat(getVotingPower(neuron, proposal))}\n                  </Typography>\n\n                  <Checkbox\n                    checked={checkedNeurons.includes(formattedNeuron.id)}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>, checked: boolean) =>\n                      handleCheckedChange(checked, formattedNeuron.id)\n                    }\n                  />\n                </Box>\n              </Box>\n            );\n          })}\n        </Box>\n      </Collapse>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { neuronVoteForProposal } from \"@w2e/hooks\";\nimport { useTips, TIP_ERROR, TIP_SUCCESS, useFullscreenLoading } from \"hooks/useTips\";\nimport { t } from \"@lingui/macro\";\nimport { Neuron, ProposalData } from \"@w2e/types\";\nimport { ConfirmModal } from \"@w2e/ui\";\nimport { neuronFormat, votingPowerFormat } from \"utils/sns/index\";\nimport { Vote } from \"@w2e/constants\";\n\nexport interface VoteConfirmProps {\n  onVoteCallEnded?: () => void;\n  governance_id: string | undefined;\n  proposal_id: string | undefined;\n  rejected?: boolean;\n  votingPowers: bigint;\n  voteNeurons: Neuron[] | undefined;\n  proposal: ProposalData | undefined;\n  onClose: () => void;\n  open: boolean;\n}\n\nexport function VoteConfirm({\n  proposal_id,\n  onVoteCallEnded,\n  governance_id,\n  rejected,\n  votingPowers,\n  onClose,\n  voteNeurons,\n  proposal,\n  open,\n}: VoteConfirmProps) {\n  const [openFullscreenLoading, closeFullscreenLoading] = useFullscreenLoading();\n  const [openTip] = useTips();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleVote = async () => {\n    if (loading || !governance_id || !proposal_id || !proposal || !voteNeurons) return;\n\n    setLoading(true);\n    openFullscreenLoading();\n\n    let vote_called = 0;\n\n    voteNeurons.forEach((voteNeuron) => {\n      const formattedNeuron = neuronFormat(voteNeuron);\n      const neuron_id = voteNeuron.id[0]?.id;\n\n      if (formattedNeuron.id && neuron_id) {\n        const ballot = proposal.ballots.find(([ballotId]) => ballotId === formattedNeuron.id);\n\n        if (ballot) {\n          const vote = rejected ? Vote.No : Vote.Yes;\n\n          neuronVoteForProposal(governance_id, neuron_id, vote, BigInt(proposal_id)).then(\n            ({ status, message, data }) => {\n              vote_called += 1;\n\n              const result = data ? data.command[0] : undefined;\n              const manage_error = result ? (\"Error\" in result ? result.Error : undefined) : undefined;\n\n              if (status === \"ok\") {\n                // If neuron is already voted, make it no error tip\n                if (!manage_error || manage_error.error_message === \"Neuron already voted on proposal.\") {\n                  openTip(t`Neuron ${formattedNeuron.id} Vote successfully`, TIP_SUCCESS);\n                } else {\n                  const message = manage_error.error_message;\n                  openTip(message !== \"\" ? message : t`Failed to vote neuron ${formattedNeuron.id}`, TIP_ERROR);\n                }\n              } else {\n                openTip(message ?? t`Failed to vote neuron ${formattedNeuron.id}`, TIP_ERROR);\n              }\n\n              if (vote_called === voteNeurons.length) {\n                if (onVoteCallEnded) onVoteCallEnded();\n                closeFullscreenLoading();\n                setLoading(false);\n                onClose();\n              }\n            },\n          );\n        }\n      } else {\n        vote_called += 1;\n      }\n    });\n  };\n\n  return (\n    <ConfirmModal\n      open={open}\n      onConfirm={handleVote}\n      onClose={onClose}\n      title={rejected ? t`Reject Proposal` : t`Adopt Proposal`}\n      text={\n        rejected\n          ? t`You are about to cast ${votingPowerFormat(\n            votingPowers,\n          )} votes against this proposal, are you sure you want to proceed?`\n          : t`You are about to cast ${votingPowerFormat(\n            votingPowers,\n          )} votes for this proposal, are you sure you want to proceed?`\n      }\n    />\n  );\n}\n","import { useTheme } from \"@mui/material\";\nimport { Box } from \"components/Mui\";\nimport { Theme } from \"@mui/material/styles\";\n\nexport interface ProgressbarProps {\n  yes: number | undefined;\n  no: number | undefined;\n  YesColor: string;\n  NoColor: string;\n  standardMajorityPercent: number | undefined;\n  immediateMajorityPercent: number | undefined;\n}\n\nexport function Progressbar({\n  yes,\n  no,\n  YesColor,\n  NoColor,\n  immediateMajorityPercent,\n  standardMajorityPercent,\n}: ProgressbarProps) {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Box sx={{ position: \"relative\", width: \"100%\", height: \"10px\" }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          height: \"10px\",\n          borderRadius: \"12px\",\n          background: theme.palette.background.level3,\n        }}\n      >\n        <Box\n          sx={{\n            width: yes,\n            height: \"100%\",\n            borderTopLeftRadius: \"12px\",\n            borderBottomLeftRadius: \"12px\",\n            background: YesColor,\n          }}\n        />\n\n        <Box\n          sx={{\n            width: no,\n            height: \"100%\",\n            borderTopRightRadius: \"12px\",\n            borderBottomRightRadius: \"12px\",\n            background: NoColor,\n          }}\n        />\n      </Box>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", top: 0, left: 0 }}>\n        {immediateMajorityPercent ? (\n          <Box\n            className=\"immediate-majority\"\n            sx={{\n              position: \"absolute\",\n              bottom: 0,\n              left: `${immediateMajorityPercent}%`,\n              width: \"2px\",\n              height: \"16px\",\n              background: \"#ffffff\",\n              transform: \"translate(-50%, 0)\",\n              \"&: after\": {\n                display: \"block\",\n                position: \"absolute\",\n                top: \"-5px\",\n                left: \"-2px\",\n                content: '\" \"',\n                width: \"6px\",\n                height: \"6px\",\n                borderRadius: \"50%\",\n                background: theme.colors.primaryMain,\n              },\n            }}\n          />\n        ) : null}\n\n        {standardMajorityPercent ? (\n          <Box\n            className=\"standard-majority\"\n            sx={{\n              position: \"absolute\",\n              bottom: 0,\n              left: `${standardMajorityPercent}%`,\n              width: \"2px\",\n              height: \"16px\",\n              background: \"#ffffff\",\n              transform: \"translate(-50%, 0)\",\n              \"&: after\": {\n                display: \"block\",\n                position: \"absolute\",\n                top: \"-5px\",\n                left: \"-2px\",\n                content: '\" \"',\n                width: \"6px\",\n                height: \"6px\",\n                borderRadius: \"50%\",\n                background: theme.colors.secondaryMain,\n              },\n            }}\n          />\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n","import { useTheme } from \"@mui/material\";\nimport { Trans } from \"@lingui/macro\";\nimport { useMemo, useState } from \"react\";\nimport type { Neuron, ProposalData } from \"@w2e/types\";\nimport { shorten, toHexString } from \"@w2e/utils\";\nimport { Collapse, Typography, Box } from \"components/Mui\";\nimport { Theme } from \"@mui/material/styles\";\nimport { neuronFormat, votingPowerFormat, getVotingPower, getVotingPowers, getVote } from \"utils/sns/index\";\nimport { ChevronDown, ThumbsUp, ThumbsDown } from \"react-feather\";\nimport { Vote } from \"@w2e/constants\";\n\ninterface VotedNeuronItemProps {\n  neuron: Neuron;\n  proposal_data: ProposalData;\n}\n\nfunction VotedNeuronItem({ neuron, proposal_data }: VotedNeuronItemProps) {\n  const theme = useTheme() as Theme;\n  const YesColor = theme.colors.successDark;\n  const NoColor = theme.colors.errorDark;\n\n  const { ballot, votingPower } = useMemo(() => {\n    if (!proposal_data) return {};\n\n    return { ballot: getVote(neuron, proposal_data), votingPower: getVotingPower(neuron, proposal_data) };\n  }, [neuron, proposal_data]);\n\n  return (\n    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n      <Typography sx={{ fontSize: \"12px\" }}>\n        {neuronFormat(neuron) ? shorten(neuronFormat(neuron).id, 12) : \"--\"}\n      </Typography>\n\n      <Box sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\" }}>\n        <Typography sx={{ fontSize: \"12px\" }}>{votingPower ? votingPowerFormat(votingPower) : \"--\"}</Typography>\n        {ballot ? (\n          ballot.vote === Vote.Yes ? (\n            <ThumbsUp size=\"14px\" color={YesColor} />\n          ) : (\n            <ThumbsDown size=\"14px\" color={NoColor} />\n          )\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n\nexport interface VotedNeuronsProps {\n  proposal_data: ProposalData | undefined;\n  votedNeurons: Neuron[] | undefined;\n}\n\nexport function VotedNeurons({ proposal_data, votedNeurons }: VotedNeuronsProps) {\n  const [votedOpen, setVotedOpen] = useState(false);\n\n  return votedNeurons && proposal_data && votedNeurons.length > 0 ? (\n    <Box sx={{ margin: \"20px 0 0 0\" }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          \"@media(max-width: 640px)\": {\n            flexDirection: \"column\",\n            gap: \"5px\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: \"0 5px\",\n            alignItems: \"center\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => setVotedOpen(!votedOpen)}\n        >\n          <Typography>\n            <Trans>{votedNeurons.length} neurons voted</Trans>\n          </Typography>\n          <ChevronDown size=\"18px\" style={{ transform: votedOpen ? \"rotate(180deg)\" : \"rotate(0deg)\" }} />\n        </Box>\n\n        <Typography>\n          <Trans>Voting Power: {votingPowerFormat(getVotingPowers(votedNeurons, proposal_data))}</Trans>\n        </Typography>\n      </Box>\n\n      <Collapse in={votedOpen}>\n        <Box sx={{ padding: \"12px\" }}>\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"10px 0\" }}>\n            {votedNeurons.map((neuron, index) => (\n              <VotedNeuronItem\n                key={neuron.id[0]?.id ? toHexString(neuron.id[0]?.id) : `neuron_${index}`}\n                proposal_data={proposal_data}\n                neuron={neuron}\n              />\n            ))}\n          </Box>\n        </Box>\n      </Collapse>\n    </Box>\n  ) : null;\n}\n","import { useTheme } from \"@mui/material\";\nimport { Trans } from \"@lingui/macro\";\nimport { useMemo, useState } from \"react\";\nimport type { Neuron, ProposalData, NervousSystemParameters } from \"@w2e/types\";\nimport { nowInSeconds, formatPercentage, BigNumber, shorten, toHexString } from \"@w2e/utils\";\nimport { CollapseText } from \"components/index\";\nimport { Collapse, Typography, Button, Box } from \"components/Mui\";\nimport { Theme } from \"@mui/material/styles\";\nimport { secondsToDuration } from \"@dfinity/utils\";\nimport {\n  filterIneligibleNeurons,\n  filterVotableNeurons,\n  filterVotedNeurons,\n  neuronFormat,\n  secondsToDissolveDelayDuration,\n} from \"utils/sns/index\";\nimport { ChevronDown } from \"react-feather\";\n\nimport { VotableNeurons } from \"./VotableNeurons\";\nimport { VoteConfirm } from \"./VoteConfirm\";\nimport { Progressbar } from \"./Progressbar\";\nimport { VotedNeurons } from \"./VotedNeurons\";\n\nexport interface ProposalDetailsProps {\n  proposal_data: ProposalData | undefined;\n  neurons: Neuron[] | undefined;\n  neuronSystemParameters: NervousSystemParameters | undefined;\n  proposal_id: string;\n  governance_id: string;\n  onRefresh?: () => void;\n}\n\nexport function VotingResult({\n  proposal_id,\n  governance_id,\n  proposal_data,\n  neurons,\n  neuronSystemParameters,\n  onRefresh,\n}: ProposalDetailsProps) {\n  const theme = useTheme() as Theme;\n  const [checkedNeuronIds, setCheckedNeuronIds] = useState<string[]>([]);\n  const [ineligibleOpen, setIneligibleOpen] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [adopt, setAdopt] = useState(false);\n  const [votingPowers, setVotingPowers] = useState<bigint>(BigInt(0));\n\n  const ineligibleNeurons = useMemo(() => {\n    if (!neurons || !proposal_data) return undefined;\n    return filterIneligibleNeurons({ neurons, proposal: proposal_data });\n  }, [neurons, proposal_data]);\n\n  const voteableNeurons = useMemo(() => {\n    if (!neurons || !proposal_data) return undefined;\n    return filterVotableNeurons({ neurons, proposal: proposal_data });\n  }, [neurons, proposal_data]);\n\n  const votedNeurons = useMemo(() => {\n    if (!neurons || !proposal_data) return undefined;\n    return filterVotedNeurons({ neurons, proposal: proposal_data });\n  }, [neurons, proposal_data]);\n\n  const {\n    castVotesNo,\n    castVotesYes,\n    yesProportion,\n    noProportion,\n    yes,\n    no,\n    immediateMajorityPercent,\n    standardMajorityPercent,\n    seconds,\n    isExecuted,\n  } = useMemo(() => {\n    if (!proposal_data) return {};\n\n    const __proposal = proposal_data.proposal[0];\n\n    if (!__proposal) return {};\n\n    const deadline = proposal_data.wait_for_quiet_state[0]?.current_deadline_timestamp_seconds;\n\n    const yes = Number(proposal_data.latest_tally[0]?.yes ?? 0) / 10 ** 8;\n    const no = Number(proposal_data.latest_tally[0]?.no ?? 0) / 10 ** 8;\n    const total = Number(proposal_data.latest_tally[0]?.total ?? 0) / 10 ** 8;\n\n    const yesNoSum = yes + no;\n    const castVotesYes = yesNoSum > 0 ? yes / yesNoSum : 0;\n    const castVotesNo = yesNoSum > 0 ? no / yesNoSum : 0;\n\n    const minimum_yes_proportion_of_exercised = proposal_data.minimum_yes_proportion_of_exercised[0]?.basis_points[0];\n    const minimum_yes_proportion_of_total = proposal_data.minimum_yes_proportion_of_total[0]?.basis_points[0];\n\n    return {\n      url: __proposal.url,\n      title: __proposal.title,\n      action: __proposal.action,\n      summary: __proposal.summary,\n      seconds: deadline ? deadline - BigInt(nowInSeconds()) : undefined,\n      isExecuted: proposal_data.executed_timestamp_seconds > 0,\n      proposer: proposal_data.proposer[0]?.id,\n      yes,\n      no,\n      total,\n      yesProportion: total && yes ? yes / total : 0,\n      noProportion: total && no ? no / total : 0,\n      castVotesYes,\n      castVotesNo,\n      immediateMajorityPercent: minimum_yes_proportion_of_exercised\n        ? Number(minimum_yes_proportion_of_exercised) / 100\n        : undefined,\n      standardMajorityPercent: minimum_yes_proportion_of_total\n        ? Number(minimum_yes_proportion_of_total) / 100\n        : undefined,\n    };\n  }, [proposal_data]);\n\n  const YesColor = theme.colors.successDark;\n  const NoColor = theme.colors.errorDark;\n\n  const { minimumDissolveDelaySeconds } = useMemo(() => {\n    if (!neuronSystemParameters) return {};\n\n    return {\n      minimumDissolveDelaySeconds: neuronSystemParameters.neuron_minimum_dissolve_delay_to_vote_seconds[0],\n    };\n  }, [neuronSystemParameters]);\n\n  const handleCheckedNeuronIdsChange = (checkedNeuronIds: string[], votingPowers: bigint) => {\n    setCheckedNeuronIds(checkedNeuronIds);\n    setVotingPowers(votingPowers);\n  };\n\n  const handleAdopt = () => {\n    setConfirmOpen(true);\n    setAdopt(true);\n  };\n\n  const handleReject = () => {\n    setConfirmOpen(true);\n    setAdopt(false);\n  };\n\n  const voteNeurons = useMemo(() => {\n    if (!voteableNeurons) return undefined;\n\n    return voteableNeurons.filter((neuron) => {\n      const formattedNeuron = neuronFormat(neuron);\n      if (formattedNeuron.id === undefined) return false;\n      return checkedNeuronIds.includes(formattedNeuron.id);\n    });\n  }, [voteableNeurons, checkedNeuronIds]);\n\n  return (\n    <Box>\n      <Typography sx={{ color: \"text.primary\", fontWeight: 500, fontSize: \"16px\" }}>\n        <Trans>Voting Results</Trans>\n      </Typography>\n\n      <Box sx={{ margin: \"20px 0 0 0\" }}>\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Box>\n            <Typography sx={{ color: YesColor }}>\n              <Trans>Yes</Trans>\n            </Typography>\n            <Typography sx={{ fontSize: \"22px\", fontWeight: 500, color: YesColor }}>\n              {yesProportion !== undefined ? formatPercentage(yesProportion) : \"--\"}\n            </Typography>\n          </Box>\n          <Box>\n            <Typography align=\"right\" sx={{ color: NoColor }}>\n              <Trans>No</Trans>\n            </Typography>\n            <Typography sx={{ fontSize: \"22px\", fontWeight: 500, color: NoColor }} align=\"right\">\n              {noProportion !== undefined ? formatPercentage(noProportion) : \"--\"}\n            </Typography>\n          </Box>\n        </Box>\n\n        <Box sx={{ margin: \"20px 0 10px 0\" }}>\n          <Progressbar\n            yes={yesProportion}\n            no={noProportion}\n            YesColor={YesColor}\n            NoColor={NoColor}\n            immediateMajorityPercent={immediateMajorityPercent}\n            standardMajorityPercent={standardMajorityPercent}\n          />\n        </Box>\n\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Box>\n            <Typography>\n              <Typography sx={{ fontSize: \"12px\", color: YesColor }} component=\"span\">\n                {yes ? new BigNumber(yes).toFormat(0) : \"--\"}&nbsp;\n              </Typography>\n              <Typography sx={{ fontSize: \"12px\" }} component=\"span\">\n                <Trans>Voting Power</Trans>\n              </Typography>\n            </Typography>\n\n            <Typography sx={{ margin: \"5px 0 0 0\" }}>\n              <Typography sx={{ fontSize: \"12px\", color: YesColor }} component=\"span\">\n                {castVotesYes !== undefined ? formatPercentage(castVotesYes) : \"--\"}&nbsp;\n              </Typography>\n              <Typography sx={{ fontSize: \"12px\" }} component=\"span\">\n                <Trans>of cast votes</Trans>\n              </Typography>\n\n              <Typography sx={{ fontSize: \"12px\" }}>\n                <Trans>\n                  (Yes needs {immediateMajorityPercent === undefined ? \"--\" : `${immediateMajorityPercent}%`})\n                </Trans>\n              </Typography>\n            </Typography>\n          </Box>\n\n          {isExecuted ? null : (\n            <Box>\n              <Typography sx={{ fontSize: \"12px\", textAlign: \"center\" }}>\n                <Trans>Expiration date</Trans>\n              </Typography>\n              <Typography sx={{ fontSize: \"12px\", textAlign: \"center\", margin: \"5px 0 0 0\" }}>\n                {seconds ? secondsToDuration({ seconds }) : \"--\"}\n              </Typography>\n            </Box>\n          )}\n\n          <Box>\n            <Typography sx={{ textAlign: \"right\" }}>\n              <Typography sx={{ fontSize: \"12px\", color: NoColor }} component=\"span\">\n                {no ? new BigNumber(no).toFormat(0) : \"--\"}&nbsp;\n              </Typography>\n              <Typography sx={{ fontSize: \"12px\" }} component=\"span\">\n                <Trans>Voting Power</Trans>\n              </Typography>\n            </Typography>\n\n            <Typography sx={{ textAlign: \"right\", margin: \"5px 0 0 0\" }}>\n              <Typography sx={{ fontSize: \"12px\", color: NoColor }} component=\"span\">\n                {castVotesNo !== undefined ? formatPercentage(castVotesNo) : \"--\"}&nbsp;\n              </Typography>\n              <Typography sx={{ fontSize: \"12px\" }} component=\"span\">\n                <Trans>of cast votes</Trans>\n              </Typography>\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n\n      <Box sx={{ margin: \"20px 0 0 0\" }}>\n        <Typography color=\"text.primary\" fontWeight={500}>\n          <Trans>There are two ways a critical proposal can be decided:</Trans>\n        </Typography>\n\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <CollapseText\n            label={<Typography>1. Immediate supermajority decision</Typography>}\n            description={\n              <Typography sx={{ fontSize: \"12px\", padding: \"5px\" }}>\n                A critical proposal is immediately adopted or rejected if, before the voting period ends, more than 67%\n                of the total voting power votes Yes, or at least 33% votes No, respectively (indicated by{\" \"}\n                <Typography\n                  component=\"span\"\n                  sx={{\n                    display: \"inline-block\",\n                    width: \"6px\",\n                    height: \"6px\",\n                    background: theme.colors.primaryMain,\n                    borderRadius: \"50%\",\n                  }}\n                />\n                ).\n              </Typography>\n            }\n          />\n        </Box>\n\n        <Box sx={{ margin: \"5px 0 0 0\" }}>\n          <CollapseText\n            label={<Typography>2. Standard supermajority decision</Typography>}\n            description={\n              <Typography sx={{ fontSize: \"12px\", padding: \"5px\" }}>\n                At the end of the voting period, a critical proposal is adopted if more than 67% of the votes cast are\n                Yes votes, provided these votes represent at least 20% of the total voting power (indicated by&nbsp;\n                <Typography\n                  component=\"span\"\n                  sx={{\n                    display: \"inline-block\",\n                    width: \"6px\",\n                    height: \"6px\",\n                    background: theme.colors.secondaryMain,\n                    borderRadius: \"50%\",\n                  }}\n                />\n                ). Otherwise, it is rejected. Before a proposal is decided, the voting period can be extended in order\n                to “wait for quiet”. Such voting period extensions occur when a proposal’s voting results turn from\n                either a Yes majority to a No majority or vice versa.\n              </Typography>\n            }\n          />\n        </Box>\n      </Box>\n\n      {isExecuted ? null : (\n        <>\n          <Box sx={{ margin: \"30px 0 0 0\" }}>\n            <Box sx={{ display: \"flex\", gap: \"0 10px\" }}>\n              <Box sx={{ flex: 1 }}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  sx={{\n                    background: theme.colors.successDark,\n                    \"&:hover\": {\n                      background: theme.colors.successDark,\n                    },\n                  }}\n                  disabled={checkedNeuronIds.length === 0}\n                  onClick={handleAdopt}\n                >\n                  <Trans>Adopt</Trans>\n                </Button>\n              </Box>\n\n              <Box sx={{ flex: 1 }}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  sx={{\n                    background: theme.colors.errorDark,\n                    \"&:hover\": {\n                      background: theme.colors.errorDark,\n                    },\n                  }}\n                  disabled={checkedNeuronIds.length === 0}\n                  onClick={handleReject}\n                >\n                  <Trans>Reject</Trans>\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n\n          {voteableNeurons && proposal_data && voteableNeurons.length > 0 ? (\n            <Box sx={{ margin: \"10px 0 0 0\" }}>\n              <VotableNeurons\n                voteableNeurons={voteableNeurons}\n                onCheckedChange={handleCheckedNeuronIdsChange}\n                proposal={proposal_data}\n              />\n            </Box>\n          ) : (\n            <Typography sx={{ margin: \"10px 0 0 0\" }}>\n              <Trans>You don't have any neurons to vote</Trans>\n            </Typography>\n          )}\n\n          <VotedNeurons votedNeurons={votedNeurons} proposal_data={proposal_data} />\n\n          {ineligibleNeurons && ineligibleNeurons.length > 0 ? (\n            <Box sx={{ margin: \"20px 0 0 0\" }}>\n              <Box\n                sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\", cursor: \"pointer\" }}\n                onClick={() => setIneligibleOpen(!ineligibleOpen)}\n              >\n                <Typography>\n                  <Trans>{ineligibleNeurons.length} Ineligible neurons</Trans>\n                </Typography>\n                <ChevronDown size=\"18px\" style={{ transform: ineligibleOpen ? \"rotate(180deg)\" : \"rotate(0deg)\" }} />\n              </Box>\n              <Collapse in={ineligibleOpen}>\n                <Box sx={{ padding: \"12px\" }}>\n                  <Typography sx={{ fontSize: \"12px\" }}>\n                    <Trans>\n                      The following neurons are not eligible to vote. They either have dissolve delays of less than 1\n                      month, 1 day at the time when the proposal was submitted, or they were created after the proposal\n                      was submitted.\n                    </Trans>\n                  </Typography>\n\n                  <Box sx={{ margin: \"20px 0 0 0\", display: \"flex\", flexDirection: \"column\", gap: \"10px 0\" }}>\n                    {ineligibleNeurons.map((ineligibleNeuron, index) => (\n                      <Box\n                        key={ineligibleNeuron.id[0]?.id ? toHexString(ineligibleNeuron.id[0]?.id) : `neuron_${index}`}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          \"@media(max-width: 640px)\": {\n                            flexDirection: \"column\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"flex-start\",\n                          },\n                        }}\n                      >\n                        <Typography sx={{ fontSize: \"12px\" }}>\n                          {neuronFormat(ineligibleNeuron) ? shorten(neuronFormat(ineligibleNeuron).id, 12) : \"--\"}\n                        </Typography>\n                        {minimumDissolveDelaySeconds !== undefined ? (\n                          <Typography sx={{ fontSize: \"12px\" }}>\n                            <Trans>\n                              dissolve delay &lt; {secondsToDissolveDelayDuration(minimumDissolveDelaySeconds)}\n                            </Trans>\n                          </Typography>\n                        ) : null}\n                      </Box>\n                    ))}\n                  </Box>\n                </Box>\n              </Collapse>\n            </Box>\n          ) : null}\n\n          <VoteConfirm\n            governance_id={governance_id}\n            proposal_id={proposal_id}\n            proposal={proposal_data}\n            rejected={!adopt}\n            open={confirmOpen}\n            onClose={() => setConfirmOpen(false)}\n            votingPowers={votingPowers}\n            voteNeurons={voteNeurons}\n            onVoteCallEnded={onRefresh}\n          />\n        </>\n      )}\n    </Box>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport { Trans } from \"@lingui/macro\";\nimport { useMemo } from \"react\";\nimport { MainCard } from \"components/index\";\nimport type { ProposalData } from \"@w2e/types\";\nimport { nowInSeconds } from \"@w2e/utils\";\n\nexport interface ProposalSummaryProps {\n  proposal_data: ProposalData | undefined;\n}\n\nexport function ProposalSummary({ proposal_data }: ProposalSummaryProps) {\n  const { title, summary } = useMemo(() => {\n    if (!proposal_data) return {};\n\n    const __proposal = proposal_data.proposal[0];\n\n    if (!__proposal) return {};\n\n    const deadline = proposal_data.wait_for_quiet_state[0]?.current_deadline_timestamp_seconds;\n\n    return {\n      url: __proposal.url,\n      title: __proposal.title,\n      action: __proposal.action,\n      summary: __proposal.summary,\n      seconds: deadline ? deadline - BigInt(nowInSeconds()) : undefined,\n      isExecuted: proposal_data.executed_timestamp_seconds > 0,\n      proposer: proposal_data.proposer[0]?.id,\n    };\n  }, [proposal_data]);\n\n  return (\n    <MainCard level={4} sx={{ margin: \"20px 0 0 0\" }}>\n      <Box>\n        <Typography sx={{ color: \"text.primary\", fontWeight: 500, fontSize: \"16px\" }}>\n          <Trans>Proposal Summary</Trans>\n        </Typography>\n\n        <Typography sx={{ margin: \"20px 0 0 0\" }}>{title}</Typography>\n\n        <MainCard sx={{ margin: \"20px 0 0 0\" }} level={3}>\n          <Typography>{summary}</Typography>\n        </MainCard>\n      </Box>\n    </MainCard>\n  );\n}\n","/* eslint-disable react/no-danger */\nimport { useEffect, useMemo } from \"react\";\nimport { Remarkable } from \"remarkable\";\nimport { linkify } from \"remarkable/linkify\";\nimport copyToClipboard from \"copy-to-clipboard\";\n\nimport \"./base.css\";\n\nconst remarkable = new Remarkable({\n  html: false,\n  breaks: true,\n  typographer: false,\n  linkTarget: \"_blank\",\n}).use(linkify);\n\nexport default function BaseMarkdown({ content }: { content: string }) {\n  const html = useMemo(() => {\n    const body = content;\n\n    // // Add the ipfs gateway to markdown images that start with ipfs://\n    // function replaceIpfsUrl(match, p1) {\n    //   return match.replace(p1, getIpfsUrl(p1));\n    // }\n\n    // body = body.replace(/!\\[.*?\\]\\((ipfs:\\/\\/[a-zA-Z0-9]+?)\\)/g, replaceIpfsUrl);\n\n    return remarkable.render(body);\n  }, [content]);\n\n  useEffect(() => {\n    document\n      ?.querySelector(\".markdown-body\")\n      ?.querySelectorAll(\"pre>code\")\n      .forEach((code) => {\n        code.parentElement?.classList.add(\"rounded-lg\");\n        const copyButton = document.createElement(\"a\");\n        const icon = document.createElement(\"i\");\n        icon.classList.add(\"copy\");\n        icon.classList.add(\"text-skin-text\");\n        icon.classList.add(\"iconcopy\");\n        icon.classList.add(\"iconfont\");\n        copyButton.appendChild(icon);\n        copyButton.addEventListener(\"click\", () => {\n          const codeText = (code as HTMLElement).innerText.trim();\n          copyToClipboard(codeText);\n        });\n        code.appendChild(copyButton);\n      });\n  }, []);\n\n  return <div className=\"markdown-body\" dangerouslySetInnerHTML={{ __html: html }} />;\n}\n","import { Box, Typography } from \"@mui/material\";\nimport { Trans } from \"@lingui/macro\";\nimport { useMemo } from \"react\";\nimport { MainCard } from \"components/index\";\nimport type { ProposalData } from \"@w2e/types\";\nimport { nowInSeconds } from \"@w2e/utils\";\nimport BaseMarkdown from \"components/markdown/BaseMarkdown\";\n\nexport interface ProposalPayloadProps {\n  proposal_data: ProposalData | undefined;\n}\n\nexport function ProposalPayload({ proposal_data }: ProposalPayloadProps) {\n  const { payload_text_rendering } = useMemo(() => {\n    if (!proposal_data) return {};\n\n    const __proposal = proposal_data.proposal[0];\n\n    if (!__proposal) return {};\n\n    const deadline = proposal_data.wait_for_quiet_state[0]?.current_deadline_timestamp_seconds;\n\n    return {\n      url: __proposal.url,\n      title: __proposal.title,\n      action: __proposal.action,\n      summary: __proposal.summary,\n      seconds: deadline ? deadline - BigInt(nowInSeconds()) : undefined,\n      isExecuted: proposal_data.executed_timestamp_seconds > 0,\n      proposer: proposal_data.proposer[0]?.id,\n      payload_text_rendering: proposal_data.payload_text_rendering[0],\n    };\n  }, [proposal_data]);\n\n  return (\n    <MainCard level={4} sx={{ margin: \"20px 0 0 0\" }}>\n      <Box>\n        <Typography sx={{ color: \"text.primary\", fontWeight: 500, fontSize: \"16px\" }}>\n          <Trans>Payload</Trans>\n        </Typography>\n\n        {payload_text_rendering ? (\n          <MainCard level={3} sx={{ margin: \"20px 0 0 0\" }}>\n            <BaseMarkdown content={payload_text_rendering} />\n          </MainCard>\n        ) : null}\n      </Box>\n    </MainCard>\n  );\n}\n","import { Box, Typography, useTheme } from \"@mui/material\";\nimport { useListDeployedSNSs, useProposal, useListNeurons, useNervousSystemParameters } from \"@w2e/hooks\";\nimport { useMemo, useState } from \"react\";\nimport { LoadingRow, TokenImage, MainCard } from \"components/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useAccountPrincipalString } from \"store/auth/hooks\";\nimport { nowInSeconds } from \"@w2e/utils\";\nimport { useTokenInfo } from \"hooks/token\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ArrowLeft } from \"react-feather\";\n\nimport { ProposalDetails } from \"./components/ProposalDetails\";\nimport { VotingResult } from \"./components/VotingResult\";\nimport { ProposalSummary } from \"./components/Summary\";\nimport { ProposalPayload } from \"./components/Payload\";\n\nexport default function Voting() {\n  const theme = useTheme() as Theme;\n  const history = useHistory();\n  const principal = useAccountPrincipalString();\n  const [refreshTrigger, setRefreshTrigger] = useState<number>(0);\n\n  const { governance_id, proposal_id } = useParams<{ governance_id: string; proposal_id: string }>();\n\n  const { result: listedSNS } = useListDeployedSNSs();\n\n  const sns = useMemo(() => {\n    if (!governance_id || !listedSNS) return undefined;\n    const instance = listedSNS.instances.find((e) => e.governance_canister_id.toString() === governance_id);\n    if (!instance) return undefined;\n    return instance;\n  }, [listedSNS, governance_id]);\n\n  const ledger_id = sns?.ledger_canister_id.toString();\n\n  const { result: tokenInfo } = useTokenInfo(ledger_id);\n  const { result: proposal_data, loading } = useProposal(\n    governance_id,\n    proposal_id ? BigInt(proposal_id) : undefined,\n    refreshTrigger,\n  );\n\n  const { result: listNeurons } = useListNeurons({\n    canisterId: governance_id,\n    limit: 100,\n    of_principal: principal,\n    refresh: refreshTrigger,\n  });\n\n  const { result: neuronSystemParameters } = useNervousSystemParameters(governance_id);\n\n  const { title, isExecuted } = useMemo(() => {\n    if (!proposal_data) return {};\n\n    const __proposal = proposal_data.proposal[0];\n\n    if (!__proposal) return {};\n\n    const deadline = proposal_data.wait_for_quiet_state[0]?.current_deadline_timestamp_seconds;\n\n    return {\n      url: __proposal.url,\n      title: __proposal.title,\n      action: __proposal.action,\n      summary: __proposal.summary,\n      seconds: deadline ? deadline - BigInt(nowInSeconds()) : undefined,\n      isExecuted: proposal_data.executed_timestamp_seconds > 0,\n      proposer: proposal_data.proposer[0]?.id,\n    };\n  }, [proposal_data]);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Box sx={{ width: \"100%\", maxWidth: \"1400px\" }}>\n        <MainCard>\n          <Box sx={{ margin: \"0 0 12px 0\" }}>\n            <ArrowLeft color=\"#ffffff\" size=\"20px\" cursor=\"pointer\" onClick={handleBack} />\n          </Box>\n\n          <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n            {loading ? (\n              <Box sx={{ width: \"100%\" }}>\n                <LoadingRow>\n                  <div />\n                  <div />\n                  <div />\n                  <div />\n                  <div />\n                  <div />\n                  <div />\n                  <div />\n                </LoadingRow>\n              </Box>\n            ) : (\n              <Box sx={{ width: \"100%\" }}>\n                <Box sx={{ display: \"flex\", gap: \"0 8px\", alignItems: \"center\" }}>\n                  <TokenImage logo={tokenInfo?.logo} size=\"24px\" tokenId={ledger_id} />\n                  <Typography fontSize=\"16px\" fontWeight={500} color=\"text.primary\">\n                    {title}\n                  </Typography>\n                  <Box\n                    sx={{\n                      padding: \"3px 10px\",\n                      borderRadius: \"12px\",\n                      background: !isExecuted ? theme.colors.successDark : theme.palette.background.level1,\n                    }}\n                  >\n                    <Typography color=\"text.primary\">{isExecuted ? \"Executed\" : \"Open\"}</Typography>\n                  </Box>\n                </Box>\n\n                <MainCard level={4} sx={{ margin: \"20px 0 0 0\" }}>\n                  <Box\n                    sx={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"1fr 1fr\",\n                      gap: \"0 20px\",\n                      \"@media(max-width: 980px)\": {\n                        gridTemplateColumns: \"1fr\",\n                        gap: \"40px 0\",\n                      },\n                    }}\n                  >\n                    <ProposalDetails proposal_data={proposal_data} />\n\n                    <VotingResult\n                      proposal_id={proposal_id}\n                      governance_id={governance_id}\n                      proposal_data={proposal_data}\n                      neurons={listNeurons}\n                      neuronSystemParameters={neuronSystemParameters}\n                      onRefresh={() => setRefreshTrigger(refreshTrigger + 1)}\n                    />\n                  </Box>\n                </MainCard>\n\n                <ProposalSummary proposal_data={proposal_data} />\n\n                <ProposalPayload proposal_data={proposal_data} />\n              </Box>\n            )}\n          </Box>\n        </MainCard>\n      </Box>\n    </Box>\n  );\n}\n","import type { ProposalData } from \"@w2e/types\";\nimport { nowInSeconds, BigNumber } from \"@w2e/utils\";\nimport { SnsProposalDecisionStatus } from \"@w2e/constants\";\nimport { t } from \"@lingui/macro\";\n\nconst PROPOSAL_TYPES = [\n  {\n    id: 0,\n    name: \"All Topics\",\n    description: \"Catch-all w.r.t to following for all types of proposals.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 1,\n    name: \"Motion\",\n    description: \"Side-effect-less proposals to set general governance direction.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 2,\n    name: \"Manage nervous system parameters\",\n    description: \"Proposal to change the core parameters of SNS governance.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 3,\n    name: \"Upgrade SNS controlled canister\",\n    description: \"Proposal to upgrade the wasm of an SNS controlled canister.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 4,\n    name: \"Add nervous system function\",\n    description:\n      \"Proposal to add a new, user-defined, nervous system function:a canister call which can then be executed by proposal.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 5,\n    name: \"Remove nervous system function\",\n    description:\n      \"Proposal to remove a user-defined nervous system function,which will be no longer executable by proposal.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 6,\n    name: \"Execute nervous system function\",\n    description:\n      \"Proposal to execute a user-defined nervous system function,previously added by an AddNervousSystemFunction proposal. A canister call will be made when executed.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 7,\n    name: \"Upgrade SNS to next version\",\n    description: \"Proposal to upgrade the WASM of a core SNS canister.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 8,\n    name: \"Manage SNS metadata\",\n    description: \"Proposal to change the metadata associated with an SNS.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 9,\n    name: \"Transfer SNS treasury funds\",\n    description: \"Proposal to transfer funds from an SNS Governance controlled treasury account\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 10,\n    name: \"Register dapp canisters\",\n    description: \"Proposal to register a dapp canister with the SNS.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n  {\n    id: 11,\n    name: \"Deregister Dapp Canisters\",\n    description: \"Proposal to deregister a previously-registered dapp canister from the SNS.\",\n    function_type: { NativeNervousSystemFunction: {} },\n  },\n];\n\nexport function convertProposalNumberToText(action: bigint) {\n  return PROPOSAL_TYPES.find((e) => e.id === Number(action))?.name;\n}\n\nexport const SnsRewordsText = {\n  \"0\": t`Unknown`,\n  \"1\": t`Accepting Votes`,\n  \"2\": t`Ready to Settle`,\n  \"3\": t`Settled`,\n};\n\nexport enum SnsProposalRewardStatus {\n  PROPOSAL_REWARD_STATUS_UNSPECIFIED = 0,\n  PROPOSAL_REWARD_STATUS_ACCEPT_VOTES = 1,\n  PROPOSAL_REWARD_STATUS_READY_TO_SETTLE = 2,\n  PROPOSAL_REWARD_STATUS_SETTLED = 3,\n}\n\nexport const snsRewardStatus = ({\n  reward_event_round,\n  wait_for_quiet_state,\n  is_eligible_for_rewards,\n}: ProposalData): SnsProposalRewardStatus => {\n  if (reward_event_round > 0n) {\n    return SnsProposalRewardStatus.PROPOSAL_REWARD_STATUS_SETTLED;\n  }\n\n  const now = nowInSeconds();\n  const deadline = wait_for_quiet_state[0]?.current_deadline_timestamp_seconds;\n\n  if (!deadline) {\n    return SnsProposalRewardStatus.PROPOSAL_REWARD_STATUS_UNSPECIFIED;\n  }\n\n  if (now < deadline) {\n    return SnsProposalRewardStatus.PROPOSAL_REWARD_STATUS_ACCEPT_VOTES;\n  }\n\n  if (is_eligible_for_rewards) {\n    return SnsProposalRewardStatus.PROPOSAL_REWARD_STATUS_READY_TO_SETTLE;\n  }\n\n  return SnsProposalRewardStatus.PROPOSAL_REWARD_STATUS_SETTLED;\n};\n\nexport function getProposalStatus(proposal: ProposalData) {\n  const now = new Date().getTime();\n\n  if (!proposal.decided_timestamp_seconds || new BigNumber(proposal.decided_timestamp_seconds.toString()).gt(now)) {\n    return SnsProposalDecisionStatus.PROPOSAL_DECISION_STATUS_OPEN;\n  }\n\n  if (proposal.executed_timestamp_seconds && new BigNumber(proposal.executed_timestamp_seconds.toString()).lt(now)) {\n    return SnsProposalDecisionStatus.PROPOSAL_DECISION_STATUS_EXECUTED;\n  }\n\n  if (proposal.failed_timestamp_seconds && new BigNumber(proposal.failed_timestamp_seconds.toString(10)).lt(now)) {\n    return SnsProposalDecisionStatus.PROPOSAL_DECISION_STATUS_FAILED;\n  }\n\n  if (proposal.decided_timestamp_seconds && new BigNumber(proposal.decided_timestamp_seconds.toString(10)).lt(now)) {\n    const total = proposal.latest_tally[0]?.total;\n    const yes = proposal.latest_tally[0]?.yes;\n    const no = proposal.latest_tally[0]?.no;\n\n    if (total !== undefined && yes !== undefined && no !== undefined) {\n      // at least 3% of the total voting power\n      if (\n        (new BigNumber(yes.toString()).gt(no.toString(10)) &&\n          new BigNumber(total.toString()).times(3 / 100).lt(yes.toString())) ||\n        new BigNumber(yes.toString()).times(2).gt(total.toString(10))\n      ) {\n        return SnsProposalDecisionStatus.PROPOSAL_DECISION_STATUS_ADOPTED;\n      }\n\n      return SnsProposalDecisionStatus.PROPOSAL_DECISION_STATUS_REJECTED;\n    }\n  }\n\n  return undefined;\n}\n","import { sns_governance } from \"@w2e/actor\";\nimport { useCallback } from \"react\";\nimport { availableArgsNull, resultFormat } from \"@w2e/utils\";\nimport type { GetProposalResponse, ListProposalsResponse, ProposalData, ProposalId } from \"@w2e/types\";\nimport { useCallsData } from \"../useCallData\";\n\nexport async function getProposal(canisterId: string, proposal_id: bigint) {\n  const result = resultFormat<GetProposalResponse>(\n    await (\n      await sns_governance(canisterId)\n    ).get_proposal({\n      proposal_id: availableArgsNull<{ id: bigint }>({ id: proposal_id }),\n    }),\n  ).data?.result;\n\n  if (!result) return undefined;\n\n  const proposal: ProposalData | undefined = result[0]\n    ? \"Proposal\" in result[0]\n      ? result[0].Proposal\n      : undefined\n    : undefined;\n\n  return proposal;\n}\n\nexport function useProposal(governance_id: string | undefined, proposal_id: bigint | undefined, refresh?: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!governance_id || proposal_id === undefined) return undefined;\n      return await getProposal(governance_id, proposal_id);\n    }, [governance_id, proposal_id]),\n    refresh,\n  );\n}\n\nexport interface GetListProposalsArgs {\n  canisterId: string;\n  include_reward_status: Int32Array | number[];\n  limit: number;\n  include_status: Int32Array | number[];\n  exclude_type: BigUint64Array | bigint[];\n  before_proposal: [] | [ProposalId];\n}\n\nexport async function getListProposals({\n  canisterId,\n  include_reward_status,\n  include_status,\n  exclude_type,\n  before_proposal,\n  limit,\n}: GetListProposalsArgs) {\n  const result = resultFormat<ListProposalsResponse>(\n    await (\n      await sns_governance(canisterId)\n    ).list_proposals({\n      include_reward_status,\n      before_proposal,\n      limit,\n      exclude_type,\n      include_status,\n    }),\n  );\n\n  return result.data?.proposals;\n}\n\nexport interface UseListProposalsArgs {\n  canisterId: string | undefined;\n  include_reward_status: Int32Array | number[];\n  limit: number;\n  include_status: Int32Array | number[];\n  exclude_type: BigUint64Array | bigint[];\n  before_proposal: [] | [ProposalId];\n  refresh?: number;\n}\n\nexport function useListProposals({\n  canisterId,\n  limit,\n  refresh,\n  include_reward_status,\n  include_status,\n  exclude_type,\n  before_proposal,\n}: UseListProposalsArgs) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getListProposals({\n        canisterId,\n        include_status,\n        include_reward_status,\n        exclude_type,\n        limit,\n        before_proposal,\n      });\n    }, [canisterId, include_reward_status, limit, exclude_type, include_status, before_proposal]),\n    refresh,\n  );\n}\n"],"names":["Copy","_ref","content","openTips","useTips","_jsx","CopyIcon","onClick","handleCopy","copyToClipboard","TIP_SUCCESS","style","cursor","ProposalDetailItem","label","value","_jsxs","Box","sx","display","justifyContent","alignItems","children","Typography","component","ProposalDetails","_ref2","proposal_data","proposal_id","useParams","isExecuted","proposer","useMemo","_proposal_data$wait_f","_proposal_data$propos","__proposal","proposal","deadline","wait_for_quiet_state","current_deadline_timestamp_seconds","url","title","action","summary","seconds","BigInt","nowInSeconds","undefined","executed_timestamp_seconds","id","color","fontWeight","fontSize","Trans","margin","gridTemplateColumns","gap","convertProposalNumberToText","SnsRewordsText","snsRewardStatus","proposal_creation_timestamp_seconds","dayjs","Number","format","_Fragment","decided_timestamp_seconds","shorten","toHexString","formatPercentage","options","fraction","concat","BigNumber","toFixed","VotableNeurons","voteableNeurons","onCheckedChange","checkedNeurons","setCheckedNeurons","useState","votableOpen","setVoteableOpen","useEffect","map","neuron","neuronFormat","filter","votingPowers","getVotingPowers","voteableNeuron","formattedNeuron","includes","flexDirection","handleToggleOpen","width","values","0","length","1","ChevronDown","size","transform","votingPowerFormat","Collapse","in","padding","getVotingPower","Checkbox","checked","onChange","event","handleCheckedChange","neuronId","checkedNeuronIds","splice","indexOf","VoteConfirm","onVoteCallEnded","governance_id","rejected","onClose","voteNeurons","open","openFullscreenLoading","closeFullscreenLoading","useFullscreenLoading","openTip","loading","setLoading","ConfirmModal","onConfirm","async","vote_called","forEach","voteNeuron","_voteNeuron$id$","neuron_id","ballots","find","ballotId","vote","Vote","No","Yes","neuronVoteForProposal","then","_ref3","status","message","data","result","command","manage_error","Error","error_message","i18n","_","TIP_ERROR","text","Progressbar","yes","no","YesColor","NoColor","immediateMajorityPercent","standardMajorityPercent","theme","useTheme","position","height","borderRadius","background","palette","level3","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","top","left","className","bottom","colors","primaryMain","secondaryMain","VotedNeuronItem","successDark","errorDark","ballot","votingPower","getVote","ThumbsUp","ThumbsDown","VotedNeurons","votedNeurons","votedOpen","setVotedOpen","index","_neuron$id$","_neuron$id$2","VotingResult","neurons","neuronSystemParameters","onRefresh","setCheckedNeuronIds","ineligibleOpen","setIneligibleOpen","confirmOpen","setConfirmOpen","adopt","setAdopt","setVotingPowers","ineligibleNeurons","filterIneligibleNeurons","filterVotableNeurons","filterVotedNeurons","castVotesNo","castVotesYes","yesProportion","noProportion","_proposal_data$latest","_proposal_data$latest2","_proposal_data$latest3","_proposal_data$latest4","_proposal_data$latest5","_proposal_data$latest6","_proposal_data$minimu","_proposal_data$minimu2","latest_tally","total","yesNoSum","minimum_yes_proportion_of_exercised","basis_points","minimum_yes_proportion_of_total","minimumDissolveDelaySeconds","neuron_minimum_dissolve_delay_to_vote_seconds","align","toFormat","textAlign","secondsToDuration","CollapseText","description","flex","Button","variant","fullWidth","disabled","handleAdopt","handleReject","handleCheckedNeuronIdsChange","ineligibleNeuron","_ineligibleNeuron$id$","_ineligibleNeuron$id$2","secondsToDissolveDelayDuration","ProposalSummary","MainCard","level","remarkable","Remarkable","html","breaks","typographer","linkTarget","use","linkify","BaseMarkdown","body","render","_document","_document$querySelect","document","querySelector","querySelectorAll","code","_code$parentElement","parentElement","classList","add","copyButton","createElement","icon","appendChild","addEventListener","codeText","innerText","trim","dangerouslySetInnerHTML","__html","ProposalPayload","payload_text_rendering","Voting","history","useHistory","principal","useAccountPrincipalString","refreshTrigger","setRefreshTrigger","listedSNS","useListDeployedSNSs","sns","instance","instances","e","governance_canister_id","toString","ledger_id","ledger_canister_id","tokenInfo","useTokenInfo","useProposal","listNeurons","useListNeurons","canisterId","limit","of_principal","refresh","useNervousSystemParameters","maxWidth","ArrowLeft","handleBack","goBack","LoadingRow","TokenImage","logo","tokenId","level1","PROPOSAL_TYPES","name","function_type","NativeNervousSystemFunction","_PROPOSAL_TYPES$find","SnsProposalRewardStatus","_wait_for_quiet_state","reward_event_round","is_eligible_for_rewards","PROPOSAL_REWARD_STATUS_SETTLED","now","PROPOSAL_REWARD_STATUS_ACCEPT_VOTES","PROPOSAL_REWARD_STATUS_READY_TO_SETTLE","PROPOSAL_REWARD_STATUS_UNSPECIFIED","getProposalStatus","Date","getTime","gt","SnsProposalDecisionStatus","PROPOSAL_DECISION_STATUS_OPEN","lt","PROPOSAL_DECISION_STATUS_EXECUTED","failed_timestamp_seconds","PROPOSAL_DECISION_STATUS_FAILED","_proposal$latest_tall","_proposal$latest_tall2","_proposal$latest_tall3","times","PROPOSAL_DECISION_STATUS_ADOPTED","PROPOSAL_DECISION_STATUS_REJECTED","step","generator","throw","reject","done","resolve","fulfilled","apply","thisArg","_arguments","next","useCallback","__awaiter","_a","resultFormat","sns_governance","get_proposal","availableArgsNull","Proposal","getProposal","arguments","include_reward_status","include_status","exclude_type","before_proposal","_b","list_proposals","proposals"],"sourceRoot":""}